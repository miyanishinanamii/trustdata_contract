{
	"id": "ffb3563c69d67bb98002ee983c12c050",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MasterTradeConsentContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MasterTradeContractNFT is ERC721, Ownable {\n    struct MasterTradeContract {\n        string metadataURI;\n    }\n\n    mapping(uint256 => MasterTradeContract) public masterTradeContracts;\n    uint256 public nextMasterTradeContractId;\n\n    constructor(address initialOwner) Ownable(initialOwner) ERC721(\"MasterTradeContractNFT\", \"MTCNFT\") {}\n\n    function mintMasterTradeContract(address to, string memory metadataURI) public onlyOwner {\n        uint256 masterTradeContractId = nextMasterTradeContractId;\n        _mint(to, masterTradeContractId);\n        masterTradeContracts[masterTradeContractId] = MasterTradeContract(metadataURI);\n        nextMasterTradeContractId++;\n    }\n\n    function getMasterTradeContractDetails(uint256 masterTradeContractId) public view returns (MasterTradeContract memory) {\n        address owner = ownerOf(masterTradeContractId);\n        require(owner != address(0), \"MasterTradeContractNFT: master trade contract does not exist\");\n        return masterTradeContracts[masterTradeContractId];\n    }\n\n    function getLatestMasterTradeContractDetails() public view returns (MasterTradeContract memory) {\n        require(nextMasterTradeContractId > 0, \"MasterTradeContractNFT: no master trade contracts exist\");\n        return masterTradeContracts[nextMasterTradeContractId - 1];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MasterTradeConsentContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MasterTradeConsentContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MasterTradeConsentContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MasterTradeConsentContract.sol": {
				"MasterTradeContractNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestMasterTradeContractDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "metadataURI",
											"type": "string"
										}
									],
									"internalType": "struct MasterTradeContractNFT.MasterTradeContract",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "masterTradeContractId",
									"type": "uint256"
								}
							],
							"name": "getMasterTradeContractDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "metadataURI",
											"type": "string"
										}
									],
									"internalType": "struct MasterTradeContractNFT.MasterTradeContract",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "masterTradeContracts",
							"outputs": [
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "mintMasterTradeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextMasterTradeContractId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MasterTradeConsentContract.sol\":170:1488  contract MasterTradeContractNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MasterTradeConsentContract.sol\":415:516  constructor(address initialOwner) Ownable(initialOwner) ERC721(\"MasterTradeContractNFT\", \"MTCNFT\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MasterTradeConsentContract.sol\":457:469  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x16\n  dup2\n  mstore\n  0x20\n  add\n  0x4d61737465725472616465436f6e74726163744e465400000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x4d54434e46540000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MasterTradeConsentContract.sol\":415:516  constructor(address initialOwner) Ownable(initialOwner) ERC721(\"MasterTradeContractNFT\", \"MTCNFT\") {} */\n  pop\n    /* \"contracts/MasterTradeConsentContract.sol\":170:1488  contract MasterTradeContractNFT is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MasterTradeConsentContract.sol\":170:1488  contract MasterTradeContractNFT is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MasterTradeConsentContract.sol\":170:1488  contract MasterTradeContractNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb3a599ee\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb3a599ee\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf993d400\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9742db55\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa65c7494\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x2e9b6d62\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x2e9b6d62\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/MasterTradeConsentContract.sol\":1208:1486  function getLatestMasterTradeContractDetails() public view returns (MasterTradeContract memory) {... */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MasterTradeConsentContract.sol\":522:852  function mintMasterTradeContract(address to, string memory metadataURI) public onlyOwner {... */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/MasterTradeConsentContract.sol\":295:362  mapping(uint256 => MasterTradeContract) public masterTradeContracts */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MasterTradeConsentContract.sol\":368:408  uint256 public nextMasterTradeContractId */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/MasterTradeConsentContract.sol\":858:1202  function getMasterTradeContractDetails(uint256 masterTradeContractId) public view returns (MasterTradeContract memory) {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MasterTradeConsentContract.sol\":1208:1486  function getLatestMasterTradeContractDetails() public view returns (MasterTradeContract memory) {... */\n    tag_52:\n        /* \"contracts/MasterTradeConsentContract.sol\":1276:1302  MasterTradeContract memory */\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/MasterTradeConsentContract.sol\":1350:1351  0 */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":1322:1347  nextMasterTradeContractId */\n      sload(0x08)\n        /* \"contracts/MasterTradeConsentContract.sol\":1322:1351  nextMasterTradeContractId > 0 */\n      gt\n        /* \"contracts/MasterTradeConsentContract.sol\":1314:1411  require(nextMasterTradeContractId > 0, \"MasterTradeContractNFT: no master trade contracts exist\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/MasterTradeConsentContract.sol\":1428:1448  masterTradeContracts */\n      0x07\n        /* \"contracts/MasterTradeConsentContract.sol\":1428:1479  masterTradeContracts[nextMasterTradeContractId - 1] */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":1477:1478  1 */\n      0x01\n        /* \"contracts/MasterTradeConsentContract.sol\":1449:1474  nextMasterTradeContractId */\n      sload(0x08)\n        /* \"contracts/MasterTradeConsentContract.sol\":1449:1478  nextMasterTradeContractId - 1 */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/MasterTradeConsentContract.sol\":1428:1479  masterTradeContracts[nextMasterTradeContractId - 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MasterTradeConsentContract.sol\":1421:1479  return masterTradeContracts[nextMasterTradeContractId - 1] */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_118\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_118\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":1208:1486  function getLatestMasterTradeContractDetails() public view returns (MasterTradeContract memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_118\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_118\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MasterTradeConsentContract.sol\":522:852  function mintMasterTradeContract(address to, string memory metadataURI) public onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/MasterTradeConsentContract.sol\":621:650  uint256 masterTradeContractId */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":653:678  nextMasterTradeContractId */\n      sload(0x08)\n        /* \"contracts/MasterTradeConsentContract.sol\":621:678  uint256 masterTradeContractId = nextMasterTradeContractId */\n      swap1\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":688:720  _mint(to, masterTradeContractId) */\n      tag_178\n        /* \"contracts/MasterTradeConsentContract.sol\":694:696  to */\n      dup4\n        /* \"contracts/MasterTradeConsentContract.sol\":698:719  masterTradeContractId */\n      dup3\n        /* \"contracts/MasterTradeConsentContract.sol\":688:693  _mint */\n      tag_179\n        /* \"contracts/MasterTradeConsentContract.sol\":688:720  _mint(to, masterTradeContractId) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/MasterTradeConsentContract.sol\":776:808  MasterTradeContract(metadataURI) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MasterTradeConsentContract.sol\":796:807  metadataURI */\n      dup4\n        /* \"contracts/MasterTradeConsentContract.sol\":776:808  MasterTradeContract(metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":730:750  masterTradeContracts */\n      0x07\n        /* \"contracts/MasterTradeConsentContract.sol\":730:773  masterTradeContracts[masterTradeContractId] */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":751:772  masterTradeContractId */\n      dup4\n        /* \"contracts/MasterTradeConsentContract.sol\":730:773  masterTradeContracts[masterTradeContractId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MasterTradeConsentContract.sol\":730:808  masterTradeContracts[masterTradeContractId] = MasterTradeContract(metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":818:843  nextMasterTradeContractId */\n      0x08\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":818:845  nextMasterTradeContractId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":611:852  {... */\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":522:852  function mintMasterTradeContract(address to, string memory metadataURI) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MasterTradeConsentContract.sol\":295:362  mapping(uint256 => MasterTradeContract) public masterTradeContracts */\n    tag_86:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_118\n      jump\t// in\n    tag_188:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_118\n      jump\t// in\n    tag_189:\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MasterTradeConsentContract.sol\":368:408  uint256 public nextMasterTradeContractId */\n    tag_89:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_50\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_201\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_202)\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_205\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MasterTradeConsentContract.sol\":858:1202  function getMasterTradeContractDetails(uint256 masterTradeContractId) public view returns (MasterTradeContract memory) {... */\n    tag_109:\n        /* \"contracts/MasterTradeConsentContract.sol\":949:975  MasterTradeContract memory */\n      tag_214\n      tag_143\n      jump\t// in\n    tag_214:\n        /* \"contracts/MasterTradeConsentContract.sol\":987:1000  address owner */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":1003:1033  ownerOf(masterTradeContractId) */\n      tag_216\n        /* \"contracts/MasterTradeConsentContract.sol\":1011:1032  masterTradeContractId */\n      dup4\n        /* \"contracts/MasterTradeConsentContract.sol\":1003:1010  ownerOf */\n      tag_60\n        /* \"contracts/MasterTradeConsentContract.sol\":1003:1033  ownerOf(masterTradeContractId) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/MasterTradeConsentContract.sol\":987:1033  address owner = ownerOf(masterTradeContractId) */\n      swap1\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":1068:1069  0 */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":1051:1070  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MasterTradeConsentContract.sol\":1051:1056  owner */\n      dup2\n        /* \"contracts/MasterTradeConsentContract.sol\":1051:1070  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MasterTradeConsentContract.sol\":1043:1135  require(owner != address(0), \"MasterTradeContractNFT: master trade contract does not exist\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/MasterTradeConsentContract.sol\":1152:1172  masterTradeContracts */\n      0x07\n        /* \"contracts/MasterTradeConsentContract.sol\":1152:1195  masterTradeContracts[masterTradeContractId] */\n      0x00\n        /* \"contracts/MasterTradeConsentContract.sol\":1173:1194  masterTradeContractId */\n      dup5\n        /* \"contracts/MasterTradeConsentContract.sol\":1152:1195  masterTradeContracts[masterTradeContractId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MasterTradeConsentContract.sol\":1145:1195  return masterTradeContracts[masterTradeContractId] */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_220\n      swap1\n      tag_118\n      jump\t// in\n    tag_220:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_118\n      jump\t// in\n    tag_221:\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_223\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_222)\n    tag_223:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/MasterTradeConsentContract.sol\":858:1202  function getMasterTradeContractDetails(uint256 masterTradeContractId) public view returns (MasterTradeContract memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      0x01\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_269\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_274\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_273)\n    tag_274:\n      0x60\n      swap2\n      pop\n    tag_273:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_285\n      jumpi\n      tag_286\n      tag_287\n      jump\t// in\n    tag_286:\n    tag_285:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_288\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_288:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_291\n      jumpi\n      tag_292\n      tag_293\n      jump\t// in\n    tag_292:\n    tag_291:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_297\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_301\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap3\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_317\n      jumpi\n      tag_318\n      tag_293\n      jump\t// in\n    tag_318:\n    tag_317:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_320\n      jumpi\n      tag_321\n      tag_293\n      jump\t// in\n    tag_321:\n    tag_320:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_323\n      jumpi\n      tag_324\n      tag_293\n      jump\t// in\n    tag_324:\n    tag_323:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_326\n      jumpi\n      tag_327\n      tag_293\n      jump\t// in\n    tag_327:\n    tag_326:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_329\n      jumpi\n      tag_330\n      tag_293\n      jump\t// in\n    tag_330:\n    tag_329:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_332\n      jumpi\n      tag_333\n      tag_293\n      jump\t// in\n    tag_333:\n    tag_332:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_337\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_339\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_143:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_341:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_342:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_343:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_344:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_345:\n        /* \"#utility.yul\":561:584   */\n      tag_412\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_344\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_413:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_346:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_415\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_345\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_418\n      tag_342\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":833:952   */\n    tag_417:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_419\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_346\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_347:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_348:\n        /* \"#utility.yul\":1268:1289   */\n      tag_422\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_347\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_424\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_348\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_349:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_350:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_351:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_352:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_353:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_430\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_349\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2222:2293   */\n      tag_431\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_350\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_432\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_351\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2392:2421   */\n      tag_433\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_352\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_36:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_435\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_353\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_354:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_355:\n        /* \"#utility.yul\":2909:2933   */\n      tag_438\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_354\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_439:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_356:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_441\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_355\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_39:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_444\n      tag_342\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3185:3304   */\n    tag_443:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_445\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_356\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_357:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_358:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_448\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_357\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_359:\n        /* \"#utility.yul\":3765:3789   */\n      tag_450\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_358\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_42:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_452\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_359\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_360:\n        /* \"#utility.yul\":4103:4127   */\n      tag_454\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_358\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_455:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_361:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_457\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_360\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_45:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_460\n      tag_342\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4396:4515   */\n    tag_459:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_461\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_361\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_462\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_356\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_49:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_465\n      tag_342\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4893:5012   */\n    tag_464:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_466\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_361\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_467\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_361\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_468\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_356\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5567   */\n    tag_362:\n        /* \"#utility.yul\":5482:5493   */\n      0x00\n        /* \"#utility.yul\":5516:5522   */\n      dup3\n        /* \"#utility.yul\":5511:5514   */\n      dup3\n        /* \"#utility.yul\":5504:5523   */\n      mstore\n        /* \"#utility.yul\":5556:5560   */\n      0x20\n        /* \"#utility.yul\":5551:5554   */\n      dup3\n        /* \"#utility.yul\":5547:5561   */\n      add\n        /* \"#utility.yul\":5532:5561   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5573:5930   */\n    tag_363:\n        /* \"#utility.yul\":5651:5654   */\n      0x00\n        /* \"#utility.yul\":5679:5718   */\n      tag_471\n        /* \"#utility.yul\":5712:5717   */\n      dup3\n        /* \"#utility.yul\":5679:5718   */\n      tag_349\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5734:5795   */\n      tag_472\n        /* \"#utility.yul\":5788:5794   */\n      dup2\n        /* \"#utility.yul\":5783:5786   */\n      dup6\n        /* \"#utility.yul\":5734:5795   */\n      tag_362\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5727:5795   */\n      swap4\n      pop\n        /* \"#utility.yul\":5804:5869   */\n      tag_473\n        /* \"#utility.yul\":5862:5868   */\n      dup2\n        /* \"#utility.yul\":5857:5860   */\n      dup6\n        /* \"#utility.yul\":5850:5854   */\n      0x20\n        /* \"#utility.yul\":5843:5848   */\n      dup7\n        /* \"#utility.yul\":5839:5855   */\n      add\n        /* \"#utility.yul\":5804:5869   */\n      tag_351\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5894:5923   */\n      tag_474\n        /* \"#utility.yul\":5916:5922   */\n      dup2\n        /* \"#utility.yul\":5894:5923   */\n      tag_352\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5889:5892   */\n      dup5\n        /* \"#utility.yul\":5885:5924   */\n      add\n        /* \"#utility.yul\":5878:5924   */\n      swap2\n      pop\n        /* \"#utility.yul\":5655:5930   */\n      pop\n        /* \"#utility.yul\":5573:5930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6046:6509   */\n    tag_364:\n        /* \"#utility.yul\":6189:6192   */\n      0x00\n        /* \"#utility.yul\":6225:6229   */\n      0x20\n        /* \"#utility.yul\":6220:6223   */\n      dup4\n        /* \"#utility.yul\":6216:6230   */\n      add\n        /* \"#utility.yul\":6319:6323   */\n      0x00\n        /* \"#utility.yul\":6312:6317   */\n      dup4\n        /* \"#utility.yul\":6308:6324   */\n      add\n        /* \"#utility.yul\":6302:6325   */\n      mload\n        /* \"#utility.yul\":6372:6375   */\n      dup5\n        /* \"#utility.yul\":6366:6370   */\n      dup3\n        /* \"#utility.yul\":6362:6376   */\n      sub\n        /* \"#utility.yul\":6355:6359   */\n      0x00\n        /* \"#utility.yul\":6350:6353   */\n      dup7\n        /* \"#utility.yul\":6346:6360   */\n      add\n        /* \"#utility.yul\":6339:6377   */\n      mstore\n        /* \"#utility.yul\":6398:6471   */\n      tag_476\n        /* \"#utility.yul\":6466:6470   */\n      dup3\n        /* \"#utility.yul\":6452:6464   */\n      dup3\n        /* \"#utility.yul\":6398:6471   */\n      tag_363\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6390:6471   */\n      swap2\n      pop\n        /* \"#utility.yul\":6240:6482   */\n      pop\n        /* \"#utility.yul\":6499:6503   */\n      dup1\n        /* \"#utility.yul\":6492:6503   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6509   */\n      pop\n        /* \"#utility.yul\":6046:6509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6936   */\n    tag_54:\n        /* \"#utility.yul\":6682:6686   */\n      0x00\n        /* \"#utility.yul\":6720:6722   */\n      0x20\n        /* \"#utility.yul\":6709:6718   */\n      dup3\n        /* \"#utility.yul\":6705:6723   */\n      add\n        /* \"#utility.yul\":6697:6723   */\n      swap1\n      pop\n        /* \"#utility.yul\":6769:6778   */\n      dup2\n        /* \"#utility.yul\":6763:6767   */\n      dup2\n        /* \"#utility.yul\":6759:6779   */\n      sub\n        /* \"#utility.yul\":6755:6756   */\n      0x00\n        /* \"#utility.yul\":6744:6753   */\n      dup4\n        /* \"#utility.yul\":6740:6757   */\n      add\n        /* \"#utility.yul\":6733:6780   */\n      mstore\n        /* \"#utility.yul\":6797:6929   */\n      tag_478\n        /* \"#utility.yul\":6924:6928   */\n      dup2\n        /* \"#utility.yul\":6915:6921   */\n      dup5\n        /* \"#utility.yul\":6797:6929   */\n      tag_364\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":6789:6929   */\n      swap1\n      pop\n        /* \"#utility.yul\":6515:6936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6942:7271   */\n    tag_64:\n        /* \"#utility.yul\":7001:7007   */\n      0x00\n        /* \"#utility.yul\":7050:7052   */\n      0x20\n        /* \"#utility.yul\":7038:7047   */\n      dup3\n        /* \"#utility.yul\":7029:7036   */\n      dup5\n        /* \"#utility.yul\":7025:7048   */\n      sub\n        /* \"#utility.yul\":7021:7053   */\n      slt\n        /* \"#utility.yul\":7018:7137   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":7056:7135   */\n      tag_481\n      tag_342\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7018:7137   */\n    tag_480:\n        /* \"#utility.yul\":7176:7177   */\n      0x00\n        /* \"#utility.yul\":7201:7254   */\n      tag_482\n        /* \"#utility.yul\":7246:7253   */\n      dup5\n        /* \"#utility.yul\":7237:7243   */\n      dup3\n        /* \"#utility.yul\":7226:7235   */\n      dup6\n        /* \"#utility.yul\":7222:7244   */\n      add\n        /* \"#utility.yul\":7201:7254   */\n      tag_361\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7191:7254   */\n      swap2\n      pop\n        /* \"#utility.yul\":7147:7264   */\n      pop\n        /* \"#utility.yul\":6942:7271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7277:7395   */\n    tag_365:\n        /* \"#utility.yul\":7364:7388   */\n      tag_484\n        /* \"#utility.yul\":7382:7387   */\n      dup2\n        /* \"#utility.yul\":7364:7388   */\n      tag_354\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7359:7362   */\n      dup3\n        /* \"#utility.yul\":7352:7389   */\n      mstore\n        /* \"#utility.yul\":7277:7395   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7401:7623   */\n    tag_67:\n        /* \"#utility.yul\":7494:7498   */\n      0x00\n        /* \"#utility.yul\":7532:7534   */\n      0x20\n        /* \"#utility.yul\":7521:7530   */\n      dup3\n        /* \"#utility.yul\":7517:7535   */\n      add\n        /* \"#utility.yul\":7509:7535   */\n      swap1\n      pop\n        /* \"#utility.yul\":7545:7616   */\n      tag_486\n        /* \"#utility.yul\":7613:7614   */\n      0x00\n        /* \"#utility.yul\":7602:7611   */\n      dup4\n        /* \"#utility.yul\":7598:7615   */\n      add\n        /* \"#utility.yul\":7589:7595   */\n      dup5\n        /* \"#utility.yul\":7545:7616   */\n      tag_365\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7401:7623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7629:7746   */\n    tag_366:\n        /* \"#utility.yul\":7738:7739   */\n      0x00\n        /* \"#utility.yul\":7735:7736   */\n      dup1\n        /* \"#utility.yul\":7728:7740   */\n      revert\n        /* \"#utility.yul\":7752:7869   */\n    tag_367:\n        /* \"#utility.yul\":7861:7862   */\n      0x00\n        /* \"#utility.yul\":7858:7859   */\n      dup1\n        /* \"#utility.yul\":7851:7863   */\n      revert\n        /* \"#utility.yul\":7875:8055   */\n    tag_287:\n        /* \"#utility.yul\":7923:8000   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7920:7921   */\n      0x00\n        /* \"#utility.yul\":7913:8001   */\n      mstore\n        /* \"#utility.yul\":8020:8024   */\n      0x41\n        /* \"#utility.yul\":8017:8018   */\n      0x04\n        /* \"#utility.yul\":8010:8025   */\n      mstore\n        /* \"#utility.yul\":8044:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8042   */\n      0x00\n        /* \"#utility.yul\":8034:8049   */\n      revert\n        /* \"#utility.yul\":8061:8342   */\n    tag_368:\n        /* \"#utility.yul\":8144:8171   */\n      tag_491\n        /* \"#utility.yul\":8166:8170   */\n      dup3\n        /* \"#utility.yul\":8144:8171   */\n      tag_352\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8136:8142   */\n      dup2\n        /* \"#utility.yul\":8132:8172   */\n      add\n        /* \"#utility.yul\":8274:8280   */\n      dup2\n        /* \"#utility.yul\":8262:8272   */\n      dup2\n        /* \"#utility.yul\":8259:8281   */\n      lt\n        /* \"#utility.yul\":8238:8256   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8226:8236   */\n      dup3\n        /* \"#utility.yul\":8223:8257   */\n      gt\n        /* \"#utility.yul\":8220:8282   */\n      or\n        /* \"#utility.yul\":8217:8305   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":8285:8303   */\n      tag_493\n      tag_287\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8217:8305   */\n    tag_492:\n        /* \"#utility.yul\":8325:8335   */\n      dup1\n        /* \"#utility.yul\":8321:8323   */\n      0x40\n        /* \"#utility.yul\":8314:8336   */\n      mstore\n        /* \"#utility.yul\":8104:8342   */\n      pop\n        /* \"#utility.yul\":8061:8342   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8348:8477   */\n    tag_369:\n        /* \"#utility.yul\":8382:8388   */\n      0x00\n        /* \"#utility.yul\":8409:8429   */\n      tag_495\n      tag_341\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8399:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8438:8471   */\n      tag_496\n        /* \"#utility.yul\":8466:8470   */\n      dup3\n        /* \"#utility.yul\":8458:8464   */\n      dup3\n        /* \"#utility.yul\":8438:8471   */\n      tag_368\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8348:8477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8483:8791   */\n    tag_370:\n        /* \"#utility.yul\":8545:8549   */\n      0x00\n        /* \"#utility.yul\":8635:8653   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8627:8633   */\n      dup3\n        /* \"#utility.yul\":8624:8654   */\n      gt\n        /* \"#utility.yul\":8621:8677   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8657:8675   */\n      tag_499\n      tag_287\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8621:8677   */\n    tag_498:\n        /* \"#utility.yul\":8695:8724   */\n      tag_500\n        /* \"#utility.yul\":8717:8723   */\n      dup3\n        /* \"#utility.yul\":8695:8724   */\n      tag_352\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8687:8724   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:8783   */\n      0x20\n        /* \"#utility.yul\":8773:8777   */\n      dup2\n        /* \"#utility.yul\":8769:8784   */\n      add\n        /* \"#utility.yul\":8761:8784   */\n      swap1\n      pop\n        /* \"#utility.yul\":8483:8791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8797:8945   */\n    tag_371:\n        /* \"#utility.yul\":8895:8901   */\n      dup3\n        /* \"#utility.yul\":8890:8893   */\n      dup2\n        /* \"#utility.yul\":8885:8888   */\n      dup4\n        /* \"#utility.yul\":8872:8902   */\n      calldatacopy\n        /* \"#utility.yul\":8936:8937   */\n      0x00\n        /* \"#utility.yul\":8927:8933   */\n      dup4\n        /* \"#utility.yul\":8922:8925   */\n      dup4\n        /* \"#utility.yul\":8918:8934   */\n      add\n        /* \"#utility.yul\":8911:8938   */\n      mstore\n        /* \"#utility.yul\":8797:8945   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8951:9376   */\n    tag_372:\n        /* \"#utility.yul\":9029:9034   */\n      0x00\n        /* \"#utility.yul\":9054:9120   */\n      tag_503\n        /* \"#utility.yul\":9070:9119   */\n      tag_504\n        /* \"#utility.yul\":9112:9118   */\n      dup5\n        /* \"#utility.yul\":9070:9119   */\n      tag_370\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9054:9120   */\n      tag_369\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9045:9120   */\n      swap1\n      pop\n        /* \"#utility.yul\":9143:9149   */\n      dup3\n        /* \"#utility.yul\":9136:9141   */\n      dup2\n        /* \"#utility.yul\":9129:9150   */\n      mstore\n        /* \"#utility.yul\":9181:9185   */\n      0x20\n        /* \"#utility.yul\":9174:9179   */\n      dup2\n        /* \"#utility.yul\":9170:9186   */\n      add\n        /* \"#utility.yul\":9219:9222   */\n      dup5\n        /* \"#utility.yul\":9210:9216   */\n      dup5\n        /* \"#utility.yul\":9205:9208   */\n      dup5\n        /* \"#utility.yul\":9201:9217   */\n      add\n        /* \"#utility.yul\":9198:9223   */\n      gt\n        /* \"#utility.yul\":9195:9307   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9226:9305   */\n      tag_506\n      tag_367\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9195:9307   */\n    tag_505:\n        /* \"#utility.yul\":9316:9370   */\n      tag_507\n        /* \"#utility.yul\":9363:9369   */\n      dup5\n        /* \"#utility.yul\":9358:9361   */\n      dup3\n        /* \"#utility.yul\":9353:9356   */\n      dup6\n        /* \"#utility.yul\":9316:9370   */\n      tag_371\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9035:9376   */\n      pop\n        /* \"#utility.yul\":8951:9376   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9396:9736   */\n    tag_373:\n        /* \"#utility.yul\":9452:9457   */\n      0x00\n        /* \"#utility.yul\":9501:9504   */\n      dup3\n        /* \"#utility.yul\":9494:9498   */\n      0x1f\n        /* \"#utility.yul\":9486:9492   */\n      dup4\n        /* \"#utility.yul\":9482:9499   */\n      add\n        /* \"#utility.yul\":9478:9505   */\n      slt\n        /* \"#utility.yul\":9468:9590   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9509:9588   */\n      tag_510\n      tag_366\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9468:9590   */\n    tag_509:\n        /* \"#utility.yul\":9626:9632   */\n      dup2\n        /* \"#utility.yul\":9613:9633   */\n      calldataload\n        /* \"#utility.yul\":9651:9730   */\n      tag_511\n        /* \"#utility.yul\":9726:9729   */\n      dup5\n        /* \"#utility.yul\":9718:9724   */\n      dup3\n        /* \"#utility.yul\":9711:9715   */\n      0x20\n        /* \"#utility.yul\":9703:9709   */\n      dup7\n        /* \"#utility.yul\":9699:9716   */\n      add\n        /* \"#utility.yul\":9651:9730   */\n      tag_372\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9642:9730   */\n      swap2\n      pop\n        /* \"#utility.yul\":9458:9736   */\n      pop\n        /* \"#utility.yul\":9396:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:10396   */\n    tag_78:\n        /* \"#utility.yul\":9820:9826   */\n      0x00\n        /* \"#utility.yul\":9828:9834   */\n      dup1\n        /* \"#utility.yul\":9877:9879   */\n      0x40\n        /* \"#utility.yul\":9865:9874   */\n      dup4\n        /* \"#utility.yul\":9856:9863   */\n      dup6\n        /* \"#utility.yul\":9852:9875   */\n      sub\n        /* \"#utility.yul\":9848:9880   */\n      slt\n        /* \"#utility.yul\":9845:9964   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9883:9962   */\n      tag_514\n      tag_342\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9845:9964   */\n    tag_513:\n        /* \"#utility.yul\":10003:10004   */\n      0x00\n        /* \"#utility.yul\":10028:10081   */\n      tag_515\n        /* \"#utility.yul\":10073:10080   */\n      dup6\n        /* \"#utility.yul\":10064:10070   */\n      dup3\n        /* \"#utility.yul\":10053:10062   */\n      dup7\n        /* \"#utility.yul\":10049:10071   */\n      add\n        /* \"#utility.yul\":10028:10081   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10018:10081   */\n      swap3\n      pop\n        /* \"#utility.yul\":9974:10091   */\n      pop\n        /* \"#utility.yul\":10158:10160   */\n      0x20\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10143:10161   */\n      add\n        /* \"#utility.yul\":10130:10162   */\n      calldataload\n        /* \"#utility.yul\":10189:10207   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10181:10187   */\n      dup2\n        /* \"#utility.yul\":10178:10208   */\n      gt\n        /* \"#utility.yul\":10175:10292   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":10211:10290   */\n      tag_517\n      tag_343\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10175:10292   */\n    tag_516:\n        /* \"#utility.yul\":10316:10379   */\n      tag_518\n        /* \"#utility.yul\":10371:10378   */\n      dup6\n        /* \"#utility.yul\":10362:10368   */\n      dup3\n        /* \"#utility.yul\":10351:10360   */\n      dup7\n        /* \"#utility.yul\":10347:10369   */\n      add\n        /* \"#utility.yul\":10316:10379   */\n      tag_373\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10306:10379   */\n      swap2\n      pop\n        /* \"#utility.yul\":10101:10389   */\n      pop\n        /* \"#utility.yul\":9742:10396   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10402:10518   */\n    tag_374:\n        /* \"#utility.yul\":10472:10493   */\n      tag_520\n        /* \"#utility.yul\":10487:10492   */\n      dup2\n        /* \"#utility.yul\":10472:10493   */\n      tag_347\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10465:10470   */\n      dup2\n        /* \"#utility.yul\":10462:10494   */\n      eq\n        /* \"#utility.yul\":10452:10512   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10508:10509   */\n      0x00\n        /* \"#utility.yul\":10505:10506   */\n      dup1\n        /* \"#utility.yul\":10498:10510   */\n      revert\n        /* \"#utility.yul\":10452:10512   */\n    tag_521:\n        /* \"#utility.yul\":10402:10518   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10524:10657   */\n    tag_375:\n        /* \"#utility.yul\":10567:10572   */\n      0x00\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10592:10612   */\n      calldataload\n        /* \"#utility.yul\":10583:10612   */\n      swap1\n      pop\n        /* \"#utility.yul\":10621:10651   */\n      tag_523\n        /* \"#utility.yul\":10645:10650   */\n      dup2\n        /* \"#utility.yul\":10621:10651   */\n      tag_374\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10524:10657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10663:11131   */\n    tag_82:\n        /* \"#utility.yul\":10728:10734   */\n      0x00\n        /* \"#utility.yul\":10736:10742   */\n      dup1\n        /* \"#utility.yul\":10785:10787   */\n      0x40\n        /* \"#utility.yul\":10773:10782   */\n      dup4\n        /* \"#utility.yul\":10764:10771   */\n      dup6\n        /* \"#utility.yul\":10760:10783   */\n      sub\n        /* \"#utility.yul\":10756:10788   */\n      slt\n        /* \"#utility.yul\":10753:10872   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10791:10870   */\n      tag_526\n      tag_342\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10753:10872   */\n    tag_525:\n        /* \"#utility.yul\":10911:10912   */\n      0x00\n        /* \"#utility.yul\":10936:10989   */\n      tag_527\n        /* \"#utility.yul\":10981:10988   */\n      dup6\n        /* \"#utility.yul\":10972:10978   */\n      dup3\n        /* \"#utility.yul\":10961:10970   */\n      dup7\n        /* \"#utility.yul\":10957:10979   */\n      add\n        /* \"#utility.yul\":10936:10989   */\n      tag_361\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10926:10989   */\n      swap3\n      pop\n        /* \"#utility.yul\":10882:10999   */\n      pop\n        /* \"#utility.yul\":11038:11040   */\n      0x20\n        /* \"#utility.yul\":11064:11114   */\n      tag_528\n        /* \"#utility.yul\":11106:11113   */\n      dup6\n        /* \"#utility.yul\":11097:11103   */\n      dup3\n        /* \"#utility.yul\":11086:11095   */\n      dup7\n        /* \"#utility.yul\":11082:11104   */\n      add\n        /* \"#utility.yul\":11064:11114   */\n      tag_375\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11054:11114   */\n      swap2\n      pop\n        /* \"#utility.yul\":11009:11124   */\n      pop\n        /* \"#utility.yul\":10663:11131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11444   */\n    tag_376:\n        /* \"#utility.yul\":11198:11202   */\n      0x00\n        /* \"#utility.yul\":11288:11306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11280:11286   */\n      dup3\n        /* \"#utility.yul\":11277:11307   */\n      gt\n        /* \"#utility.yul\":11274:11330   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":11310:11328   */\n      tag_531\n      tag_287\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11274:11330   */\n    tag_530:\n        /* \"#utility.yul\":11348:11377   */\n      tag_532\n        /* \"#utility.yul\":11370:11376   */\n      dup3\n        /* \"#utility.yul\":11348:11377   */\n      tag_352\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11340:11377   */\n      swap1\n      pop\n        /* \"#utility.yul\":11432:11436   */\n      0x20\n        /* \"#utility.yul\":11426:11430   */\n      dup2\n        /* \"#utility.yul\":11422:11437   */\n      add\n        /* \"#utility.yul\":11414:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11137:11444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11450:11873   */\n    tag_377:\n        /* \"#utility.yul\":11527:11532   */\n      0x00\n        /* \"#utility.yul\":11552:11617   */\n      tag_534\n        /* \"#utility.yul\":11568:11616   */\n      tag_535\n        /* \"#utility.yul\":11609:11615   */\n      dup5\n        /* \"#utility.yul\":11568:11616   */\n      tag_376\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11552:11617   */\n      tag_369\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11543:11617   */\n      swap1\n      pop\n        /* \"#utility.yul\":11640:11646   */\n      dup3\n        /* \"#utility.yul\":11633:11638   */\n      dup2\n        /* \"#utility.yul\":11626:11647   */\n      mstore\n        /* \"#utility.yul\":11678:11682   */\n      0x20\n        /* \"#utility.yul\":11671:11676   */\n      dup2\n        /* \"#utility.yul\":11667:11683   */\n      add\n        /* \"#utility.yul\":11716:11719   */\n      dup5\n        /* \"#utility.yul\":11707:11713   */\n      dup5\n        /* \"#utility.yul\":11702:11705   */\n      dup5\n        /* \"#utility.yul\":11698:11714   */\n      add\n        /* \"#utility.yul\":11695:11720   */\n      gt\n        /* \"#utility.yul\":11692:11804   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":11723:11802   */\n      tag_537\n      tag_367\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11692:11804   */\n    tag_536:\n        /* \"#utility.yul\":11813:11867   */\n      tag_538\n        /* \"#utility.yul\":11860:11866   */\n      dup5\n        /* \"#utility.yul\":11855:11858   */\n      dup3\n        /* \"#utility.yul\":11850:11853   */\n      dup6\n        /* \"#utility.yul\":11813:11867   */\n      tag_371\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11533:11873   */\n      pop\n        /* \"#utility.yul\":11450:11873   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11892:12230   */\n    tag_378:\n        /* \"#utility.yul\":11947:11952   */\n      0x00\n        /* \"#utility.yul\":11996:11999   */\n      dup3\n        /* \"#utility.yul\":11989:11993   */\n      0x1f\n        /* \"#utility.yul\":11981:11987   */\n      dup4\n        /* \"#utility.yul\":11977:11994   */\n      add\n        /* \"#utility.yul\":11973:12000   */\n      slt\n        /* \"#utility.yul\":11963:12085   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":12004:12083   */\n      tag_541\n      tag_366\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11963:12085   */\n    tag_540:\n        /* \"#utility.yul\":12121:12127   */\n      dup2\n        /* \"#utility.yul\":12108:12128   */\n      calldataload\n        /* \"#utility.yul\":12146:12224   */\n      tag_542\n        /* \"#utility.yul\":12220:12223   */\n      dup5\n        /* \"#utility.yul\":12212:12218   */\n      dup3\n        /* \"#utility.yul\":12205:12209   */\n      0x20\n        /* \"#utility.yul\":12197:12203   */\n      dup7\n        /* \"#utility.yul\":12193:12210   */\n      add\n        /* \"#utility.yul\":12146:12224   */\n      tag_377\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12137:12224   */\n      swap2\n      pop\n        /* \"#utility.yul\":11953:12230   */\n      pop\n        /* \"#utility.yul\":11892:12230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:13179   */\n    tag_93:\n        /* \"#utility.yul\":12331:12337   */\n      0x00\n        /* \"#utility.yul\":12339:12345   */\n      dup1\n        /* \"#utility.yul\":12347:12353   */\n      0x00\n        /* \"#utility.yul\":12355:12361   */\n      dup1\n        /* \"#utility.yul\":12404:12407   */\n      0x80\n        /* \"#utility.yul\":12392:12401   */\n      dup6\n        /* \"#utility.yul\":12383:12390   */\n      dup8\n        /* \"#utility.yul\":12379:12402   */\n      sub\n        /* \"#utility.yul\":12375:12408   */\n      slt\n        /* \"#utility.yul\":12372:12492   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":12411:12490   */\n      tag_545\n      tag_342\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12372:12492   */\n    tag_544:\n        /* \"#utility.yul\":12531:12532   */\n      0x00\n        /* \"#utility.yul\":12556:12609   */\n      tag_546\n        /* \"#utility.yul\":12601:12608   */\n      dup8\n        /* \"#utility.yul\":12592:12598   */\n      dup3\n        /* \"#utility.yul\":12581:12590   */\n      dup9\n        /* \"#utility.yul\":12577:12599   */\n      add\n        /* \"#utility.yul\":12556:12609   */\n      tag_361\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":12546:12609   */\n      swap5\n      pop\n        /* \"#utility.yul\":12502:12619   */\n      pop\n        /* \"#utility.yul\":12658:12660   */\n      0x20\n        /* \"#utility.yul\":12684:12737   */\n      tag_547\n        /* \"#utility.yul\":12729:12736   */\n      dup8\n        /* \"#utility.yul\":12720:12726   */\n      dup3\n        /* \"#utility.yul\":12709:12718   */\n      dup9\n        /* \"#utility.yul\":12705:12727   */\n      add\n        /* \"#utility.yul\":12684:12737   */\n      tag_361\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12674:12737   */\n      swap4\n      pop\n        /* \"#utility.yul\":12629:12747   */\n      pop\n        /* \"#utility.yul\":12786:12788   */\n      0x40\n        /* \"#utility.yul\":12812:12865   */\n      tag_548\n        /* \"#utility.yul\":12857:12864   */\n      dup8\n        /* \"#utility.yul\":12848:12854   */\n      dup3\n        /* \"#utility.yul\":12837:12846   */\n      dup9\n        /* \"#utility.yul\":12833:12855   */\n      add\n        /* \"#utility.yul\":12812:12865   */\n      tag_356\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":12802:12865   */\n      swap3\n      pop\n        /* \"#utility.yul\":12757:12875   */\n      pop\n        /* \"#utility.yul\":12942:12944   */\n      0x60\n        /* \"#utility.yul\":12931:12940   */\n      dup6\n        /* \"#utility.yul\":12927:12945   */\n      add\n        /* \"#utility.yul\":12914:12946   */\n      calldataload\n        /* \"#utility.yul\":12973:12991   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12965:12971   */\n      dup2\n        /* \"#utility.yul\":12962:12992   */\n      gt\n        /* \"#utility.yul\":12959:13076   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":12995:13074   */\n      tag_550\n      tag_343\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12959:13076   */\n    tag_549:\n        /* \"#utility.yul\":13100:13162   */\n      tag_551\n        /* \"#utility.yul\":13154:13161   */\n      dup8\n        /* \"#utility.yul\":13145:13151   */\n      dup3\n        /* \"#utility.yul\":13134:13143   */\n      dup9\n        /* \"#utility.yul\":13130:13152   */\n      add\n        /* \"#utility.yul\":13100:13162   */\n      tag_378\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13090:13162   */\n      swap2\n      pop\n        /* \"#utility.yul\":12885:13172   */\n      pop\n        /* \"#utility.yul\":12236:13179   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13185:13659   */\n    tag_101:\n        /* \"#utility.yul\":13253:13259   */\n      0x00\n        /* \"#utility.yul\":13261:13267   */\n      dup1\n        /* \"#utility.yul\":13310:13312   */\n      0x40\n        /* \"#utility.yul\":13298:13307   */\n      dup4\n        /* \"#utility.yul\":13289:13296   */\n      dup6\n        /* \"#utility.yul\":13285:13308   */\n      sub\n        /* \"#utility.yul\":13281:13313   */\n      slt\n        /* \"#utility.yul\":13278:13397   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":13316:13395   */\n      tag_554\n      tag_342\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13278:13397   */\n    tag_553:\n        /* \"#utility.yul\":13436:13437   */\n      0x00\n        /* \"#utility.yul\":13461:13514   */\n      tag_555\n        /* \"#utility.yul\":13506:13513   */\n      dup6\n        /* \"#utility.yul\":13497:13503   */\n      dup3\n        /* \"#utility.yul\":13486:13495   */\n      dup7\n        /* \"#utility.yul\":13482:13504   */\n      add\n        /* \"#utility.yul\":13461:13514   */\n      tag_361\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13451:13514   */\n      swap3\n      pop\n        /* \"#utility.yul\":13407:13524   */\n      pop\n        /* \"#utility.yul\":13563:13565   */\n      0x20\n        /* \"#utility.yul\":13589:13642   */\n      tag_556\n        /* \"#utility.yul\":13634:13641   */\n      dup6\n        /* \"#utility.yul\":13625:13631   */\n      dup3\n        /* \"#utility.yul\":13614:13623   */\n      dup7\n        /* \"#utility.yul\":13610:13632   */\n      add\n        /* \"#utility.yul\":13589:13642   */\n      tag_361\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13579:13642   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13652   */\n      pop\n        /* \"#utility.yul\":13185:13659   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13665:13845   */\n    tag_379:\n        /* \"#utility.yul\":13713:13790   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13710:13711   */\n      0x00\n        /* \"#utility.yul\":13703:13791   */\n      mstore\n        /* \"#utility.yul\":13810:13814   */\n      0x22\n        /* \"#utility.yul\":13807:13808   */\n      0x04\n        /* \"#utility.yul\":13800:13815   */\n      mstore\n        /* \"#utility.yul\":13834:13838   */\n      0x24\n        /* \"#utility.yul\":13831:13832   */\n      0x00\n        /* \"#utility.yul\":13824:13839   */\n      revert\n        /* \"#utility.yul\":13851:14171   */\n    tag_118:\n        /* \"#utility.yul\":13895:13901   */\n      0x00\n        /* \"#utility.yul\":13932:13933   */\n      0x02\n        /* \"#utility.yul\":13926:13930   */\n      dup3\n        /* \"#utility.yul\":13922:13934   */\n      div\n        /* \"#utility.yul\":13912:13934   */\n      swap1\n      pop\n        /* \"#utility.yul\":13979:13980   */\n      0x01\n        /* \"#utility.yul\":13973:13977   */\n      dup3\n        /* \"#utility.yul\":13969:13981   */\n      and\n        /* \"#utility.yul\":14000:14018   */\n      dup1\n        /* \"#utility.yul\":13990:14071   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":14056:14060   */\n      0x7f\n        /* \"#utility.yul\":14048:14054   */\n      dup3\n        /* \"#utility.yul\":14044:14061   */\n      and\n        /* \"#utility.yul\":14034:14061   */\n      swap2\n      pop\n        /* \"#utility.yul\":13990:14071   */\n    tag_559:\n        /* \"#utility.yul\":14118:14120   */\n      0x20\n        /* \"#utility.yul\":14110:14116   */\n      dup3\n        /* \"#utility.yul\":14107:14121   */\n      lt\n        /* \"#utility.yul\":14087:14105   */\n      dup2\n        /* \"#utility.yul\":14084:14122   */\n      sub\n        /* \"#utility.yul\":14081:14165   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":14137:14155   */\n      tag_561\n      tag_379\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14081:14165   */\n    tag_560:\n        /* \"#utility.yul\":13902:14171   */\n      pop\n        /* \"#utility.yul\":13851:14171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14177:14619   */\n    tag_141:\n        /* \"#utility.yul\":14326:14330   */\n      0x00\n        /* \"#utility.yul\":14364:14366   */\n      0x60\n        /* \"#utility.yul\":14353:14362   */\n      dup3\n        /* \"#utility.yul\":14349:14367   */\n      add\n        /* \"#utility.yul\":14341:14367   */\n      swap1\n      pop\n        /* \"#utility.yul\":14377:14448   */\n      tag_563\n        /* \"#utility.yul\":14445:14446   */\n      0x00\n        /* \"#utility.yul\":14434:14443   */\n      dup4\n        /* \"#utility.yul\":14430:14447   */\n      add\n        /* \"#utility.yul\":14421:14427   */\n      dup7\n        /* \"#utility.yul\":14377:14448   */\n      tag_359\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14458:14530   */\n      tag_564\n        /* \"#utility.yul\":14526:14528   */\n      0x20\n        /* \"#utility.yul\":14515:14524   */\n      dup4\n        /* \"#utility.yul\":14511:14529   */\n      add\n        /* \"#utility.yul\":14502:14508   */\n      dup6\n        /* \"#utility.yul\":14458:14530   */\n      tag_365\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14540:14612   */\n      tag_565\n        /* \"#utility.yul\":14608:14610   */\n      0x40\n        /* \"#utility.yul\":14597:14606   */\n      dup4\n        /* \"#utility.yul\":14593:14611   */\n      add\n        /* \"#utility.yul\":14584:14590   */\n      dup5\n        /* \"#utility.yul\":14540:14612   */\n      tag_359\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14177:14619   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14625:14867   */\n    tag_380:\n        /* \"#utility.yul\":14765:14799   */\n      0x4d61737465725472616465436f6e74726163744e46543a206e6f206d61737465\n        /* \"#utility.yul\":14761:14762   */\n      0x00\n        /* \"#utility.yul\":14753:14759   */\n      dup3\n        /* \"#utility.yul\":14749:14763   */\n      add\n        /* \"#utility.yul\":14742:14800   */\n      mstore\n        /* \"#utility.yul\":14834:14859   */\n      0x7220747261646520636f6e747261637473206578697374000000000000000000\n        /* \"#utility.yul\":14829:14831   */\n      0x20\n        /* \"#utility.yul\":14821:14827   */\n      dup3\n        /* \"#utility.yul\":14817:14832   */\n      add\n        /* \"#utility.yul\":14810:14860   */\n      mstore\n        /* \"#utility.yul\":14625:14867   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14873:15239   */\n    tag_381:\n        /* \"#utility.yul\":15015:15018   */\n      0x00\n        /* \"#utility.yul\":15036:15103   */\n      tag_568\n        /* \"#utility.yul\":15100:15102   */\n      0x37\n        /* \"#utility.yul\":15095:15098   */\n      dup4\n        /* \"#utility.yul\":15036:15103   */\n      tag_350\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15029:15103   */\n      swap2\n      pop\n        /* \"#utility.yul\":15112:15205   */\n      tag_569\n        /* \"#utility.yul\":15201:15204   */\n      dup3\n        /* \"#utility.yul\":15112:15205   */\n      tag_380\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15230:15232   */\n      0x40\n        /* \"#utility.yul\":15225:15228   */\n      dup3\n        /* \"#utility.yul\":15221:15233   */\n      add\n        /* \"#utility.yul\":15214:15233   */\n      swap1\n      pop\n        /* \"#utility.yul\":14873:15239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15245:15664   */\n    tag_147:\n        /* \"#utility.yul\":15411:15415   */\n      0x00\n        /* \"#utility.yul\":15449:15451   */\n      0x20\n        /* \"#utility.yul\":15438:15447   */\n      dup3\n        /* \"#utility.yul\":15434:15452   */\n      add\n        /* \"#utility.yul\":15426:15452   */\n      swap1\n      pop\n        /* \"#utility.yul\":15498:15507   */\n      dup2\n        /* \"#utility.yul\":15492:15496   */\n      dup2\n        /* \"#utility.yul\":15488:15508   */\n      sub\n        /* \"#utility.yul\":15484:15485   */\n      0x00\n        /* \"#utility.yul\":15473:15482   */\n      dup4\n        /* \"#utility.yul\":15469:15486   */\n      add\n        /* \"#utility.yul\":15462:15509   */\n      mstore\n        /* \"#utility.yul\":15526:15657   */\n      tag_571\n        /* \"#utility.yul\":15652:15656   */\n      dup2\n        /* \"#utility.yul\":15526:15657   */\n      tag_381\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15518:15657   */\n      swap1\n      pop\n        /* \"#utility.yul\":15245:15664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15670:15850   */\n    tag_382:\n        /* \"#utility.yul\":15718:15795   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15715:15716   */\n      0x00\n        /* \"#utility.yul\":15708:15796   */\n      mstore\n        /* \"#utility.yul\":15815:15819   */\n      0x11\n        /* \"#utility.yul\":15812:15813   */\n      0x04\n        /* \"#utility.yul\":15805:15820   */\n      mstore\n        /* \"#utility.yul\":15839:15843   */\n      0x24\n        /* \"#utility.yul\":15836:15837   */\n      0x00\n        /* \"#utility.yul\":15829:15844   */\n      revert\n        /* \"#utility.yul\":15856:16050   */\n    tag_149:\n        /* \"#utility.yul\":15896:15900   */\n      0x00\n        /* \"#utility.yul\":15916:15936   */\n      tag_574\n        /* \"#utility.yul\":15934:15935   */\n      dup3\n        /* \"#utility.yul\":15916:15936   */\n      tag_354\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15911:15936   */\n      swap2\n      pop\n        /* \"#utility.yul\":15950:15970   */\n      tag_575\n        /* \"#utility.yul\":15968:15969   */\n      dup4\n        /* \"#utility.yul\":15950:15970   */\n      tag_354\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15945:15970   */\n      swap3\n      pop\n        /* \"#utility.yul\":15994:15995   */\n      dup3\n        /* \"#utility.yul\":15991:15992   */\n      dup3\n        /* \"#utility.yul\":15987:15996   */\n      sub\n        /* \"#utility.yul\":15979:15996   */\n      swap1\n      pop\n        /* \"#utility.yul\":16018:16019   */\n      dup2\n        /* \"#utility.yul\":16012:16016   */\n      dup2\n        /* \"#utility.yul\":16009:16020   */\n      gt\n        /* \"#utility.yul\":16006:16043   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":16023:16041   */\n      tag_577\n      tag_382\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16006:16043   */\n    tag_576:\n        /* \"#utility.yul\":15856:16050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16056:16197   */\n    tag_383:\n        /* \"#utility.yul\":16105:16109   */\n      0x00\n        /* \"#utility.yul\":16128:16131   */\n      dup2\n        /* \"#utility.yul\":16120:16131   */\n      swap1\n      pop\n        /* \"#utility.yul\":16151:16154   */\n      dup2\n        /* \"#utility.yul\":16148:16149   */\n      0x00\n        /* \"#utility.yul\":16141:16155   */\n      mstore\n        /* \"#utility.yul\":16185:16189   */\n      0x20\n        /* \"#utility.yul\":16182:16183   */\n      0x00\n        /* \"#utility.yul\":16172:16190   */\n      keccak256\n        /* \"#utility.yul\":16164:16190   */\n      swap1\n      pop\n        /* \"#utility.yul\":16056:16197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16203:16296   */\n    tag_384:\n        /* \"#utility.yul\":16240:16246   */\n      0x00\n        /* \"#utility.yul\":16287:16289   */\n      0x20\n        /* \"#utility.yul\":16282:16284   */\n      0x1f\n        /* \"#utility.yul\":16275:16280   */\n      dup4\n        /* \"#utility.yul\":16271:16285   */\n      add\n        /* \"#utility.yul\":16267:16290   */\n      div\n        /* \"#utility.yul\":16257:16290   */\n      swap1\n      pop\n        /* \"#utility.yul\":16203:16296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16302:16409   */\n    tag_385:\n        /* \"#utility.yul\":16346:16354   */\n      0x00\n        /* \"#utility.yul\":16396:16401   */\n      dup3\n        /* \"#utility.yul\":16390:16394   */\n      dup3\n        /* \"#utility.yul\":16386:16402   */\n      shl\n        /* \"#utility.yul\":16365:16402   */\n      swap1\n      pop\n        /* \"#utility.yul\":16302:16409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16415:16808   */\n    tag_386:\n        /* \"#utility.yul\":16484:16490   */\n      0x00\n        /* \"#utility.yul\":16534:16535   */\n      0x08\n        /* \"#utility.yul\":16522:16532   */\n      dup4\n        /* \"#utility.yul\":16518:16536   */\n      mul\n        /* \"#utility.yul\":16557:16654   */\n      tag_582\n        /* \"#utility.yul\":16587:16653   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16576:16585   */\n      dup3\n        /* \"#utility.yul\":16557:16654   */\n      tag_385\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16675:16714   */\n      tag_583\n        /* \"#utility.yul\":16705:16713   */\n      dup7\n        /* \"#utility.yul\":16694:16703   */\n      dup4\n        /* \"#utility.yul\":16675:16714   */\n      tag_385\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16663:16714   */\n      swap6\n      pop\n        /* \"#utility.yul\":16747:16751   */\n      dup1\n        /* \"#utility.yul\":16743:16752   */\n      not\n        /* \"#utility.yul\":16736:16741   */\n      dup5\n        /* \"#utility.yul\":16732:16753   */\n      and\n        /* \"#utility.yul\":16723:16753   */\n      swap4\n      pop\n        /* \"#utility.yul\":16796:16800   */\n      dup1\n        /* \"#utility.yul\":16786:16794   */\n      dup7\n        /* \"#utility.yul\":16782:16801   */\n      and\n        /* \"#utility.yul\":16775:16780   */\n      dup5\n        /* \"#utility.yul\":16772:16802   */\n      or\n        /* \"#utility.yul\":16762:16802   */\n      swap3\n      pop\n        /* \"#utility.yul\":16491:16808   */\n      pop\n      pop\n        /* \"#utility.yul\":16415:16808   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16814:16874   */\n    tag_387:\n        /* \"#utility.yul\":16842:16845   */\n      0x00\n        /* \"#utility.yul\":16863:16868   */\n      dup2\n        /* \"#utility.yul\":16856:16868   */\n      swap1\n      pop\n        /* \"#utility.yul\":16814:16874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16880:17022   */\n    tag_388:\n        /* \"#utility.yul\":16930:16939   */\n      0x00\n        /* \"#utility.yul\":16963:17016   */\n      tag_586\n        /* \"#utility.yul\":16981:17015   */\n      tag_587\n        /* \"#utility.yul\":16990:17014   */\n      tag_588\n        /* \"#utility.yul\":17008:17013   */\n      dup5\n        /* \"#utility.yul\":16990:17014   */\n      tag_354\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":16981:17015   */\n      tag_387\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":16963:17016   */\n      tag_354\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16950:17016   */\n      swap1\n      pop\n        /* \"#utility.yul\":16880:17022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17028:17103   */\n    tag_389:\n        /* \"#utility.yul\":17071:17074   */\n      0x00\n        /* \"#utility.yul\":17092:17097   */\n      dup2\n        /* \"#utility.yul\":17085:17097   */\n      swap1\n      pop\n        /* \"#utility.yul\":17028:17103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17109:17378   */\n    tag_390:\n        /* \"#utility.yul\":17219:17258   */\n      tag_591\n        /* \"#utility.yul\":17250:17257   */\n      dup4\n        /* \"#utility.yul\":17219:17258   */\n      tag_388\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17280:17371   */\n      tag_592\n        /* \"#utility.yul\":17329:17370   */\n      tag_593\n        /* \"#utility.yul\":17353:17369   */\n      dup3\n        /* \"#utility.yul\":17329:17370   */\n      tag_389\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17321:17327   */\n      dup5\n        /* \"#utility.yul\":17314:17318   */\n      dup5\n        /* \"#utility.yul\":17308:17319   */\n      sload\n        /* \"#utility.yul\":17280:17371   */\n      tag_386\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17274:17278   */\n      dup3\n        /* \"#utility.yul\":17267:17372   */\n      sstore\n        /* \"#utility.yul\":17185:17378   */\n      pop\n        /* \"#utility.yul\":17109:17378   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17384:17457   */\n    tag_391:\n        /* \"#utility.yul\":17429:17432   */\n      0x00\n        /* \"#utility.yul\":17384:17457   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17463:17652   */\n    tag_392:\n        /* \"#utility.yul\":17540:17572   */\n      tag_596\n      tag_391\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17581:17646   */\n      tag_597\n        /* \"#utility.yul\":17639:17645   */\n      dup2\n        /* \"#utility.yul\":17631:17637   */\n      dup5\n        /* \"#utility.yul\":17625:17629   */\n      dup5\n        /* \"#utility.yul\":17581:17646   */\n      tag_390\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":17516:17652   */\n      pop\n        /* \"#utility.yul\":17463:17652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17658:17844   */\n    tag_393:\n        /* \"#utility.yul\":17718:17838   */\n    tag_599:\n        /* \"#utility.yul\":17735:17738   */\n      dup2\n        /* \"#utility.yul\":17728:17733   */\n      dup2\n        /* \"#utility.yul\":17725:17739   */\n      lt\n        /* \"#utility.yul\":17718:17838   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":17789:17828   */\n      tag_602\n        /* \"#utility.yul\":17826:17827   */\n      0x00\n        /* \"#utility.yul\":17819:17824   */\n      dup3\n        /* \"#utility.yul\":17789:17828   */\n      tag_392\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17762:17763   */\n      0x01\n        /* \"#utility.yul\":17755:17760   */\n      dup2\n        /* \"#utility.yul\":17751:17764   */\n      add\n        /* \"#utility.yul\":17742:17764   */\n      swap1\n      pop\n        /* \"#utility.yul\":17718:17838   */\n      jump(tag_599)\n    tag_601:\n        /* \"#utility.yul\":17658:17844   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17850:18393   */\n    tag_394:\n        /* \"#utility.yul\":17951:17953   */\n      0x1f\n        /* \"#utility.yul\":17946:17949   */\n      dup3\n        /* \"#utility.yul\":17943:17954   */\n      gt\n        /* \"#utility.yul\":17940:18386   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":17985:18023   */\n      tag_605\n        /* \"#utility.yul\":18017:18022   */\n      dup2\n        /* \"#utility.yul\":17985:18023   */\n      tag_383\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":18069:18098   */\n      tag_606\n        /* \"#utility.yul\":18087:18097   */\n      dup5\n        /* \"#utility.yul\":18069:18098   */\n      tag_384\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18059:18067   */\n      dup2\n        /* \"#utility.yul\":18055:18099   */\n      add\n        /* \"#utility.yul\":18252:18254   */\n      0x20\n        /* \"#utility.yul\":18240:18250   */\n      dup6\n        /* \"#utility.yul\":18237:18255   */\n      lt\n        /* \"#utility.yul\":18234:18283   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":18273:18281   */\n      dup2\n        /* \"#utility.yul\":18258:18281   */\n      swap1\n      pop\n        /* \"#utility.yul\":18234:18283   */\n    tag_607:\n        /* \"#utility.yul\":18296:18376   */\n      tag_608\n        /* \"#utility.yul\":18352:18374   */\n      tag_609\n        /* \"#utility.yul\":18370:18373   */\n      dup6\n        /* \"#utility.yul\":18352:18374   */\n      tag_384\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18342:18350   */\n      dup4\n        /* \"#utility.yul\":18338:18375   */\n      add\n        /* \"#utility.yul\":18325:18336   */\n      dup3\n        /* \"#utility.yul\":18296:18376   */\n      tag_393\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":17955:18386   */\n      pop\n      pop\n        /* \"#utility.yul\":17940:18386   */\n    tag_604:\n        /* \"#utility.yul\":17850:18393   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18399:18516   */\n    tag_395:\n        /* \"#utility.yul\":18453:18461   */\n      0x00\n        /* \"#utility.yul\":18503:18508   */\n      dup3\n        /* \"#utility.yul\":18497:18501   */\n      dup3\n        /* \"#utility.yul\":18493:18509   */\n      shr\n        /* \"#utility.yul\":18472:18509   */\n      swap1\n      pop\n        /* \"#utility.yul\":18399:18516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18522:18691   */\n    tag_396:\n        /* \"#utility.yul\":18566:18572   */\n      0x00\n        /* \"#utility.yul\":18599:18650   */\n      tag_612\n        /* \"#utility.yul\":18647:18648   */\n      0x00\n        /* \"#utility.yul\":18643:18649   */\n      not\n        /* \"#utility.yul\":18635:18640   */\n      dup5\n        /* \"#utility.yul\":18632:18633   */\n      0x08\n        /* \"#utility.yul\":18628:18641   */\n      mul\n        /* \"#utility.yul\":18599:18650   */\n      tag_395\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18595:18651   */\n      not\n        /* \"#utility.yul\":18680:18684   */\n      dup1\n        /* \"#utility.yul\":18674:18678   */\n      dup4\n        /* \"#utility.yul\":18670:18685   */\n      and\n        /* \"#utility.yul\":18660:18685   */\n      swap2\n      pop\n        /* \"#utility.yul\":18573:18691   */\n      pop\n        /* \"#utility.yul\":18522:18691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18696:18991   */\n    tag_397:\n        /* \"#utility.yul\":18772:18776   */\n      0x00\n        /* \"#utility.yul\":18918:18947   */\n      tag_614\n        /* \"#utility.yul\":18943:18946   */\n      dup4\n        /* \"#utility.yul\":18937:18941   */\n      dup4\n        /* \"#utility.yul\":18918:18947   */\n      tag_396\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":18910:18947   */\n      swap2\n      pop\n        /* \"#utility.yul\":18980:18983   */\n      dup3\n        /* \"#utility.yul\":18977:18978   */\n      0x02\n        /* \"#utility.yul\":18973:18984   */\n      mul\n        /* \"#utility.yul\":18967:18971   */\n      dup3\n        /* \"#utility.yul\":18964:18985   */\n      or\n        /* \"#utility.yul\":18956:18985   */\n      swap1\n      pop\n        /* \"#utility.yul\":18696:18991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18996:20391   */\n    tag_181:\n        /* \"#utility.yul\":19113:19150   */\n      tag_616\n        /* \"#utility.yul\":19146:19149   */\n      dup3\n        /* \"#utility.yul\":19113:19150   */\n      tag_349\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":19215:19233   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19207:19213   */\n      dup2\n        /* \"#utility.yul\":19204:19234   */\n      gt\n        /* \"#utility.yul\":19201:19257   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":19237:19255   */\n      tag_618\n      tag_287\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19201:19257   */\n    tag_617:\n        /* \"#utility.yul\":19281:19319   */\n      tag_619\n        /* \"#utility.yul\":19313:19317   */\n      dup3\n        /* \"#utility.yul\":19307:19318   */\n      sload\n        /* \"#utility.yul\":19281:19319   */\n      tag_118\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19366:19433   */\n      tag_620\n        /* \"#utility.yul\":19426:19432   */\n      dup3\n        /* \"#utility.yul\":19418:19424   */\n      dup3\n        /* \"#utility.yul\":19412:19416   */\n      dup6\n        /* \"#utility.yul\":19366:19433   */\n      tag_394\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":19460:19461   */\n      0x00\n        /* \"#utility.yul\":19484:19488   */\n      0x20\n        /* \"#utility.yul\":19471:19488   */\n      swap1\n      pop\n        /* \"#utility.yul\":19516:19518   */\n      0x1f\n        /* \"#utility.yul\":19508:19514   */\n      dup4\n        /* \"#utility.yul\":19505:19519   */\n      gt\n        /* \"#utility.yul\":19533:19534   */\n      0x01\n        /* \"#utility.yul\":19528:20146   */\n      dup2\n      eq\n      tag_622\n      jumpi\n        /* \"#utility.yul\":20190:20191   */\n      0x00\n        /* \"#utility.yul\":20207:20213   */\n      dup5\n        /* \"#utility.yul\":20204:20281   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":20256:20265   */\n      dup3\n        /* \"#utility.yul\":20251:20254   */\n      dup8\n        /* \"#utility.yul\":20247:20266   */\n      add\n        /* \"#utility.yul\":20241:20267   */\n      mload\n        /* \"#utility.yul\":20232:20267   */\n      swap1\n      pop\n        /* \"#utility.yul\":20204:20281   */\n    tag_623:\n        /* \"#utility.yul\":20307:20374   */\n      tag_624\n        /* \"#utility.yul\":20367:20373   */\n      dup6\n        /* \"#utility.yul\":20360:20365   */\n      dup3\n        /* \"#utility.yul\":20307:20374   */\n      tag_397\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":20301:20305   */\n      dup7\n        /* \"#utility.yul\":20294:20375   */\n      sstore\n        /* \"#utility.yul\":20163:20385   */\n      pop\n        /* \"#utility.yul\":19498:20385   */\n      jump(tag_621)\n        /* \"#utility.yul\":19528:20146   */\n    tag_622:\n        /* \"#utility.yul\":19580:19584   */\n      0x1f\n        /* \"#utility.yul\":19576:19585   */\n      not\n        /* \"#utility.yul\":19568:19574   */\n      dup5\n        /* \"#utility.yul\":19564:19586   */\n      and\n        /* \"#utility.yul\":19614:19651   */\n      tag_625\n        /* \"#utility.yul\":19646:19650   */\n      dup7\n        /* \"#utility.yul\":19614:19651   */\n      tag_383\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":19673:19674   */\n      0x00\n        /* \"#utility.yul\":19687:19895   */\n    tag_626:\n        /* \"#utility.yul\":19701:19708   */\n      dup3\n        /* \"#utility.yul\":19698:19699   */\n      dup2\n        /* \"#utility.yul\":19695:19709   */\n      lt\n        /* \"#utility.yul\":19687:19895   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":19780:19789   */\n      dup5\n        /* \"#utility.yul\":19775:19778   */\n      dup10\n        /* \"#utility.yul\":19771:19790   */\n      add\n        /* \"#utility.yul\":19765:19791   */\n      mload\n        /* \"#utility.yul\":19757:19763   */\n      dup3\n        /* \"#utility.yul\":19750:19792   */\n      sstore\n        /* \"#utility.yul\":19831:19832   */\n      0x01\n        /* \"#utility.yul\":19823:19829   */\n      dup3\n        /* \"#utility.yul\":19819:19833   */\n      add\n        /* \"#utility.yul\":19809:19833   */\n      swap2\n      pop\n        /* \"#utility.yul\":19878:19880   */\n      0x20\n        /* \"#utility.yul\":19867:19876   */\n      dup6\n        /* \"#utility.yul\":19863:19881   */\n      add\n        /* \"#utility.yul\":19850:19881   */\n      swap5\n      pop\n        /* \"#utility.yul\":19724:19728   */\n      0x20\n        /* \"#utility.yul\":19721:19722   */\n      dup2\n        /* \"#utility.yul\":19717:19729   */\n      add\n        /* \"#utility.yul\":19712:19729   */\n      swap1\n      pop\n        /* \"#utility.yul\":19687:19895   */\n      jump(tag_626)\n    tag_628:\n        /* \"#utility.yul\":19923:19929   */\n      dup7\n        /* \"#utility.yul\":19914:19921   */\n      dup4\n        /* \"#utility.yul\":19911:19930   */\n      lt\n        /* \"#utility.yul\":19908:20087   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":19981:19990   */\n      dup5\n        /* \"#utility.yul\":19976:19979   */\n      dup10\n        /* \"#utility.yul\":19972:19991   */\n      add\n        /* \"#utility.yul\":19966:19992   */\n      mload\n        /* \"#utility.yul\":20024:20072   */\n      tag_630\n        /* \"#utility.yul\":20066:20070   */\n      0x1f\n        /* \"#utility.yul\":20058:20064   */\n      dup10\n        /* \"#utility.yul\":20054:20071   */\n      and\n        /* \"#utility.yul\":20043:20052   */\n      dup3\n        /* \"#utility.yul\":20024:20072   */\n      tag_396\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20016:20022   */\n      dup4\n        /* \"#utility.yul\":20009:20073   */\n      sstore\n        /* \"#utility.yul\":19931:20087   */\n      pop\n        /* \"#utility.yul\":19908:20087   */\n    tag_629:\n        /* \"#utility.yul\":20133:20134   */\n      0x01\n        /* \"#utility.yul\":20129:20130   */\n      0x02\n        /* \"#utility.yul\":20121:20127   */\n      dup9\n        /* \"#utility.yul\":20117:20131   */\n      mul\n        /* \"#utility.yul\":20113:20135   */\n      add\n        /* \"#utility.yul\":20107:20111   */\n      dup9\n        /* \"#utility.yul\":20100:20136   */\n      sstore\n        /* \"#utility.yul\":19535:20146   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19498:20385   */\n    tag_621:\n      pop\n        /* \"#utility.yul\":19088:20391   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18996:20391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20397:20630   */\n    tag_183:\n        /* \"#utility.yul\":20436:20439   */\n      0x00\n        /* \"#utility.yul\":20459:20483   */\n      tag_632\n        /* \"#utility.yul\":20477:20482   */\n      dup3\n        /* \"#utility.yul\":20459:20483   */\n      tag_354\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20450:20483   */\n      swap2\n      pop\n        /* \"#utility.yul\":20505:20571   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20498:20503   */\n      dup3\n        /* \"#utility.yul\":20495:20572   */\n      sub\n        /* \"#utility.yul\":20492:20595   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":20575:20593   */\n      tag_634\n      tag_382\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":20492:20595   */\n    tag_633:\n        /* \"#utility.yul\":20622:20623   */\n      0x01\n        /* \"#utility.yul\":20615:20620   */\n      dup3\n        /* \"#utility.yul\":20611:20624   */\n      add\n        /* \"#utility.yul\":20604:20624   */\n      swap1\n      pop\n        /* \"#utility.yul\":20397:20630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20636:20784   */\n    tag_398:\n        /* \"#utility.yul\":20738:20749   */\n      0x00\n        /* \"#utility.yul\":20775:20778   */\n      dup2\n        /* \"#utility.yul\":20760:20778   */\n      swap1\n      pop\n        /* \"#utility.yul\":20636:20784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20790:21180   */\n    tag_399:\n        /* \"#utility.yul\":20896:20899   */\n      0x00\n        /* \"#utility.yul\":20924:20963   */\n      tag_637\n        /* \"#utility.yul\":20957:20962   */\n      dup3\n        /* \"#utility.yul\":20924:20963   */\n      tag_349\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":20979:21068   */\n      tag_638\n        /* \"#utility.yul\":21061:21067   */\n      dup2\n        /* \"#utility.yul\":21056:21059   */\n      dup6\n        /* \"#utility.yul\":20979:21068   */\n      tag_398\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":20972:21068   */\n      swap4\n      pop\n        /* \"#utility.yul\":21077:21142   */\n      tag_639\n        /* \"#utility.yul\":21135:21141   */\n      dup2\n        /* \"#utility.yul\":21130:21133   */\n      dup6\n        /* \"#utility.yul\":21123:21127   */\n      0x20\n        /* \"#utility.yul\":21116:21121   */\n      dup7\n        /* \"#utility.yul\":21112:21128   */\n      add\n        /* \"#utility.yul\":21077:21142   */\n      tag_351\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21167:21173   */\n      dup1\n        /* \"#utility.yul\":21162:21165   */\n      dup5\n        /* \"#utility.yul\":21158:21174   */\n      add\n        /* \"#utility.yul\":21151:21174   */\n      swap2\n      pop\n        /* \"#utility.yul\":20900:21180   */\n      pop\n        /* \"#utility.yul\":20790:21180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21186:21621   */\n    tag_206:\n        /* \"#utility.yul\":21366:21369   */\n      0x00\n        /* \"#utility.yul\":21388:21483   */\n      tag_641\n        /* \"#utility.yul\":21479:21482   */\n      dup3\n        /* \"#utility.yul\":21470:21476   */\n      dup6\n        /* \"#utility.yul\":21388:21483   */\n      tag_399\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":21381:21483   */\n      swap2\n      pop\n        /* \"#utility.yul\":21500:21595   */\n      tag_642\n        /* \"#utility.yul\":21591:21594   */\n      dup3\n        /* \"#utility.yul\":21582:21588   */\n      dup5\n        /* \"#utility.yul\":21500:21595   */\n      tag_399\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":21493:21595   */\n      swap2\n      pop\n        /* \"#utility.yul\":21612:21615   */\n      dup2\n        /* \"#utility.yul\":21605:21615   */\n      swap1\n      pop\n        /* \"#utility.yul\":21186:21621   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21627:21874   */\n    tag_400:\n        /* \"#utility.yul\":21767:21801   */\n      0x4d61737465725472616465436f6e74726163744e46543a206d61737465722074\n        /* \"#utility.yul\":21763:21764   */\n      0x00\n        /* \"#utility.yul\":21755:21761   */\n      dup3\n        /* \"#utility.yul\":21751:21765   */\n      add\n        /* \"#utility.yul\":21744:21802   */\n      mstore\n        /* \"#utility.yul\":21836:21866   */\n      0x7261646520636f6e747261637420646f6573206e6f7420657869737400000000\n        /* \"#utility.yul\":21831:21833   */\n      0x20\n        /* \"#utility.yul\":21823:21829   */\n      dup3\n        /* \"#utility.yul\":21819:21834   */\n      add\n        /* \"#utility.yul\":21812:21867   */\n      mstore\n        /* \"#utility.yul\":21627:21874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21880:22246   */\n    tag_401:\n        /* \"#utility.yul\":22022:22025   */\n      0x00\n        /* \"#utility.yul\":22043:22110   */\n      tag_645\n        /* \"#utility.yul\":22107:22109   */\n      0x3c\n        /* \"#utility.yul\":22102:22105   */\n      dup4\n        /* \"#utility.yul\":22043:22110   */\n      tag_350\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":22036:22110   */\n      swap2\n      pop\n        /* \"#utility.yul\":22119:22212   */\n      tag_646\n        /* \"#utility.yul\":22208:22211   */\n      dup3\n        /* \"#utility.yul\":22119:22212   */\n      tag_400\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":22237:22239   */\n      0x40\n        /* \"#utility.yul\":22232:22235   */\n      dup3\n        /* \"#utility.yul\":22228:22240   */\n      add\n        /* \"#utility.yul\":22221:22240   */\n      swap1\n      pop\n        /* \"#utility.yul\":21880:22246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22252:22671   */\n    tag_219:\n        /* \"#utility.yul\":22418:22422   */\n      0x00\n        /* \"#utility.yul\":22456:22458   */\n      0x20\n        /* \"#utility.yul\":22445:22454   */\n      dup3\n        /* \"#utility.yul\":22441:22459   */\n      add\n        /* \"#utility.yul\":22433:22459   */\n      swap1\n      pop\n        /* \"#utility.yul\":22505:22514   */\n      dup2\n        /* \"#utility.yul\":22499:22503   */\n      dup2\n        /* \"#utility.yul\":22495:22515   */\n      sub\n        /* \"#utility.yul\":22491:22492   */\n      0x00\n        /* \"#utility.yul\":22480:22489   */\n      dup4\n        /* \"#utility.yul\":22476:22493   */\n      add\n        /* \"#utility.yul\":22469:22516   */\n      mstore\n        /* \"#utility.yul\":22533:22664   */\n      tag_648\n        /* \"#utility.yul\":22659:22663   */\n      dup2\n        /* \"#utility.yul\":22533:22664   */\n      tag_401\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":22525:22664   */\n      swap1\n      pop\n        /* \"#utility.yul\":22252:22671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22677:22775   */\n    tag_402:\n        /* \"#utility.yul\":22728:22734   */\n      0x00\n        /* \"#utility.yul\":22762:22767   */\n      dup2\n        /* \"#utility.yul\":22756:22768   */\n      mload\n        /* \"#utility.yul\":22746:22768   */\n      swap1\n      pop\n        /* \"#utility.yul\":22677:22775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22781:22949   */\n    tag_403:\n        /* \"#utility.yul\":22864:22875   */\n      0x00\n        /* \"#utility.yul\":22898:22904   */\n      dup3\n        /* \"#utility.yul\":22893:22896   */\n      dup3\n        /* \"#utility.yul\":22886:22905   */\n      mstore\n        /* \"#utility.yul\":22938:22942   */\n      0x20\n        /* \"#utility.yul\":22933:22936   */\n      dup3\n        /* \"#utility.yul\":22929:22943   */\n      add\n        /* \"#utility.yul\":22914:22943   */\n      swap1\n      pop\n        /* \"#utility.yul\":22781:22949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22955:23328   */\n    tag_404:\n        /* \"#utility.yul\":23041:23044   */\n      0x00\n        /* \"#utility.yul\":23069:23107   */\n      tag_652\n        /* \"#utility.yul\":23101:23106   */\n      dup3\n        /* \"#utility.yul\":23069:23107   */\n      tag_402\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":23123:23193   */\n      tag_653\n        /* \"#utility.yul\":23186:23192   */\n      dup2\n        /* \"#utility.yul\":23181:23184   */\n      dup6\n        /* \"#utility.yul\":23123:23193   */\n      tag_403\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23116:23193   */\n      swap4\n      pop\n        /* \"#utility.yul\":23202:23267   */\n      tag_654\n        /* \"#utility.yul\":23260:23266   */\n      dup2\n        /* \"#utility.yul\":23255:23258   */\n      dup6\n        /* \"#utility.yul\":23248:23252   */\n      0x20\n        /* \"#utility.yul\":23241:23246   */\n      dup7\n        /* \"#utility.yul\":23237:23253   */\n      add\n        /* \"#utility.yul\":23202:23267   */\n      tag_351\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":23292:23321   */\n      tag_655\n        /* \"#utility.yul\":23314:23320   */\n      dup2\n        /* \"#utility.yul\":23292:23321   */\n      tag_352\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":23287:23290   */\n      dup5\n        /* \"#utility.yul\":23283:23322   */\n      add\n        /* \"#utility.yul\":23276:23322   */\n      swap2\n      pop\n        /* \"#utility.yul\":23045:23328   */\n      pop\n        /* \"#utility.yul\":22955:23328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23334:23974   */\n    tag_265:\n        /* \"#utility.yul\":23529:23533   */\n      0x00\n        /* \"#utility.yul\":23567:23570   */\n      0x80\n        /* \"#utility.yul\":23556:23565   */\n      dup3\n        /* \"#utility.yul\":23552:23571   */\n      add\n        /* \"#utility.yul\":23544:23571   */\n      swap1\n      pop\n        /* \"#utility.yul\":23581:23652   */\n      tag_657\n        /* \"#utility.yul\":23649:23650   */\n      0x00\n        /* \"#utility.yul\":23638:23647   */\n      dup4\n        /* \"#utility.yul\":23634:23651   */\n      add\n        /* \"#utility.yul\":23625:23631   */\n      dup8\n        /* \"#utility.yul\":23581:23652   */\n      tag_359\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":23662:23734   */\n      tag_658\n        /* \"#utility.yul\":23730:23732   */\n      0x20\n        /* \"#utility.yul\":23719:23728   */\n      dup4\n        /* \"#utility.yul\":23715:23733   */\n      add\n        /* \"#utility.yul\":23706:23712   */\n      dup7\n        /* \"#utility.yul\":23662:23734   */\n      tag_359\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":23744:23816   */\n      tag_659\n        /* \"#utility.yul\":23812:23814   */\n      0x40\n        /* \"#utility.yul\":23801:23810   */\n      dup4\n        /* \"#utility.yul\":23797:23815   */\n      add\n        /* \"#utility.yul\":23788:23794   */\n      dup6\n        /* \"#utility.yul\":23744:23816   */\n      tag_365\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":23863:23872   */\n      dup2\n        /* \"#utility.yul\":23857:23861   */\n      dup2\n        /* \"#utility.yul\":23853:23873   */\n      sub\n        /* \"#utility.yul\":23848:23850   */\n      0x60\n        /* \"#utility.yul\":23837:23846   */\n      dup4\n        /* \"#utility.yul\":23833:23851   */\n      add\n        /* \"#utility.yul\":23826:23874   */\n      mstore\n        /* \"#utility.yul\":23891:23967   */\n      tag_660\n        /* \"#utility.yul\":23962:23966   */\n      dup2\n        /* \"#utility.yul\":23953:23959   */\n      dup5\n        /* \"#utility.yul\":23891:23967   */\n      tag_404\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":23883:23967   */\n      swap1\n      pop\n        /* \"#utility.yul\":23334:23974   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23980:24121   */\n    tag_405:\n        /* \"#utility.yul\":24036:24041   */\n      0x00\n        /* \"#utility.yul\":24067:24073   */\n      dup2\n        /* \"#utility.yul\":24061:24074   */\n      mload\n        /* \"#utility.yul\":24052:24074   */\n      swap1\n      pop\n        /* \"#utility.yul\":24083:24115   */\n      tag_662\n        /* \"#utility.yul\":24109:24114   */\n      dup2\n        /* \"#utility.yul\":24083:24115   */\n      tag_345\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":23980:24121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24127:24476   */\n    tag_268:\n        /* \"#utility.yul\":24196:24202   */\n      0x00\n        /* \"#utility.yul\":24245:24247   */\n      0x20\n        /* \"#utility.yul\":24233:24242   */\n      dup3\n        /* \"#utility.yul\":24224:24231   */\n      dup5\n        /* \"#utility.yul\":24220:24243   */\n      sub\n        /* \"#utility.yul\":24216:24248   */\n      slt\n        /* \"#utility.yul\":24213:24332   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":24251:24330   */\n      tag_665\n      tag_342\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":24213:24332   */\n    tag_664:\n        /* \"#utility.yul\":24371:24372   */\n      0x00\n        /* \"#utility.yul\":24396:24459   */\n      tag_666\n        /* \"#utility.yul\":24451:24458   */\n      dup5\n        /* \"#utility.yul\":24442:24448   */\n      dup3\n        /* \"#utility.yul\":24431:24440   */\n      dup6\n        /* \"#utility.yul\":24427:24449   */\n      add\n        /* \"#utility.yul\":24396:24459   */\n      tag_405\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":24386:24459   */\n      swap2\n      pop\n        /* \"#utility.yul\":24342:24469   */\n      pop\n        /* \"#utility.yul\":24127:24476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24482:24662   */\n    tag_293:\n        /* \"#utility.yul\":24530:24607   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24527:24528   */\n      0x00\n        /* \"#utility.yul\":24520:24608   */\n      mstore\n        /* \"#utility.yul\":24627:24631   */\n      0x12\n        /* \"#utility.yul\":24624:24625   */\n      0x04\n        /* \"#utility.yul\":24617:24632   */\n      mstore\n        /* \"#utility.yul\":24651:24655   */\n      0x24\n        /* \"#utility.yul\":24648:24649   */\n      0x00\n        /* \"#utility.yul\":24641:24656   */\n      revert\n        /* \"#utility.yul\":24668:25000   */\n    tag_314:\n        /* \"#utility.yul\":24789:24793   */\n      0x00\n        /* \"#utility.yul\":24827:24829   */\n      0x40\n        /* \"#utility.yul\":24816:24825   */\n      dup3\n        /* \"#utility.yul\":24812:24830   */\n      add\n        /* \"#utility.yul\":24804:24830   */\n      swap1\n      pop\n        /* \"#utility.yul\":24840:24911   */\n      tag_669\n        /* \"#utility.yul\":24908:24909   */\n      0x00\n        /* \"#utility.yul\":24897:24906   */\n      dup4\n        /* \"#utility.yul\":24893:24910   */\n      add\n        /* \"#utility.yul\":24884:24890   */\n      dup6\n        /* \"#utility.yul\":24840:24911   */\n      tag_359\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":24921:24993   */\n      tag_670\n        /* \"#utility.yul\":24989:24991   */\n      0x20\n        /* \"#utility.yul\":24978:24987   */\n      dup4\n        /* \"#utility.yul\":24974:24992   */\n      add\n        /* \"#utility.yul\":24965:24971   */\n      dup5\n        /* \"#utility.yul\":24921:24993   */\n      tag_365\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":24668:25000   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f9e183a21487a92203b1ccf2615c5183cb5cc928c4a915c206b8d83a8aa614c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2967": {
									"entryPoint": null,
									"id": 2967,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 325,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:13",
										"nodeType": "YulBlock",
										"src": "0:6778:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1261:40:13",
													"nodeType": "YulBlock",
													"src": "1261:40:13",
													"statements": [
														{
															"nativeSrc": "1272:22:13",
															"nodeType": "YulAssignment",
															"src": "1272:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:13"
																},
																"nativeSrc": "1282:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:13",
														"nodeType": "YulTypedName",
														"src": "1244:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:13",
														"nodeType": "YulTypedName",
														"src": "1254:6:13",
														"type": ""
													}
												],
												"src": "1202:99:13"
											},
											{
												"body": {
													"nativeSrc": "1335:152:13",
													"nodeType": "YulBlock",
													"src": "1335:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nativeSrc": "1345:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:13"
															},
															"nativeSrc": "1345:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:13"
															},
															"nativeSrc": "1442:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nativeSrc": "1466:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:13"
															},
															"nativeSrc": "1466:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:13"
											},
											{
												"body": {
													"nativeSrc": "1521:152:13",
													"nodeType": "YulBlock",
													"src": "1521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:13"
																},
																"nativeSrc": "1531:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:13"
															},
															"nativeSrc": "1531:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																},
																"nativeSrc": "1628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:13"
															},
															"nativeSrc": "1628:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nativeSrc": "1652:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:13"
															},
															"nativeSrc": "1652:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:13"
											},
											{
												"body": {
													"nativeSrc": "1730:269:13",
													"nodeType": "YulBlock",
													"src": "1730:269:13",
													"statements": [
														{
															"nativeSrc": "1740:22:13",
															"nodeType": "YulAssignment",
															"src": "1740:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:13"
																},
																"nativeSrc": "1750:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																}
															]
														},
														{
															"nativeSrc": "1771:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:13"
																},
																"nativeSrc": "1797:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:13",
																"nodeType": "YulBlock",
																"src": "1848:51:13",
																"statements": [
																	{
																		"nativeSrc": "1862:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:13"
																			},
																			"nativeSrc": "1872:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:13"
																},
																"nativeSrc": "1821:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:13"
															},
															"nativeSrc": "1818:81:13",
															"nodeType": "YulIf",
															"src": "1818:81:13"
														},
														{
															"body": {
																"nativeSrc": "1951:42:13",
																"nodeType": "YulBlock",
																"src": "1951:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:13"
																			},
																			"nativeSrc": "1965:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:13"
																		},
																		"nativeSrc": "1965:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nativeSrc": "1935:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:13"
																},
																"nativeSrc": "1912:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:13"
															},
															"nativeSrc": "1909:84:13",
															"nodeType": "YulIf",
															"src": "1909:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:13",
														"nodeType": "YulTypedName",
														"src": "1714:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:13",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													}
												],
												"src": "1679:320:13"
											},
											{
												"body": {
													"nativeSrc": "2059:87:13",
													"nodeType": "YulBlock",
													"src": "2059:87:13",
													"statements": [
														{
															"nativeSrc": "2069:11:13",
															"nodeType": "YulAssignment",
															"src": "2069:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:13",
																"nodeType": "YulIdentifier",
																"src": "2077:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																},
																"nativeSrc": "2090:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:13"
															},
															"nativeSrc": "2090:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:13"
														},
														{
															"nativeSrc": "2113:26:13",
															"nodeType": "YulAssignment",
															"src": "2113:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:13"
																},
																"nativeSrc": "2121:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:13",
														"nodeType": "YulTypedName",
														"src": "2046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:13",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "2005:141:13"
											},
											{
												"body": {
													"nativeSrc": "2196:49:13",
													"nodeType": "YulBlock",
													"src": "2196:49:13",
													"statements": [
														{
															"nativeSrc": "2206:33:13",
															"nodeType": "YulAssignment",
															"src": "2206:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nativeSrc": "2220:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nativeSrc": "2216:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:13",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:13",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2152:93:13"
											},
											{
												"body": {
													"nativeSrc": "2304:54:13",
													"nodeType": "YulBlock",
													"src": "2304:54:13",
													"statements": [
														{
															"nativeSrc": "2314:37:13",
															"nodeType": "YulAssignment",
															"src": "2314:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:13"
																},
																"nativeSrc": "2335:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:13",
														"nodeType": "YulTypedName",
														"src": "2279:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:13",
														"nodeType": "YulTypedName",
														"src": "2285:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:13",
														"nodeType": "YulTypedName",
														"src": "2295:8:13",
														"type": ""
													}
												],
												"src": "2251:107:13"
											},
											{
												"body": {
													"nativeSrc": "2440:317:13",
													"nodeType": "YulBlock",
													"src": "2440:317:13",
													"statements": [
														{
															"nativeSrc": "2450:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:13"
																},
																"nativeSrc": "2467:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:13"
																},
																"nativeSrc": "2506:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:13",
															"nodeType": "YulAssignment",
															"src": "2612:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:13"
																},
																"nativeSrc": "2624:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:13"
																}
															]
														},
														{
															"nativeSrc": "2672:30:13",
															"nodeType": "YulAssignment",
															"src": "2672:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:13"
																		},
																		"nativeSrc": "2692:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nativeSrc": "2681:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:13"
																}
															]
														},
														{
															"nativeSrc": "2711:40:13",
															"nodeType": "YulAssignment",
															"src": "2711:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:13"
																},
																"nativeSrc": "2721:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:13",
														"nodeType": "YulTypedName",
														"src": "2401:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:13",
														"nodeType": "YulTypedName",
														"src": "2408:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:13",
														"nodeType": "YulTypedName",
														"src": "2420:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:13",
														"nodeType": "YulTypedName",
														"src": "2433:6:13",
														"type": ""
													}
												],
												"src": "2364:393:13"
											},
											{
												"body": {
													"nativeSrc": "2808:32:13",
													"nodeType": "YulBlock",
													"src": "2808:32:13",
													"statements": [
														{
															"nativeSrc": "2818:16:13",
															"nodeType": "YulAssignment",
															"src": "2818:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:13",
																"nodeType": "YulIdentifier",
																"src": "2829:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:13",
														"nodeType": "YulTypedName",
														"src": "2790:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:13",
														"nodeType": "YulTypedName",
														"src": "2800:7:13",
														"type": ""
													}
												],
												"src": "2763:77:13"
											},
											{
												"body": {
													"nativeSrc": "2878:28:13",
													"nodeType": "YulBlock",
													"src": "2878:28:13",
													"statements": [
														{
															"nativeSrc": "2888:12:13",
															"nodeType": "YulAssignment",
															"src": "2888:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:13",
																"nodeType": "YulIdentifier",
																"src": "2895:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:13",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:13",
														"nodeType": "YulTypedName",
														"src": "2874:3:13",
														"type": ""
													}
												],
												"src": "2846:60:13"
											},
											{
												"body": {
													"nativeSrc": "2972:82:13",
													"nodeType": "YulBlock",
													"src": "2972:82:13",
													"statements": [
														{
															"nativeSrc": "2982:66:13",
															"nodeType": "YulAssignment",
															"src": "2982:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:13"
																				},
																				"nativeSrc": "3022:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:13"
																		},
																		"nativeSrc": "3013:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:13"
																},
																"nativeSrc": "2995:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:13",
														"nodeType": "YulTypedName",
														"src": "2952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:13",
														"nodeType": "YulTypedName",
														"src": "2962:9:13",
														"type": ""
													}
												],
												"src": "2912:142:13"
											},
											{
												"body": {
													"nativeSrc": "3107:28:13",
													"nodeType": "YulBlock",
													"src": "3107:28:13",
													"statements": [
														{
															"nativeSrc": "3117:12:13",
															"nodeType": "YulAssignment",
															"src": "3117:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:13",
																"nodeType": "YulIdentifier",
																"src": "3124:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:13",
														"nodeType": "YulTypedName",
														"src": "3093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:13",
														"nodeType": "YulTypedName",
														"src": "3103:3:13",
														"type": ""
													}
												],
												"src": "3060:75:13"
											},
											{
												"body": {
													"nativeSrc": "3217:193:13",
													"nodeType": "YulBlock",
													"src": "3217:193:13",
													"statements": [
														{
															"nativeSrc": "3227:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:13"
																},
																"nativeSrc": "3251:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:13",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:13"
																				},
																				"nativeSrc": "3340:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:13"
																				},
																				"nativeSrc": "3361:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:13"
																		},
																		"nativeSrc": "3312:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:13"
																},
																"nativeSrc": "3299:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:13"
															},
															"nativeSrc": "3299:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:13",
														"nodeType": "YulTypedName",
														"src": "3194:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:13",
														"nodeType": "YulTypedName",
														"src": "3200:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:13",
														"nodeType": "YulTypedName",
														"src": "3208:7:13",
														"type": ""
													}
												],
												"src": "3141:269:13"
											},
											{
												"body": {
													"nativeSrc": "3465:24:13",
													"nodeType": "YulBlock",
													"src": "3465:24:13",
													"statements": [
														{
															"nativeSrc": "3475:8:13",
															"nodeType": "YulAssignment",
															"src": "3475:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:13",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:13",
														"nodeType": "YulTypedName",
														"src": "3461:3:13",
														"type": ""
													}
												],
												"src": "3416:73:13"
											},
											{
												"body": {
													"nativeSrc": "3548:136:13",
													"nodeType": "YulBlock",
													"src": "3548:136:13",
													"statements": [
														{
															"nativeSrc": "3558:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:13"
																},
																"nativeSrc": "3572:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:13"
																},
																"nativeSrc": "3613:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:13"
															},
															"nativeSrc": "3613:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:13",
														"nodeType": "YulTypedName",
														"src": "3534:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:13",
														"nodeType": "YulTypedName",
														"src": "3540:6:13",
														"type": ""
													}
												],
												"src": "3495:189:13"
											},
											{
												"body": {
													"nativeSrc": "3740:136:13",
													"nodeType": "YulBlock",
													"src": "3740:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:13",
																"nodeType": "YulBlock",
																"src": "3807:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:13"
																			},
																			"nativeSrc": "3821:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:13"
																		},
																		"nativeSrc": "3821:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:13"
																},
																"nativeSrc": "3757:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:13"
															},
															"nativeSrc": "3750:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:13",
																"nodeType": "YulBlock",
																"src": "3772:26:13",
																"statements": [
																	{
																		"nativeSrc": "3774:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:13"
																			},
																			"nativeSrc": "3783:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:13",
																"nodeType": "YulBlock",
																"src": "3754:2:13",
																"statements": []
															},
															"src": "3750:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:13",
														"nodeType": "YulTypedName",
														"src": "3728:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:13",
														"nodeType": "YulTypedName",
														"src": "3735:3:13",
														"type": ""
													}
												],
												"src": "3690:186:13"
											},
											{
												"body": {
													"nativeSrc": "3961:464:13",
													"nodeType": "YulBlock",
													"src": "3961:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:13",
																"nodeType": "YulBlock",
																"src": "3987:431:13",
																"statements": [
																	{
																		"nativeSrc": "4001:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:13"
																			},
																			"nativeSrc": "4017:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:13"
																					},
																					"nativeSrc": "4101:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:13"
																			},
																			"nativeSrc": "4087:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:13",
																			"nodeType": "YulBlock",
																			"src": "4288:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:13"
																			},
																			"nativeSrc": "4269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:13"
																		},
																		"nativeSrc": "4266:49:13",
																		"nodeType": "YulIf",
																		"src": "4266:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:13"
																							},
																							"nativeSrc": "4384:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:13"
																					},
																					"nativeSrc": "4370:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:13"
																			},
																			"nativeSrc": "4328:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:13"
																		},
																		"nativeSrc": "4328:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:13"
																},
																"nativeSrc": "3975:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:13"
															},
															"nativeSrc": "3972:446:13",
															"nodeType": "YulIf",
															"src": "3972:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:13",
														"nodeType": "YulTypedName",
														"src": "3937:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:13",
														"nodeType": "YulTypedName",
														"src": "3944:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:13",
														"nodeType": "YulTypedName",
														"src": "3949:10:13",
														"type": ""
													}
												],
												"src": "3882:543:13"
											},
											{
												"body": {
													"nativeSrc": "4494:54:13",
													"nodeType": "YulBlock",
													"src": "4494:54:13",
													"statements": [
														{
															"nativeSrc": "4504:37:13",
															"nodeType": "YulAssignment",
															"src": "4504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:13"
																},
																"nativeSrc": "4525:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:13",
														"nodeType": "YulTypedName",
														"src": "4469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:13",
														"nodeType": "YulTypedName",
														"src": "4475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:13",
														"nodeType": "YulTypedName",
														"src": "4485:8:13",
														"type": ""
													}
												],
												"src": "4431:117:13"
											},
											{
												"body": {
													"nativeSrc": "4605:118:13",
													"nodeType": "YulBlock",
													"src": "4605:118:13",
													"statements": [
														{
															"nativeSrc": "4615:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:13"
																				},
																				"nativeSrc": "4660:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nativeSrc": "4675:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:13"
																		},
																		"nativeSrc": "4631:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:13"
																},
																"nativeSrc": "4627:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:13",
															"nodeType": "YulAssignment",
															"src": "4692:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:13"
																},
																"nativeSrc": "4702:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:13",
														"nodeType": "YulTypedName",
														"src": "4582:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:13",
														"nodeType": "YulTypedName",
														"src": "4588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:13",
														"nodeType": "YulTypedName",
														"src": "4598:6:13",
														"type": ""
													}
												],
												"src": "4554:169:13"
											},
											{
												"body": {
													"nativeSrc": "4809:214:13",
													"nodeType": "YulBlock",
													"src": "4809:214:13",
													"statements": [
														{
															"nativeSrc": "4942:37:13",
															"nodeType": "YulAssignment",
															"src": "4942:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:13"
																},
																"nativeSrc": "4950:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:13"
																}
															]
														},
														{
															"nativeSrc": "4988:29:13",
															"nodeType": "YulAssignment",
															"src": "4988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:13"
																		},
																		"nativeSrc": "5005:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:13"
																},
																"nativeSrc": "4996:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:13",
														"nodeType": "YulTypedName",
														"src": "4790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:13",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:13",
														"nodeType": "YulTypedName",
														"src": "4804:4:13",
														"type": ""
													}
												],
												"src": "4728:295:13"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:13",
													"nodeType": "YulBlock",
													"src": "5120:1303:13",
													"statements": [
														{
															"nativeSrc": "5131:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:13"
																},
																"nativeSrc": "5145:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:13",
																"nodeType": "YulBlock",
																"src": "5267:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:13"
																			},
																			"nativeSrc": "5269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:13"
																		},
																		"nativeSrc": "5269:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:13"
																},
																"nativeSrc": "5236:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:13"
															},
															"nativeSrc": "5233:56:13",
															"nodeType": "YulIf",
															"src": "5233:56:13"
														},
														{
															"nativeSrc": "5299:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:13"
																		},
																		"nativeSrc": "5339:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:13"
																},
																"nativeSrc": "5313:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:13"
																},
																"nativeSrc": "5398:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:13"
															},
															"nativeSrc": "5398:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:13"
														},
														{
															"nativeSrc": "5475:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:13",
																"nodeType": "YulLiteral",
																"src": "5492:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:13",
															"nodeType": "YulAssignment",
															"src": "5503:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:13",
																"nodeType": "YulLiteral",
																"src": "5516:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:13",
																		"nodeType": "YulBlock",
																		"src": "5567:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:13"
																							},
																							"nativeSrc": "5608:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:13"
																					},
																					"nativeSrc": "5596:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:13"
																					},
																					"nativeSrc": "5646:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:13",
																					"nodeType": "YulBlock",
																					"src": "5764:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:13"
																												},
																												"nativeSrc": "5803:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:13"
																										},
																										"nativeSrc": "5797:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:13"
																								},
																								"nativeSrc": "5782:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:13"
																							},
																							"nativeSrc": "5782:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:13"
																						},
																						{
																							"nativeSrc": "5841:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:13"
																								},
																								"nativeSrc": "5851:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:13"
																								},
																								"nativeSrc": "5895:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:13"
																					},
																					"nativeSrc": "5727:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:13"
																				},
																				"nativeSrc": "5719:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:13",
																					"nodeType": "YulBlock",
																					"src": "5742:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:13"
																								},
																								"nativeSrc": "5749:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:13",
																					"nodeType": "YulBlock",
																					"src": "5723:3:13",
																					"statements": []
																				},
																				"src": "5719:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:13",
																					"nodeType": "YulBlock",
																					"src": "5963:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:13"
																										},
																										"nativeSrc": "6004:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:13"
																								},
																								"nativeSrc": "5998:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:13",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:13"
																												},
																												"nativeSrc": "6086:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:13"
																										},
																										"nativeSrc": "6056:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:13"
																								},
																								"nativeSrc": "6041:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:13"
																							},
																							"nativeSrc": "6041:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:13"
																					},
																					"nativeSrc": "5943:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:13"
																				},
																				"nativeSrc": "5940:179:13",
																				"nodeType": "YulIf",
																				"src": "5940:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:13",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:13"
																									},
																									"nativeSrc": "6149:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:13",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:13"
																							},
																							"nativeSrc": "6145:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					},
																					"nativeSrc": "6132:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:13"
																				},
																				"nativeSrc": "6132:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:13",
																	"nodeType": "YulCase",
																	"src": "5560:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:13",
																		"nodeType": "YulBlock",
																		"src": "6195:222:13",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:13",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:13",
																					"nodeType": "YulBlock",
																					"src": "6246:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:13"
																										},
																										"nativeSrc": "6279:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:13"
																								},
																								"nativeSrc": "6273:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:13"
																				},
																				"nativeSrc": "6236:77:13",
																				"nodeType": "YulIf",
																				"src": "6236:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:13"
																							},
																							"nativeSrc": "6339:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:13"
																					},
																					"nativeSrc": "6326:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:13"
																				},
																				"nativeSrc": "6326:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:13"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:13",
																	"nodeType": "YulCase",
																	"src": "6187:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:13"
																},
																"nativeSrc": "5537:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:13"
															},
															"nativeSrc": "5530:887:13",
															"nodeType": "YulSwitch",
															"src": "5530:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:13",
														"nodeType": "YulTypedName",
														"src": "5109:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"src": "5028:1395:13"
											},
											{
												"body": {
													"nativeSrc": "6494:53:13",
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nativeSrc": "6516:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nativeSrc": "6504:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nativeSrc": "6504:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:13",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:13",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nativeSrc": "6651:124:13",
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nativeSrc": "6661:26:13",
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nativeSrc": "6669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nativeSrc": "6750:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nativeSrc": "6697:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nativeSrc": "6697:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:13",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:13",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:13",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612f0c380380612f0c83398181016040528101906100319190610266565b806040518060400160405280601681526020017f4d61737465725472616465436f6e74726163744e4654000000000000000000008152506040518060400160405280600681526020017f4d54434e46540000000000000000000000000000000000000000000000000000815250815f90816100ac91906104cb565b5080600190816100bc91906104cb565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012691906105a9565b60405180910390fd5b61013e8161014560201b60201c565b50506105c2565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102358261020c565b9050919050565b6102458161022b565b811461024f575f80fd5b50565b5f815190506102608161023c565b92915050565b5f6020828403121561027b5761027a610208565b5b5f61028884828501610252565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030c57607f821691505b60208210810361031f5761031e6102c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610346565b61038b8683610346565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103cf6103ca6103c5846103a3565b6103ac565b6103a3565b9050919050565b5f819050919050565b6103e8836103b5565b6103fc6103f4826103d6565b848454610352565b825550505050565b5f90565b610410610404565b61041b8184846103df565b505050565b5b8181101561043e576104335f82610408565b600181019050610421565b5050565b601f8211156104835761045481610325565b61045d84610337565b8101602085101561046c578190505b61048061047885610337565b830182610420565b50505b505050565b5f82821c905092915050565b5f6104a35f1984600802610488565b1980831691505092915050565b5f6104bb8383610494565b9150826002028217905092915050565b6104d482610291565b67ffffffffffffffff8111156104ed576104ec61029b565b5b6104f782546102f5565b610502828285610442565b5f60209050601f831160018114610533575f8415610521578287015190505b61052b85826104b0565b865550610592565b601f19841661054186610325565b5f5b8281101561056857848901518255600182019150602085019450602081019050610543565b868310156105855784890151610581601f891682610494565b8355505b6001600288020188555050505b505050505050565b6105a38161022b565b82525050565b5f6020820190506105bc5f83018461059a565b92915050565b61293d806105cf5f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c80638da5cb5b116100b6578063b3a599ee1161007a578063b3a599ee14610337578063b88d4fde14610355578063c87b56dd14610371578063e985e9c5146103a1578063f2fde38b146103d1578063f993d400146103ed57610135565b80638da5cb5b1461029357806395d89b41146102b15780639742db55146102cf578063a22cb465146102eb578063a65c74941461030757610135565b80632e9b6d62116100fd5780632e9b6d62146101ef57806342842e0e1461020d5780636352211e1461022957806370a0823114610259578063715018a61461028957610135565b806301ffc9a71461013957806306fdde0314610169578063081812fc14610187578063095ea7b3146101b757806323b872dd146101d3575b5f80fd5b610153600480360381019061014e9190611c32565b61041d565b6040516101609190611c77565b60405180910390f35b6101716104fe565b60405161017e9190611d00565b60405180910390f35b6101a1600480360381019061019c9190611d53565b61058d565b6040516101ae9190611dbd565b60405180910390f35b6101d160048036038101906101cc9190611e00565b6105a8565b005b6101ed60048036038101906101e89190611e3e565b6105be565b005b6101f76106bd565b6040516102049190611efd565b60405180910390f35b61022760048036038101906102229190611e3e565b6107c7565b005b610243600480360381019061023e9190611d53565b6107e6565b6040516102509190611dbd565b60405180910390f35b610273600480360381019061026e9190611f1d565b6107f7565b6040516102809190611f57565b60405180910390f35b6102916108ad565b005b61029b6108c0565b6040516102a89190611dbd565b60405180910390f35b6102b96108e8565b6040516102c69190611d00565b60405180910390f35b6102e960048036038101906102e4919061209c565b610978565b005b61030560048036038101906103009190612120565b6109e3565b005b610321600480360381019061031c9190611d53565b6109f9565b60405161032e9190611d00565b60405180910390f35b61033f610a99565b60405161034c9190611f57565b60405180910390f35b61036f600480360381019061036a91906121fc565b610a9f565b005b61038b60048036038101906103869190611d53565b610abc565b6040516103989190611d00565b60405180910390f35b6103bb60048036038101906103b6919061227c565b610b22565b6040516103c89190611c77565b60405180910390f35b6103eb60048036038101906103e69190611f1d565b610bb0565b005b61040760048036038101906104029190611d53565b610c34565b6040516104149190611efd565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104f757506104f682610d69565b5b9050919050565b60605f805461050c906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906122e7565b80156105835780601f1061055a57610100808354040283529160200191610583565b820191905f5260205f20905b81548152906001019060200180831161056657829003601f168201915b5050505050905090565b5f61059782610dd2565b506105a182610e58565b9050919050565b6105ba82826105b5610e91565b610e98565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062e575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106259190611dbd565b60405180910390fd5b5f610641838361063c610e91565b610eaa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106b7578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106ae93929190612317565b60405180910390fd5b50505050565b6106c5611bb9565b5f60085411610709576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610700906123bc565b60405180910390fd5b60075f600160085461071b9190612407565b81526020019081526020015f206040518060200160405290815f82018054610742906122e7565b80601f016020809104026020016040519081016040528092919081815260200182805461076e906122e7565b80156107b95780601f10610790576101008083540402835291602001916107b9565b820191905f5260205f20905b81548152906001019060200180831161079c57829003601f168201915b505050505081525050905090565b6107e183838360405180602001604052805f815250610a9f565b505050565b5f6107f082610dd2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610868575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161085f9190611dbd565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108b56110b5565b6108be5f61113c565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108f7906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610923906122e7565b801561096e5780601f106109455761010080835404028352916020019161096e565b820191905f5260205f20905b81548152906001019060200180831161095157829003601f168201915b5050505050905090565b6109806110b5565b5f600854905061099083826111ff565b60405180602001604052808381525060075f8381526020019081526020015f205f820151815f0190816109c391906125d7565b5090505060085f8154809291906109d9906126a6565b9190505550505050565b6109f56109ee610e91565b83836112f2565b5050565b6007602052805f5260405f205f91509050805f018054610a18906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610a44906122e7565b8015610a8f5780601f10610a6657610100808354040283529160200191610a8f565b820191905f5260205f20905b815481529060010190602001808311610a7257829003601f168201915b5050505050905081565b60085481565b610aaa8484846105be565b610ab68484848461145b565b50505050565b6060610ac782610dd2565b505f610ad161160d565b90505f815111610aef5760405180602001604052805f815250610b1a565b80610af984611623565b604051602001610b0a929190612727565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610bb86110b5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c28575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c1f9190611dbd565b60405180910390fd5b610c318161113c565b50565b610c3c611bb9565b5f610c46836107e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cad906127ba565b60405180910390fd5b60075f8481526020019081526020015f206040518060200160405290815f82018054610ce1906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0d906122e7565b8015610d585780601f10610d2f57610100808354040283529160200191610d58565b820191905f5260205f20905b815481529060010190602001808311610d3b57829003601f168201915b505050505081525050915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ddd836116ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e4f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e469190611f57565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ea58383836001611726565b505050565b5f80610eb5846116ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ef657610ef58184866118e5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f8157610f355f855f80611726565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461100057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6110bd610e91565b73ffffffffffffffffffffffffffffffffffffffff166110db6108c0565b73ffffffffffffffffffffffffffffffffffffffff161461113a576110fe610e91565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111319190611dbd565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361126f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112669190611dbd565b60405180910390fd5b5f61127b83835f610eaa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112ed575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112e49190611dbd565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361136257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016113599190611dbd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161144e9190611c77565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611607578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261149e610e91565b8685856040518563ffffffff1660e01b81526004016114c0949392919061282a565b6020604051808303815f875af19250505080156114fb57506040513d601f19601f820116820180604052508101906114f89190612888565b60015b61157c573d805f8114611529576040519150601f19603f3d011682016040523d82523d5f602084013e61152e565b606091505b505f81510361157457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161156b9190611dbd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461160557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115fc9190611dbd565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611631846119a8565b0190505f8167ffffffffffffffff81111561164f5761164e611f78565b5b6040519080825280601f01601f1916602001820160405280156116815781602001600182028036833780820191505090505b5090505f82602001820190505b6001156116e2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816116d7576116d66128b3565b5b0494505f850361168e575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061175e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611890575f61176d84610dd2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117d757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117ea57506117e88184610b22565b155b1561182c57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118239190611dbd565b60405180910390fd5b811561188e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118f0838383611af9565b6119a3575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361196457806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161195b9190611f57565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161199a9291906128e0565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a04577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fa576119f96128b3565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a41576d04ee2d6d415b85acef81000000008381611a3757611a366128b3565b5b0492506020810190505b662386f26fc100008310611a7057662386f26fc100008381611a6657611a656128b3565b5b0492506010810190505b6305f5e1008310611a99576305f5e1008381611a8f57611a8e6128b3565b5b0492506008810190505b6127108310611abe576127108381611ab457611ab36128b3565b5b0492506004810190505b60648310611ae15760648381611ad757611ad66128b3565b5b0492506002810190505b600a8310611af0576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bb057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b715750611b708484610b22565b5b80611baf57508273ffffffffffffffffffffffffffffffffffffffff16611b9783610e58565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6040518060200160405280606081525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c1181611bdd565b8114611c1b575f80fd5b50565b5f81359050611c2c81611c08565b92915050565b5f60208284031215611c4757611c46611bd5565b5b5f611c5484828501611c1e565b91505092915050565b5f8115159050919050565b611c7181611c5d565b82525050565b5f602082019050611c8a5f830184611c68565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611cd282611c90565b611cdc8185611c9a565b9350611cec818560208601611caa565b611cf581611cb8565b840191505092915050565b5f6020820190508181035f830152611d188184611cc8565b905092915050565b5f819050919050565b611d3281611d20565b8114611d3c575f80fd5b50565b5f81359050611d4d81611d29565b92915050565b5f60208284031215611d6857611d67611bd5565b5b5f611d7584828501611d3f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611da782611d7e565b9050919050565b611db781611d9d565b82525050565b5f602082019050611dd05f830184611dae565b92915050565b611ddf81611d9d565b8114611de9575f80fd5b50565b5f81359050611dfa81611dd6565b92915050565b5f8060408385031215611e1657611e15611bd5565b5b5f611e2385828601611dec565b9250506020611e3485828601611d3f565b9150509250929050565b5f805f60608486031215611e5557611e54611bd5565b5b5f611e6286828701611dec565b9350506020611e7386828701611dec565b9250506040611e8486828701611d3f565b9150509250925092565b5f82825260208201905092915050565b5f611ea882611c90565b611eb28185611e8e565b9350611ec2818560208601611caa565b611ecb81611cb8565b840191505092915050565b5f602083015f8301518482035f860152611ef08282611e9e565b9150508091505092915050565b5f6020820190508181035f830152611f158184611ed6565b905092915050565b5f60208284031215611f3257611f31611bd5565b5b5f611f3f84828501611dec565b91505092915050565b611f5181611d20565b82525050565b5f602082019050611f6a5f830184611f48565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fae82611cb8565b810181811067ffffffffffffffff82111715611fcd57611fcc611f78565b5b80604052505050565b5f611fdf611bcc565b9050611feb8282611fa5565b919050565b5f67ffffffffffffffff82111561200a57612009611f78565b5b61201382611cb8565b9050602081019050919050565b828183375f83830152505050565b5f61204061203b84611ff0565b611fd6565b90508281526020810184848401111561205c5761205b611f74565b5b612067848285612020565b509392505050565b5f82601f83011261208357612082611f70565b5b813561209384826020860161202e565b91505092915050565b5f80604083850312156120b2576120b1611bd5565b5b5f6120bf85828601611dec565b925050602083013567ffffffffffffffff8111156120e0576120df611bd9565b5b6120ec8582860161206f565b9150509250929050565b6120ff81611c5d565b8114612109575f80fd5b50565b5f8135905061211a816120f6565b92915050565b5f806040838503121561213657612135611bd5565b5b5f61214385828601611dec565b92505060206121548582860161210c565b9150509250929050565b5f67ffffffffffffffff82111561217857612177611f78565b5b61218182611cb8565b9050602081019050919050565b5f6121a061219b8461215e565b611fd6565b9050828152602081018484840111156121bc576121bb611f74565b5b6121c7848285612020565b509392505050565b5f82601f8301126121e3576121e2611f70565b5b81356121f384826020860161218e565b91505092915050565b5f805f806080858703121561221457612213611bd5565b5b5f61222187828801611dec565b945050602061223287828801611dec565b935050604061224387828801611d3f565b925050606085013567ffffffffffffffff81111561226457612263611bd9565b5b612270878288016121cf565b91505092959194509250565b5f806040838503121561229257612291611bd5565b5b5f61229f85828601611dec565b92505060206122b085828601611dec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122fe57607f821691505b602082108103612311576123106122ba565b5b50919050565b5f60608201905061232a5f830186611dae565b6123376020830185611f48565b6123446040830184611dae565b949350505050565b7f4d61737465725472616465436f6e74726163744e46543a206e6f206d617374655f8201527f7220747261646520636f6e747261637473206578697374000000000000000000602082015250565b5f6123a6603783611c9a565b91506123b18261234c565b604082019050919050565b5f6020820190508181035f8301526123d38161239a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61241182611d20565b915061241c83611d20565b9250828203905081811115612434576124336123da565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261245b565b6124a0868361245b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124db6124d66124d184611d20565b6124b8565b611d20565b9050919050565b5f819050919050565b6124f4836124c1565b612508612500826124e2565b848454612467565b825550505050565b5f90565b61251c612510565b6125278184846124eb565b505050565b5b8181101561254a5761253f5f82612514565b60018101905061252d565b5050565b601f82111561258f576125608161243a565b6125698461244c565b81016020851015612578578190505b61258c6125848561244c565b83018261252c565b50505b505050565b5f82821c905092915050565b5f6125af5f1984600802612594565b1980831691505092915050565b5f6125c783836125a0565b9150826002028217905092915050565b6125e082611c90565b67ffffffffffffffff8111156125f9576125f8611f78565b5b61260382546122e7565b61260e82828561254e565b5f60209050601f83116001811461263f575f841561262d578287015190505b61263785826125bc565b86555061269e565b601f19841661264d8661243a565b5f5b828110156126745784890151825560018201915060208501945060208101905061264f565b86831015612691578489015161268d601f8916826125a0565b8355505b6001600288020188555050505b505050505050565b5f6126b082611d20565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126e2576126e16123da565b5b600182019050919050565b5f81905092915050565b5f61270182611c90565b61270b81856126ed565b935061271b818560208601611caa565b80840191505092915050565b5f61273282856126f7565b915061273e82846126f7565b91508190509392505050565b7f4d61737465725472616465436f6e74726163744e46543a206d617374657220745f8201527f7261646520636f6e747261637420646f6573206e6f7420657869737400000000602082015250565b5f6127a4603c83611c9a565b91506127af8261274a565b604082019050919050565b5f6020820190508181035f8301526127d181612798565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6127fc826127d8565b61280681856127e2565b9350612816818560208601611caa565b61281f81611cb8565b840191505092915050565b5f60808201905061283d5f830187611dae565b61284a6020830186611dae565b6128576040830185611f48565b818103606083015261286981846127f2565b905095945050505050565b5f8151905061288281611c08565b92915050565b5f6020828403121561289d5761289c611bd5565b5b5f6128aa84828501612874565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506128f35f830185611dae565b6129006020830184611f48565b939250505056fea26469706673582212209f9e183a21487a92203b1ccf2615c5183cb5cc928c4a915c206b8d83a8aa614c64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F0C CODESIZE SUB DUP1 PUSH2 0x2F0C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D61737465725472616465436F6E74726163744E465400000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D54434E46540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x235 DUP3 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x260 DUP2 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x208 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288 DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x381 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x38B DUP7 DUP4 PUSH2 0x346 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3CF PUSH2 0x3CA PUSH2 0x3C5 DUP5 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x3F4 DUP3 PUSH2 0x3D6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x352 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x41B DUP2 DUP5 DUP5 PUSH2 0x3DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH2 0x433 PUSH0 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x421 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x454 DUP2 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x45D DUP5 PUSH2 0x337 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x480 PUSH2 0x478 DUP6 PUSH2 0x337 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x420 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x488 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BB DUP4 DUP4 PUSH2 0x494 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP3 PUSH2 0x291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH2 0x4F7 DUP3 SLOAD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x502 DUP3 DUP3 DUP6 PUSH2 0x442 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x533 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x521 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52B DUP6 DUP3 PUSH2 0x4B0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x541 DUP7 PUSH2 0x325 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x543 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x585 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x581 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x494 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A3 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BC PUSH0 DUP4 ADD DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x293D DUP1 PUSH2 0x5CF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB3A599EE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB3A599EE EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xF993D400 EQ PUSH2 0x3ED JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x9742DB55 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA65C7494 EQ PUSH2 0x307 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x2E9B6D62 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2E9B6D62 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x8AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0xBB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4F7 JUMPI POP PUSH2 0x4F6 DUP3 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x50C SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x538 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x583 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x566 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x597 DUP3 PUSH2 0xDD2 JUMP JUMPDEST POP PUSH2 0x5A1 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BA DUP3 DUP3 PUSH2 0x5B5 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x641 DUP4 DUP4 PUSH2 0x63C PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B7 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x1BB9 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x790 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP3 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x868 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x8BE PUSH0 PUSH2 0x113C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x923 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x96E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x945 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x96E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x951 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x980 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x990 DUP4 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x25D7 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D9 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0x9EE PUSH2 0xE91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xA18 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA44 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xAB6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x145B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC7 DUP3 PUSH2 0xDD2 JUMP JUMPDEST POP PUSH0 PUSH2 0xAD1 PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB1A JUMP JUMPDEST DUP1 PUSH2 0xAF9 DUP5 PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0A SWAP3 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB8 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0x113C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x1BB9 JUMP JUMPDEST PUSH0 PUSH2 0xC46 DUP4 PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xCE1 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0D SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDD DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1726 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEB5 DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF6 JUMPI PUSH2 0xEF5 DUP2 DUP5 DUP7 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF81 JUMPI PUSH2 0xF35 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1000 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10BD PUSH2 0xE91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10DB PUSH2 0x8C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113A JUMPI PUSH2 0x10FE PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x127B DUP4 DUP4 PUSH0 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x144E SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1607 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x149E PUSH2 0xE91 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x157C JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1574 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1605 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1631 DUP5 PUSH2 0x19A8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1681 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x16E2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x16D7 JUMPI PUSH2 0x16D6 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x168E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x175E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1890 JUMPI PUSH0 PUSH2 0x176D DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17D7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17EA JUMPI POP PUSH2 0x17E8 DUP2 DUP5 PUSH2 0xB22 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x182C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x188E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18F0 DUP4 DUP4 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x19A3 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1964 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195B SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP3 SWAP2 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A04 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A41 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A70 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A99 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A8F JUMPI PUSH2 0x1A8E PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1ABE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AE1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AD7 JUMPI PUSH2 0x1AD6 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AF0 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BB0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B71 JUMPI POP PUSH2 0x1B70 DUP5 DUP5 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BAF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B97 DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C11 DUP2 PUSH2 0x1BDD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2C DUP2 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C47 JUMPI PUSH2 0x1C46 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C54 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C71 DUP2 PUSH2 0x1C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8A PUSH0 DUP4 ADD DUP5 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD2 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1CDC DUP2 DUP6 PUSH2 0x1C9A JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1CF5 DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D18 DUP2 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D32 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D4D DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D75 DUP5 DUP3 DUP6 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA7 DUP3 PUSH2 0x1D7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB7 DUP2 PUSH2 0x1D9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDF DUP2 PUSH2 0x1D9D JUMP JUMPDEST DUP2 EQ PUSH2 0x1DE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DFA DUP2 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E23 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E34 DUP6 DUP3 DUP7 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E62 DUP7 DUP3 DUP8 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E73 DUP7 DUP3 DUP8 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E84 DUP7 DUP3 DUP8 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA8 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1EB2 DUP2 DUP6 PUSH2 0x1E8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1EC2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1ECB DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F15 DUP2 DUP5 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3F DUP5 DUP3 DUP6 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F51 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FAE DUP3 PUSH2 0x1CB8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH2 0x1BCC JUMP JUMPDEST SWAP1 POP PUSH2 0x1FEB DUP3 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2013 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH2 0x203B DUP5 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x205C JUMPI PUSH2 0x205B PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x2067 DUP5 DUP3 DUP6 PUSH2 0x2020 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2093 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x202E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BF DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x20EC DUP6 DUP3 DUP7 ADD PUSH2 0x206F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20FF DUP2 PUSH2 0x1C5D JUMP JUMPDEST DUP2 EQ PUSH2 0x2109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211A DUP2 PUSH2 0x20F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2143 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2154 DUP6 DUP3 DUP7 ADD PUSH2 0x210C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2181 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21A0 PUSH2 0x219B DUP5 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21BC JUMPI PUSH2 0x21BB PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x21C7 DUP5 DUP3 DUP6 PUSH2 0x2020 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x218E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2221 DUP8 DUP3 DUP9 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2232 DUP8 DUP3 DUP9 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2243 DUP8 DUP3 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH2 0x2263 PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x2270 DUP8 DUP3 DUP9 ADD PUSH2 0x21CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229F DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x22BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x232A PUSH0 DUP4 ADD DUP7 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2337 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2344 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D61737465725472616465436F6E74726163744E46543A206E6F206D61737465 PUSH0 DUP3 ADD MSTORE PUSH32 0x7220747261646520636F6E747261637473206578697374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A6 PUSH1 0x37 DUP4 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP PUSH2 0x23B1 DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2411 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x241C DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x23DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2496 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x245B JUMP JUMPDEST PUSH2 0x24A0 DUP7 DUP4 PUSH2 0x245B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DB PUSH2 0x24D6 PUSH2 0x24D1 DUP5 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F4 DUP4 PUSH2 0x24C1 JUMP JUMPDEST PUSH2 0x2508 PUSH2 0x2500 DUP3 PUSH2 0x24E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2467 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x251C PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2527 DUP2 DUP5 DUP5 PUSH2 0x24EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x254A JUMPI PUSH2 0x253F PUSH0 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x252D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x258F JUMPI PUSH2 0x2560 DUP2 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x2569 DUP5 PUSH2 0x244C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2578 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x258C PUSH2 0x2584 DUP6 PUSH2 0x244C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x252C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25AF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2594 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C7 DUP4 DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25E0 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2603 DUP3 SLOAD PUSH2 0x22E7 JUMP JUMPDEST PUSH2 0x260E DUP3 DUP3 DUP6 PUSH2 0x254E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x263F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x262D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2637 DUP6 DUP3 PUSH2 0x25BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x269E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x264D DUP7 PUSH2 0x243A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2674 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x264F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2691 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x268D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25A0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B0 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26E2 JUMPI PUSH2 0x26E1 PUSH2 0x23DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2701 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x270B DUP2 DUP6 PUSH2 0x26ED JUMP JUMPDEST SWAP4 POP PUSH2 0x271B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2732 DUP3 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x273E DUP3 DUP5 PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D61737465725472616465436F6E74726163744E46543A206D61737465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261646520636F6E747261637420646F6573206E6F7420657869737400000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A4 PUSH1 0x3C DUP4 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP PUSH2 0x27AF DUP3 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D1 DUP2 PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27FC DUP3 PUSH2 0x27D8 JUMP JUMPDEST PUSH2 0x2806 DUP2 DUP6 PUSH2 0x27E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2816 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x281F DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x283D PUSH0 DUP4 ADD DUP8 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x284A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2857 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F48 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2869 DUP2 DUP5 PUSH2 0x27F2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2882 DUP2 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x289D JUMPI PUSH2 0x289C PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28AA DUP5 DUP3 DUP6 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28F3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2900 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SWAP15 XOR GASPRICE 0x21 BASEFEE PUSH27 0x92203B1CCF2615C5183CB5CC928C4A915C206B8D83A8AA614C6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "170:1318:12:-:0;;;415:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;457:12;1381:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;415:101:12;170:1318;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;170:1318:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1096": {
									"entryPoint": 3736,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 5926,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": 5645,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 6373,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 5211,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4277,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 3672,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 6905,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 4607,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 3729,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 5869,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 3538,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 4850,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4412,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 3754,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 1448,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 2039,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1421,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLatestMasterTradeContractDetails_3046": {
									"entryPoint": 1725,
									"id": 3046,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMasterTradeContractDetails_3026": {
									"entryPoint": 3124,
									"id": 3026,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 2850,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2651": {
									"entryPoint": 6568,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@masterTradeContracts_2952": {
									"entryPoint": 2553,
									"id": 2952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintMasterTradeContract_2997": {
									"entryPoint": 2424,
									"id": 2997,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 1278,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextMasterTradeContractId_2954": {
									"entryPoint": 2713,
									"id": 2954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_426": {
									"entryPoint": 2022,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2240,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2221,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1991,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 2719,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2531,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1764": {
									"entryPoint": 3433,
									"id": 1764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 1053,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2280,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1554": {
									"entryPoint": 5667,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 2748,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1470,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2992,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_MasterTradeContract_$2947_memory_ptr_to_t_struct$_MasterTradeContract_$2947_memory_ptr_fromStack": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10023,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10282,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10464,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MasterTradeContract_$2947_memory_ptr__to_t_struct$_MasterTradeContract_$2947_memory_ptr__fromStack_reversed": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10419,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886": {
									"entryPoint": 9036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89": {
									"entryPoint": 10058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25003:13",
										"nodeType": "YulBlock",
										"src": "0:25003:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:32:13",
													"nodeType": "YulBlock",
													"src": "2798:32:13",
													"statements": [
														{
															"nativeSrc": "2808:16:13",
															"nodeType": "YulAssignment",
															"src": "2808:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:13",
																"nodeType": "YulIdentifier",
																"src": "2819:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:77:13"
											},
											{
												"body": {
													"nativeSrc": "2879:79:13",
													"nodeType": "YulBlock",
													"src": "2879:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:13",
																"nodeType": "YulBlock",
																"src": "2936:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:13"
																			},
																			"nativeSrc": "2938:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:13"
																		},
																		"nativeSrc": "2938:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:13"
																				},
																				"nativeSrc": "2909:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:13"
																		},
																		"nativeSrc": "2899:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:13"
																},
																"nativeSrc": "2892:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:13"
															},
															"nativeSrc": "2889:63:13",
															"nodeType": "YulIf",
															"src": "2889:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:13",
														"nodeType": "YulTypedName",
														"src": "2872:5:13",
														"type": ""
													}
												],
												"src": "2836:122:13"
											},
											{
												"body": {
													"nativeSrc": "3016:87:13",
													"nodeType": "YulBlock",
													"src": "3016:87:13",
													"statements": [
														{
															"nativeSrc": "3026:29:13",
															"nodeType": "YulAssignment",
															"src": "3026:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:13"
																},
																"nativeSrc": "3035:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:13"
																},
																"nativeSrc": "3064:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:13"
															},
															"nativeSrc": "3064:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:13",
														"nodeType": "YulTypedName",
														"src": "2994:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:13",
														"nodeType": "YulTypedName",
														"src": "3002:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:13",
														"nodeType": "YulTypedName",
														"src": "3010:5:13",
														"type": ""
													}
												],
												"src": "2964:139:13"
											},
											{
												"body": {
													"nativeSrc": "3175:263:13",
													"nodeType": "YulBlock",
													"src": "3175:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:13",
																"nodeType": "YulBlock",
																"src": "3221:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:13"
																			},
																			"nativeSrc": "3223:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:13"
																		},
																		"nativeSrc": "3223:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:13"
																		},
																		"nativeSrc": "3192:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:13"
																},
																"nativeSrc": "3188:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:13"
															},
															"nativeSrc": "3185:119:13",
															"nodeType": "YulIf",
															"src": "3185:119:13"
														},
														{
															"nativeSrc": "3314:117:13",
															"nodeType": "YulBlock",
															"src": "3314:117:13",
															"statements": [
																{
																	"nativeSrc": "3329:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:13"
																				},
																				"nativeSrc": "3389:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:13"
																		},
																		"nativeSrc": "3368:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:13",
														"nodeType": "YulTypedName",
														"src": "3145:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:13",
														"nodeType": "YulTypedName",
														"src": "3156:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:13",
														"nodeType": "YulTypedName",
														"src": "3168:6:13",
														"type": ""
													}
												],
												"src": "3109:329:13"
											},
											{
												"body": {
													"nativeSrc": "3489:81:13",
													"nodeType": "YulBlock",
													"src": "3489:81:13",
													"statements": [
														{
															"nativeSrc": "3499:65:13",
															"nodeType": "YulAssignment",
															"src": "3499:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:13"
																},
																"nativeSrc": "3510:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:13",
														"nodeType": "YulTypedName",
														"src": "3481:7:13",
														"type": ""
													}
												],
												"src": "3444:126:13"
											},
											{
												"body": {
													"nativeSrc": "3621:51:13",
													"nodeType": "YulBlock",
													"src": "3621:51:13",
													"statements": [
														{
															"nativeSrc": "3631:35:13",
															"nodeType": "YulAssignment",
															"src": "3631:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:13"
																},
																"nativeSrc": "3642:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:13",
														"nodeType": "YulTypedName",
														"src": "3603:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:13",
														"nodeType": "YulTypedName",
														"src": "3613:7:13",
														"type": ""
													}
												],
												"src": "3576:96:13"
											},
											{
												"body": {
													"nativeSrc": "3743:53:13",
													"nodeType": "YulBlock",
													"src": "3743:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:13"
																		},
																		"nativeSrc": "3765:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nativeSrc": "3753:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:13"
															},
															"nativeSrc": "3753:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:13",
														"nodeType": "YulTypedName",
														"src": "3731:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:13",
														"nodeType": "YulTypedName",
														"src": "3738:3:13",
														"type": ""
													}
												],
												"src": "3678:118:13"
											},
											{
												"body": {
													"nativeSrc": "3900:124:13",
													"nodeType": "YulBlock",
													"src": "3900:124:13",
													"statements": [
														{
															"nativeSrc": "3910:26:13",
															"nodeType": "YulAssignment",
															"src": "3910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:13"
																},
																"nativeSrc": "3918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:13"
																},
																"nativeSrc": "3946:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:13"
															},
															"nativeSrc": "3946:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:13",
														"nodeType": "YulTypedName",
														"src": "3872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:13",
														"nodeType": "YulTypedName",
														"src": "3884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:13",
														"nodeType": "YulTypedName",
														"src": "3895:4:13",
														"type": ""
													}
												],
												"src": "3802:222:13"
											},
											{
												"body": {
													"nativeSrc": "4073:79:13",
													"nodeType": "YulBlock",
													"src": "4073:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:13",
																"nodeType": "YulBlock",
																"src": "4130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:13"
																			},
																			"nativeSrc": "4132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:13"
																		},
																		"nativeSrc": "4132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:13"
																				},
																				"nativeSrc": "4103:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:13"
																		},
																		"nativeSrc": "4093:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:13"
															},
															"nativeSrc": "4083:63:13",
															"nodeType": "YulIf",
															"src": "4083:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:13",
														"nodeType": "YulTypedName",
														"src": "4066:5:13",
														"type": ""
													}
												],
												"src": "4030:122:13"
											},
											{
												"body": {
													"nativeSrc": "4210:87:13",
													"nodeType": "YulBlock",
													"src": "4210:87:13",
													"statements": [
														{
															"nativeSrc": "4220:29:13",
															"nodeType": "YulAssignment",
															"src": "4220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:13"
																},
																"nativeSrc": "4229:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:13"
																},
																"nativeSrc": "4258:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:13"
															},
															"nativeSrc": "4258:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:13",
														"nodeType": "YulTypedName",
														"src": "4188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:13",
														"nodeType": "YulTypedName",
														"src": "4196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:13",
														"nodeType": "YulTypedName",
														"src": "4204:5:13",
														"type": ""
													}
												],
												"src": "4158:139:13"
											},
											{
												"body": {
													"nativeSrc": "4386:391:13",
													"nodeType": "YulBlock",
													"src": "4386:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:13",
																"nodeType": "YulBlock",
																"src": "4432:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:13"
																			},
																			"nativeSrc": "4434:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:13"
																		},
																		"nativeSrc": "4434:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:13"
																		},
																		"nativeSrc": "4403:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:13"
																},
																"nativeSrc": "4399:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:13"
															},
															"nativeSrc": "4396:119:13",
															"nodeType": "YulIf",
															"src": "4396:119:13"
														},
														{
															"nativeSrc": "4525:117:13",
															"nodeType": "YulBlock",
															"src": "4525:117:13",
															"statements": [
																{
																	"nativeSrc": "4540:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:13"
																				},
																				"nativeSrc": "4600:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:13"
																		},
																		"nativeSrc": "4579:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:13",
															"nodeType": "YulBlock",
															"src": "4652:118:13",
															"statements": [
																{
																	"nativeSrc": "4667:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:13"
																				},
																				"nativeSrc": "4728:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:13"
																		},
																		"nativeSrc": "4707:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:13",
														"nodeType": "YulTypedName",
														"src": "4348:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:13",
														"nodeType": "YulTypedName",
														"src": "4359:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:13",
														"nodeType": "YulTypedName",
														"src": "4371:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:13",
														"nodeType": "YulTypedName",
														"src": "4379:6:13",
														"type": ""
													}
												],
												"src": "4303:474:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5494:73:13",
													"nodeType": "YulBlock",
													"src": "5494:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5511:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5516:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5516:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5504:6:13"
																},
																"nativeSrc": "5504:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5504:19:13"
															},
															"nativeSrc": "5504:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "5504:19:13"
														},
														{
															"nativeSrc": "5532:29:13",
															"nodeType": "YulAssignment",
															"src": "5532:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5551:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5551:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5556:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5556:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5547:3:13"
																},
																"nativeSrc": "5547:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5547:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5532:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5532:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "5408:159:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5466:3:13",
														"nodeType": "YulTypedName",
														"src": "5466:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5471:6:13",
														"nodeType": "YulTypedName",
														"src": "5471:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5482:11:13",
														"nodeType": "YulTypedName",
														"src": "5482:11:13",
														"type": ""
													}
												],
												"src": "5408:159:13"
											},
											{
												"body": {
													"nativeSrc": "5655:275:13",
													"nodeType": "YulBlock",
													"src": "5655:275:13",
													"statements": [
														{
															"nativeSrc": "5665:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5665:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5712:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5712:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5679:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5679:32:13"
																},
																"nativeSrc": "5679:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5679:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5669:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5669:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5727:68:13",
															"nodeType": "YulAssignment",
															"src": "5727:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5783:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5788:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5788:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "5734:48:13",
																	"nodeType": "YulIdentifier",
																	"src": "5734:48:13"
																},
																"nativeSrc": "5734:61:13",
																"nodeType": "YulFunctionCall",
																"src": "5734:61:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5727:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5843:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5843:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5850:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5850:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5839:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:13"
																		},
																		"nativeSrc": "5839:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5839:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5857:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5857:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5862:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5862:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5804:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "5804:34:13"
																},
																"nativeSrc": "5804:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5804:65:13"
															},
															"nativeSrc": "5804:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5804:65:13"
														},
														{
															"nativeSrc": "5878:46:13",
															"nodeType": "YulAssignment",
															"src": "5878:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5889:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5889:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5916:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5916:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5894:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5894:21:13"
																		},
																		"nativeSrc": "5894:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5885:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5885:3:13"
																},
																"nativeSrc": "5885:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5885:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5878:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5878:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "5573:357:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:13",
														"nodeType": "YulTypedName",
														"src": "5636:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5643:3:13",
														"nodeType": "YulTypedName",
														"src": "5643:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5651:3:13",
														"nodeType": "YulTypedName",
														"src": "5651:3:13",
														"type": ""
													}
												],
												"src": "5573:357:13"
											},
											{
												"body": {
													"nativeSrc": "6194:315:13",
													"nodeType": "YulBlock",
													"src": "6194:315:13",
													"statements": [
														{
															"nativeSrc": "6204:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6204:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6220:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6220:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6225:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6225:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:13"
																},
																"nativeSrc": "6216:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6216:14:13"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6208:4:13",
																	"nodeType": "YulTypedName",
																	"src": "6208:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6240:242:13",
															"nodeType": "YulBlock",
															"src": "6240:242:13",
															"statements": [
																{
																	"nativeSrc": "6282:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6282:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6312:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6312:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6319:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6319:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6308:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6308:3:13"
																				},
																				"nativeSrc": "6308:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6308:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6302:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6302:5:13"
																		},
																		"nativeSrc": "6302:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6286:12:13",
																			"nodeType": "YulTypedName",
																			"src": "6286:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6350:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6350:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6355:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6355:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6346:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6346:3:13"
																				},
																				"nativeSrc": "6346:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6346:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "6366:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6366:4:13"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "6372:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6372:3:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6362:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6362:3:13"
																				},
																				"nativeSrc": "6362:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6362:14:13"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "6339:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6339:6:13"
																		},
																		"nativeSrc": "6339:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6339:38:13"
																	},
																	"nativeSrc": "6339:38:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "6339:38:13"
																},
																{
																	"nativeSrc": "6390:81:13",
																	"nodeType": "YulAssignment",
																	"src": "6390:81:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6452:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "6452:12:13"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "6466:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6466:4:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "6398:53:13",
																			"nodeType": "YulIdentifier",
																			"src": "6398:53:13"
																		},
																		"nativeSrc": "6398:73:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6398:73:13"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "6390:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6390:4:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6492:11:13",
															"nodeType": "YulAssignment",
															"src": "6492:11:13",
															"value": {
																"name": "tail",
																"nativeSrc": "6499:4:13",
																"nodeType": "YulIdentifier",
																"src": "6499:4:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6492:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MasterTradeContract_$2947_memory_ptr_to_t_struct$_MasterTradeContract_$2947_memory_ptr_fromStack",
												"nativeSrc": "6046:463:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6173:5:13",
														"nodeType": "YulTypedName",
														"src": "6173:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6180:3:13",
														"nodeType": "YulTypedName",
														"src": "6180:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6189:3:13",
														"nodeType": "YulTypedName",
														"src": "6189:3:13",
														"type": ""
													}
												],
												"src": "6046:463:13"
											},
											{
												"body": {
													"nativeSrc": "6687:249:13",
													"nodeType": "YulBlock",
													"src": "6687:249:13",
													"statements": [
														{
															"nativeSrc": "6697:26:13",
															"nodeType": "YulAssignment",
															"src": "6697:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6709:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6709:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6720:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6720:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6705:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:13"
																},
																"nativeSrc": "6705:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6705:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6697:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6744:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6744:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6755:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6755:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6740:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6740:3:13"
																		},
																		"nativeSrc": "6740:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6740:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6763:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6763:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6769:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6759:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:13"
																		},
																		"nativeSrc": "6759:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6733:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:13"
																},
																"nativeSrc": "6733:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6733:47:13"
															},
															"nativeSrc": "6733:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6733:47:13"
														},
														{
															"nativeSrc": "6789:140:13",
															"nodeType": "YulAssignment",
															"src": "6789:140:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6915:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6915:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6924:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6924:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MasterTradeContract_$2947_memory_ptr_to_t_struct$_MasterTradeContract_$2947_memory_ptr_fromStack",
																	"nativeSrc": "6797:117:13",
																	"nodeType": "YulIdentifier",
																	"src": "6797:117:13"
																},
																"nativeSrc": "6797:132:13",
																"nodeType": "YulFunctionCall",
																"src": "6797:132:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6789:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6789:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MasterTradeContract_$2947_memory_ptr__to_t_struct$_MasterTradeContract_$2947_memory_ptr__fromStack_reversed",
												"nativeSrc": "6515:421:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6659:9:13",
														"nodeType": "YulTypedName",
														"src": "6659:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6671:6:13",
														"nodeType": "YulTypedName",
														"src": "6671:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6682:4:13",
														"nodeType": "YulTypedName",
														"src": "6682:4:13",
														"type": ""
													}
												],
												"src": "6515:421:13"
											},
											{
												"body": {
													"nativeSrc": "7008:263:13",
													"nodeType": "YulBlock",
													"src": "7008:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7054:83:13",
																"nodeType": "YulBlock",
																"src": "7054:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7056:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7056:77:13"
																			},
																			"nativeSrc": "7056:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7056:79:13"
																		},
																		"nativeSrc": "7056:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7056:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7029:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7029:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7038:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7038:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7025:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7025:3:13"
																		},
																		"nativeSrc": "7025:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7050:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7050:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7021:3:13"
																},
																"nativeSrc": "7021:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7021:32:13"
															},
															"nativeSrc": "7018:119:13",
															"nodeType": "YulIf",
															"src": "7018:119:13"
														},
														{
															"nativeSrc": "7147:117:13",
															"nodeType": "YulBlock",
															"src": "7147:117:13",
															"statements": [
																{
																	"nativeSrc": "7162:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7162:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7176:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7176:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7166:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7166:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7191:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7191:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7226:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7226:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7237:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7237:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7222:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7222:3:13"
																				},
																				"nativeSrc": "7222:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7222:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7246:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7246:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7201:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7201:20:13"
																		},
																		"nativeSrc": "7201:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7201:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7191:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7191:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6942:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6978:9:13",
														"nodeType": "YulTypedName",
														"src": "6978:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6989:7:13",
														"nodeType": "YulTypedName",
														"src": "6989:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7001:6:13",
														"nodeType": "YulTypedName",
														"src": "7001:6:13",
														"type": ""
													}
												],
												"src": "6942:329:13"
											},
											{
												"body": {
													"nativeSrc": "7342:53:13",
													"nodeType": "YulBlock",
													"src": "7342:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7359:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7359:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7382:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7382:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7364:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7364:17:13"
																		},
																		"nativeSrc": "7364:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7352:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:13"
																},
																"nativeSrc": "7352:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7352:37:13"
															},
															"nativeSrc": "7352:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7352:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7277:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7330:5:13",
														"nodeType": "YulTypedName",
														"src": "7330:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7337:3:13",
														"nodeType": "YulTypedName",
														"src": "7337:3:13",
														"type": ""
													}
												],
												"src": "7277:118:13"
											},
											{
												"body": {
													"nativeSrc": "7499:124:13",
													"nodeType": "YulBlock",
													"src": "7499:124:13",
													"statements": [
														{
															"nativeSrc": "7509:26:13",
															"nodeType": "YulAssignment",
															"src": "7509:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7521:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7521:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7532:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7517:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:13"
																},
																"nativeSrc": "7517:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7517:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7509:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7509:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7589:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7589:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7602:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7613:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7613:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7598:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:13"
																		},
																		"nativeSrc": "7598:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7598:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7545:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7545:43:13"
																},
																"nativeSrc": "7545:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7545:71:13"
															},
															"nativeSrc": "7545:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7545:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7401:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7471:9:13",
														"nodeType": "YulTypedName",
														"src": "7471:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7483:6:13",
														"nodeType": "YulTypedName",
														"src": "7483:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7494:4:13",
														"nodeType": "YulTypedName",
														"src": "7494:4:13",
														"type": ""
													}
												],
												"src": "7401:222:13"
											},
											{
												"body": {
													"nativeSrc": "7718:28:13",
													"nodeType": "YulBlock",
													"src": "7718:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7735:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7738:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7738:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7728:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7728:6:13"
																},
																"nativeSrc": "7728:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7728:12:13"
															},
															"nativeSrc": "7728:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7728:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7629:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7629:117:13"
											},
											{
												"body": {
													"nativeSrc": "7841:28:13",
													"nodeType": "YulBlock",
													"src": "7841:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7858:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7858:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7861:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7861:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7851:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:13"
																},
																"nativeSrc": "7851:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7851:12:13"
															},
															"nativeSrc": "7851:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7851:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7752:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7752:117:13"
											},
											{
												"body": {
													"nativeSrc": "7903:152:13",
													"nodeType": "YulBlock",
													"src": "7903:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7920:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7920:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7923:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7923:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7913:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:13"
																},
																"nativeSrc": "7913:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7913:88:13"
															},
															"nativeSrc": "7913:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7913:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8017:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8017:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8020:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8020:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8010:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8010:6:13"
																},
																"nativeSrc": "8010:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8010:15:13"
															},
															"nativeSrc": "8010:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8010:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8041:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8044:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8034:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:13"
																},
																"nativeSrc": "8034:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:13"
															},
															"nativeSrc": "8034:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8034:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7875:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7875:180:13"
											},
											{
												"body": {
													"nativeSrc": "8104:238:13",
													"nodeType": "YulBlock",
													"src": "8104:238:13",
													"statements": [
														{
															"nativeSrc": "8114:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8114:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8136:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8136:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8166:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8166:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8144:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "8144:21:13"
																		},
																		"nativeSrc": "8144:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8132:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:13"
																},
																"nativeSrc": "8132:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8132:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8118:10:13",
																	"nodeType": "YulTypedName",
																	"src": "8118:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8283:22:13",
																"nodeType": "YulBlock",
																"src": "8283:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8285:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8285:16:13"
																			},
																			"nativeSrc": "8285:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8285:18:13"
																		},
																		"nativeSrc": "8285:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8285:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8226:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8226:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8238:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8238:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8223:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8223:2:13"
																		},
																		"nativeSrc": "8223:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8262:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8262:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8274:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8274:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8259:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8259:2:13"
																		},
																		"nativeSrc": "8259:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8259:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8220:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:13"
																},
																"nativeSrc": "8220:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8220:62:13"
															},
															"nativeSrc": "8217:88:13",
															"nodeType": "YulIf",
															"src": "8217:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8321:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8325:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "8325:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:13"
																},
																"nativeSrc": "8314:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8314:22:13"
															},
															"nativeSrc": "8314:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8314:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8061:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8090:6:13",
														"nodeType": "YulTypedName",
														"src": "8090:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8098:4:13",
														"nodeType": "YulTypedName",
														"src": "8098:4:13",
														"type": ""
													}
												],
												"src": "8061:281:13"
											},
											{
												"body": {
													"nativeSrc": "8389:88:13",
													"nodeType": "YulBlock",
													"src": "8389:88:13",
													"statements": [
														{
															"nativeSrc": "8399:30:13",
															"nodeType": "YulAssignment",
															"src": "8399:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8409:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8409:18:13"
																},
																"nativeSrc": "8409:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8409:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8458:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8458:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8466:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8466:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8438:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "8438:19:13"
																},
																"nativeSrc": "8438:33:13",
																"nodeType": "YulFunctionCall",
																"src": "8438:33:13"
															},
															"nativeSrc": "8438:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "8438:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8348:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8373:4:13",
														"nodeType": "YulTypedName",
														"src": "8373:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8382:6:13",
														"nodeType": "YulTypedName",
														"src": "8382:6:13",
														"type": ""
													}
												],
												"src": "8348:129:13"
											},
											{
												"body": {
													"nativeSrc": "8550:241:13",
													"nodeType": "YulBlock",
													"src": "8550:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8655:22:13",
																"nodeType": "YulBlock",
																"src": "8655:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8657:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8657:16:13"
																			},
																			"nativeSrc": "8657:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8657:18:13"
																		},
																		"nativeSrc": "8657:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8657:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8627:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8627:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8635:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8635:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8624:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8624:2:13"
																},
																"nativeSrc": "8624:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8624:30:13"
															},
															"nativeSrc": "8621:56:13",
															"nodeType": "YulIf",
															"src": "8621:56:13"
														},
														{
															"nativeSrc": "8687:37:13",
															"nodeType": "YulAssignment",
															"src": "8687:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8717:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8717:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8695:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "8695:21:13"
																},
																"nativeSrc": "8695:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8695:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8687:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8687:4:13"
																}
															]
														},
														{
															"nativeSrc": "8761:23:13",
															"nodeType": "YulAssignment",
															"src": "8761:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8773:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8773:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8779:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8779:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8769:3:13"
																},
																"nativeSrc": "8769:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8769:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8761:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8483:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8534:6:13",
														"nodeType": "YulTypedName",
														"src": "8534:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8545:4:13",
														"nodeType": "YulTypedName",
														"src": "8545:4:13",
														"type": ""
													}
												],
												"src": "8483:308:13"
											},
											{
												"body": {
													"nativeSrc": "8861:84:13",
													"nodeType": "YulBlock",
													"src": "8861:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8885:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8885:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8890:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8890:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8895:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8895:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8872:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8872:12:13"
																},
																"nativeSrc": "8872:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8872:30:13"
															},
															"nativeSrc": "8872:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8872:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8922:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8922:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8927:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8927:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8918:3:13"
																		},
																		"nativeSrc": "8918:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8918:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8936:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8911:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8911:6:13"
																},
																"nativeSrc": "8911:27:13",
																"nodeType": "YulFunctionCall",
																"src": "8911:27:13"
															},
															"nativeSrc": "8911:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "8911:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8797:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8843:3:13",
														"nodeType": "YulTypedName",
														"src": "8843:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8848:3:13",
														"nodeType": "YulTypedName",
														"src": "8848:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8853:6:13",
														"nodeType": "YulTypedName",
														"src": "8853:6:13",
														"type": ""
													}
												],
												"src": "8797:148:13"
											},
											{
												"body": {
													"nativeSrc": "9035:341:13",
													"nodeType": "YulBlock",
													"src": "9035:341:13",
													"statements": [
														{
															"nativeSrc": "9045:75:13",
															"nodeType": "YulAssignment",
															"src": "9045:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9112:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9112:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "9070:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "9070:41:13"
																		},
																		"nativeSrc": "9070:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9070:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9054:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9054:15:13"
																},
																"nativeSrc": "9054:66:13",
																"nodeType": "YulFunctionCall",
																"src": "9054:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9045:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9045:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9136:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9136:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9143:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9143:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9129:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9129:6:13"
																},
																"nativeSrc": "9129:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9129:21:13"
															},
															"nativeSrc": "9129:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9129:21:13"
														},
														{
															"nativeSrc": "9159:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9159:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9174:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9174:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9181:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9181:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:13"
																},
																"nativeSrc": "9170:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9170:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9163:3:13",
																	"nodeType": "YulTypedName",
																	"src": "9163:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9224:83:13",
																"nodeType": "YulBlock",
																"src": "9224:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9226:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9226:77:13"
																			},
																			"nativeSrc": "9226:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9226:79:13"
																		},
																		"nativeSrc": "9226:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9226:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9205:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9205:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9210:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9210:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9201:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9201:3:13"
																		},
																		"nativeSrc": "9201:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9201:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9219:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9198:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9198:2:13"
																},
																"nativeSrc": "9198:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9198:25:13"
															},
															"nativeSrc": "9195:112:13",
															"nodeType": "YulIf",
															"src": "9195:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9353:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9358:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9358:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9363:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9363:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9316:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "9316:36:13"
																},
																"nativeSrc": "9316:54:13",
																"nodeType": "YulFunctionCall",
																"src": "9316:54:13"
															},
															"nativeSrc": "9316:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "9316:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8951:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9008:3:13",
														"nodeType": "YulTypedName",
														"src": "9008:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9013:6:13",
														"nodeType": "YulTypedName",
														"src": "9013:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9021:3:13",
														"nodeType": "YulTypedName",
														"src": "9021:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9029:5:13",
														"nodeType": "YulTypedName",
														"src": "9029:5:13",
														"type": ""
													}
												],
												"src": "8951:425:13"
											},
											{
												"body": {
													"nativeSrc": "9458:278:13",
													"nodeType": "YulBlock",
													"src": "9458:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9507:83:13",
																"nodeType": "YulBlock",
																"src": "9507:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9509:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9509:77:13"
																			},
																			"nativeSrc": "9509:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9509:79:13"
																		},
																		"nativeSrc": "9509:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9509:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9486:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9486:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9494:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9494:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9482:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9482:3:13"
																				},
																				"nativeSrc": "9482:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9482:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9501:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9501:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9478:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:13"
																		},
																		"nativeSrc": "9478:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9478:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9471:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9471:6:13"
																},
																"nativeSrc": "9471:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9471:35:13"
															},
															"nativeSrc": "9468:122:13",
															"nodeType": "YulIf",
															"src": "9468:122:13"
														},
														{
															"nativeSrc": "9599:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9599:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9626:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9626:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9613:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9613:12:13"
																},
																"nativeSrc": "9613:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9613:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9603:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9603:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9642:88:13",
															"nodeType": "YulAssignment",
															"src": "9642:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9703:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9703:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9711:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9711:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9699:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9699:3:13"
																		},
																		"nativeSrc": "9699:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9699:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9718:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9718:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9726:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9726:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9651:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "9651:47:13"
																},
																"nativeSrc": "9651:79:13",
																"nodeType": "YulFunctionCall",
																"src": "9651:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9642:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9642:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9396:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9436:6:13",
														"nodeType": "YulTypedName",
														"src": "9436:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9444:3:13",
														"nodeType": "YulTypedName",
														"src": "9444:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9452:5:13",
														"nodeType": "YulTypedName",
														"src": "9452:5:13",
														"type": ""
													}
												],
												"src": "9396:340:13"
											},
											{
												"body": {
													"nativeSrc": "9835:561:13",
													"nodeType": "YulBlock",
													"src": "9835:561:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9881:83:13",
																"nodeType": "YulBlock",
																"src": "9881:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9883:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9883:77:13"
																			},
																			"nativeSrc": "9883:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9883:79:13"
																		},
																		"nativeSrc": "9883:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9883:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9856:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9856:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9865:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9865:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9852:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9852:3:13"
																		},
																		"nativeSrc": "9852:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9852:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9877:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9877:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9848:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:13"
																},
																"nativeSrc": "9848:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9848:32:13"
															},
															"nativeSrc": "9845:119:13",
															"nodeType": "YulIf",
															"src": "9845:119:13"
														},
														{
															"nativeSrc": "9974:117:13",
															"nodeType": "YulBlock",
															"src": "9974:117:13",
															"statements": [
																{
																	"nativeSrc": "9989:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9989:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10003:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10003:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9993:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9993:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10018:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10018:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10053:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10053:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10064:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10064:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10049:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10049:3:13"
																				},
																				"nativeSrc": "10049:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10049:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10073:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10073:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10028:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10028:20:13"
																		},
																		"nativeSrc": "10028:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10028:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10018:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10018:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10101:288:13",
															"nodeType": "YulBlock",
															"src": "10101:288:13",
															"statements": [
																{
																	"nativeSrc": "10116:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10116:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10147:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10147:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10158:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10158:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10143:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10143:3:13"
																				},
																				"nativeSrc": "10143:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10143:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10130:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10130:12:13"
																		},
																		"nativeSrc": "10130:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10130:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10120:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10120:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10209:83:13",
																		"nodeType": "YulBlock",
																		"src": "10209:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10211:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10211:77:13"
																					},
																					"nativeSrc": "10211:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10211:79:13"
																				},
																				"nativeSrc": "10211:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10211:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10181:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10181:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10189:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10189:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10178:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10178:2:13"
																		},
																		"nativeSrc": "10178:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10178:30:13"
																	},
																	"nativeSrc": "10175:117:13",
																	"nodeType": "YulIf",
																	"src": "10175:117:13"
																},
																{
																	"nativeSrc": "10306:73:13",
																	"nodeType": "YulAssignment",
																	"src": "10306:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10351:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10351:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10362:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10362:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10347:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10347:3:13"
																				},
																				"nativeSrc": "10347:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10347:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10371:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10371:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10316:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "10316:30:13"
																		},
																		"nativeSrc": "10316:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10316:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10306:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10306:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "9742:654:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9797:9:13",
														"nodeType": "YulTypedName",
														"src": "9797:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9808:7:13",
														"nodeType": "YulTypedName",
														"src": "9808:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9820:6:13",
														"nodeType": "YulTypedName",
														"src": "9820:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9828:6:13",
														"nodeType": "YulTypedName",
														"src": "9828:6:13",
														"type": ""
													}
												],
												"src": "9742:654:13"
											},
											{
												"body": {
													"nativeSrc": "10442:76:13",
													"nodeType": "YulBlock",
													"src": "10442:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10496:16:13",
																"nodeType": "YulBlock",
																"src": "10496:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10505:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10505:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10508:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10508:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10498:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10498:6:13"
																			},
																			"nativeSrc": "10498:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10498:12:13"
																		},
																		"nativeSrc": "10498:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10498:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10465:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10465:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10487:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10487:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10472:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "10472:14:13"
																				},
																				"nativeSrc": "10472:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10472:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10462:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10462:2:13"
																		},
																		"nativeSrc": "10462:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10462:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10455:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10455:6:13"
																},
																"nativeSrc": "10455:40:13",
																"nodeType": "YulFunctionCall",
																"src": "10455:40:13"
															},
															"nativeSrc": "10452:60:13",
															"nodeType": "YulIf",
															"src": "10452:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10402:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10435:5:13",
														"nodeType": "YulTypedName",
														"src": "10435:5:13",
														"type": ""
													}
												],
												"src": "10402:116:13"
											},
											{
												"body": {
													"nativeSrc": "10573:84:13",
													"nodeType": "YulBlock",
													"src": "10573:84:13",
													"statements": [
														{
															"nativeSrc": "10583:29:13",
															"nodeType": "YulAssignment",
															"src": "10583:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10605:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10605:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10592:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10592:12:13"
																},
																"nativeSrc": "10592:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10592:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10583:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10583:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10645:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10645:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10621:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "10621:23:13"
																},
																"nativeSrc": "10621:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10621:30:13"
															},
															"nativeSrc": "10621:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10621:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "10524:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10551:6:13",
														"nodeType": "YulTypedName",
														"src": "10551:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10559:3:13",
														"nodeType": "YulTypedName",
														"src": "10559:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10567:5:13",
														"nodeType": "YulTypedName",
														"src": "10567:5:13",
														"type": ""
													}
												],
												"src": "10524:133:13"
											},
											{
												"body": {
													"nativeSrc": "10743:388:13",
													"nodeType": "YulBlock",
													"src": "10743:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10789:83:13",
																"nodeType": "YulBlock",
																"src": "10789:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10791:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10791:77:13"
																			},
																			"nativeSrc": "10791:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10791:79:13"
																		},
																		"nativeSrc": "10791:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10791:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10764:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10764:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10760:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10760:3:13"
																		},
																		"nativeSrc": "10760:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10760:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10785:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10756:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10756:3:13"
																},
																"nativeSrc": "10756:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10756:32:13"
															},
															"nativeSrc": "10753:119:13",
															"nodeType": "YulIf",
															"src": "10753:119:13"
														},
														{
															"nativeSrc": "10882:117:13",
															"nodeType": "YulBlock",
															"src": "10882:117:13",
															"statements": [
																{
																	"nativeSrc": "10897:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10897:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10911:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10911:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10901:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10901:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10926:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10926:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10961:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10961:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10972:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10972:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10957:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10957:3:13"
																				},
																				"nativeSrc": "10957:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10957:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10981:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10981:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10936:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10936:20:13"
																		},
																		"nativeSrc": "10936:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10936:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10926:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10926:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11009:115:13",
															"nodeType": "YulBlock",
															"src": "11009:115:13",
															"statements": [
																{
																	"nativeSrc": "11024:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11024:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11038:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11038:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11028:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11028:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11054:60:13",
																	"nodeType": "YulAssignment",
																	"src": "11054:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11086:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11086:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11097:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11097:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11082:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11082:3:13"
																				},
																				"nativeSrc": "11082:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11082:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11106:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11106:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "11064:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "11064:17:13"
																		},
																		"nativeSrc": "11064:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11064:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11054:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11054:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "10663:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10705:9:13",
														"nodeType": "YulTypedName",
														"src": "10705:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10716:7:13",
														"nodeType": "YulTypedName",
														"src": "10716:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10728:6:13",
														"nodeType": "YulTypedName",
														"src": "10728:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10736:6:13",
														"nodeType": "YulTypedName",
														"src": "10736:6:13",
														"type": ""
													}
												],
												"src": "10663:468:13"
											},
											{
												"body": {
													"nativeSrc": "11203:241:13",
													"nodeType": "YulBlock",
													"src": "11203:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11308:22:13",
																"nodeType": "YulBlock",
																"src": "11308:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11310:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11310:16:13"
																			},
																			"nativeSrc": "11310:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11310:18:13"
																		},
																		"nativeSrc": "11310:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11310:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11280:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11280:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:18:13",
																		"nodeType": "YulLiteral",
																		"src": "11288:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11277:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11277:2:13"
																},
																"nativeSrc": "11277:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11277:30:13"
															},
															"nativeSrc": "11274:56:13",
															"nodeType": "YulIf",
															"src": "11274:56:13"
														},
														{
															"nativeSrc": "11340:37:13",
															"nodeType": "YulAssignment",
															"src": "11340:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11370:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11370:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11348:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "11348:21:13"
																},
																"nativeSrc": "11348:29:13",
																"nodeType": "YulFunctionCall",
																"src": "11348:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11340:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11340:4:13"
																}
															]
														},
														{
															"nativeSrc": "11414:23:13",
															"nodeType": "YulAssignment",
															"src": "11414:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11426:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11426:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11432:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11432:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11422:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:13"
																},
																"nativeSrc": "11422:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11422:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11414:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "11137:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11187:6:13",
														"nodeType": "YulTypedName",
														"src": "11187:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11198:4:13",
														"nodeType": "YulTypedName",
														"src": "11198:4:13",
														"type": ""
													}
												],
												"src": "11137:307:13"
											},
											{
												"body": {
													"nativeSrc": "11533:340:13",
													"nodeType": "YulBlock",
													"src": "11533:340:13",
													"statements": [
														{
															"nativeSrc": "11543:74:13",
															"nodeType": "YulAssignment",
															"src": "11543:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11609:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11609:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11568:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "11568:40:13"
																		},
																		"nativeSrc": "11568:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11568:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11552:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "11552:15:13"
																},
																"nativeSrc": "11552:65:13",
																"nodeType": "YulFunctionCall",
																"src": "11552:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11543:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11543:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11633:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11633:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11640:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11640:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11626:6:13"
																},
																"nativeSrc": "11626:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11626:21:13"
															},
															"nativeSrc": "11626:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11626:21:13"
														},
														{
															"nativeSrc": "11656:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11656:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11671:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11671:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11678:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11678:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:13"
																},
																"nativeSrc": "11667:16:13",
																"nodeType": "YulFunctionCall",
																"src": "11667:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11660:3:13",
																	"nodeType": "YulTypedName",
																	"src": "11660:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11721:83:13",
																"nodeType": "YulBlock",
																"src": "11721:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11723:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11723:77:13"
																			},
																			"nativeSrc": "11723:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11723:79:13"
																		},
																		"nativeSrc": "11723:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11723:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11702:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11702:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11707:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11698:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11698:3:13"
																		},
																		"nativeSrc": "11698:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11698:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11716:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11716:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11695:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11695:2:13"
																},
																"nativeSrc": "11695:25:13",
																"nodeType": "YulFunctionCall",
																"src": "11695:25:13"
															},
															"nativeSrc": "11692:112:13",
															"nodeType": "YulIf",
															"src": "11692:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11850:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11850:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11855:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11855:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11860:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11813:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "11813:36:13"
																},
																"nativeSrc": "11813:54:13",
																"nodeType": "YulFunctionCall",
																"src": "11813:54:13"
															},
															"nativeSrc": "11813:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "11813:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "11450:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11506:3:13",
														"nodeType": "YulTypedName",
														"src": "11506:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11511:6:13",
														"nodeType": "YulTypedName",
														"src": "11511:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11519:3:13",
														"nodeType": "YulTypedName",
														"src": "11519:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11527:5:13",
														"nodeType": "YulTypedName",
														"src": "11527:5:13",
														"type": ""
													}
												],
												"src": "11450:423:13"
											},
											{
												"body": {
													"nativeSrc": "11953:277:13",
													"nodeType": "YulBlock",
													"src": "11953:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12002:83:13",
																"nodeType": "YulBlock",
																"src": "12002:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12004:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12004:77:13"
																			},
																			"nativeSrc": "12004:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12004:79:13"
																		},
																		"nativeSrc": "12004:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12004:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11981:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11981:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11989:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11989:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11977:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11977:3:13"
																				},
																				"nativeSrc": "11977:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11977:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11996:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11996:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11973:3:13"
																		},
																		"nativeSrc": "11973:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11973:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11966:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11966:6:13"
																},
																"nativeSrc": "11966:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11966:35:13"
															},
															"nativeSrc": "11963:122:13",
															"nodeType": "YulIf",
															"src": "11963:122:13"
														},
														{
															"nativeSrc": "12094:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12094:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12121:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12121:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12108:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "12108:12:13"
																},
																"nativeSrc": "12108:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12108:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12098:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12098:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12137:87:13",
															"nodeType": "YulAssignment",
															"src": "12137:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12197:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12197:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12205:4:13",
																				"nodeType": "YulLiteral",
																				"src": "12205:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12193:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12193:3:13"
																		},
																		"nativeSrc": "12193:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12193:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12212:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12212:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12220:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12220:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "12146:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "12146:46:13"
																},
																"nativeSrc": "12146:78:13",
																"nodeType": "YulFunctionCall",
																"src": "12146:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12137:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12137:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11892:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11931:6:13",
														"nodeType": "YulTypedName",
														"src": "11931:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11939:3:13",
														"nodeType": "YulTypedName",
														"src": "11939:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11947:5:13",
														"nodeType": "YulTypedName",
														"src": "11947:5:13",
														"type": ""
													}
												],
												"src": "11892:338:13"
											},
											{
												"body": {
													"nativeSrc": "12362:817:13",
													"nodeType": "YulBlock",
													"src": "12362:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12409:83:13",
																"nodeType": "YulBlock",
																"src": "12409:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12411:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12411:77:13"
																			},
																			"nativeSrc": "12411:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12411:79:13"
																		},
																		"nativeSrc": "12411:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12411:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12383:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12383:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12392:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12392:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12379:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12379:3:13"
																		},
																		"nativeSrc": "12379:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12379:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12404:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12404:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12375:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12375:3:13"
																},
																"nativeSrc": "12375:33:13",
																"nodeType": "YulFunctionCall",
																"src": "12375:33:13"
															},
															"nativeSrc": "12372:120:13",
															"nodeType": "YulIf",
															"src": "12372:120:13"
														},
														{
															"nativeSrc": "12502:117:13",
															"nodeType": "YulBlock",
															"src": "12502:117:13",
															"statements": [
																{
																	"nativeSrc": "12517:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12517:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12531:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12531:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12521:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12521:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12546:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12546:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12581:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12581:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12592:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12592:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12577:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12577:3:13"
																				},
																				"nativeSrc": "12577:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12577:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12601:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12556:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12556:20:13"
																		},
																		"nativeSrc": "12556:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12556:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12546:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12546:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12629:118:13",
															"nodeType": "YulBlock",
															"src": "12629:118:13",
															"statements": [
																{
																	"nativeSrc": "12644:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12644:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12658:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12658:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12648:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12648:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12674:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12674:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12709:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12709:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12720:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12720:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12705:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12705:3:13"
																				},
																				"nativeSrc": "12705:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12705:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12729:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12729:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12684:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12684:20:13"
																		},
																		"nativeSrc": "12684:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12684:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12674:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12674:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12757:118:13",
															"nodeType": "YulBlock",
															"src": "12757:118:13",
															"statements": [
																{
																	"nativeSrc": "12772:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12772:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12786:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12786:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12776:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12776:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12802:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12802:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12837:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12837:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12848:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12848:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12833:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12833:3:13"
																				},
																				"nativeSrc": "12833:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12833:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12857:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12857:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12812:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12812:20:13"
																		},
																		"nativeSrc": "12812:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12812:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12802:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12802:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12885:287:13",
															"nodeType": "YulBlock",
															"src": "12885:287:13",
															"statements": [
																{
																	"nativeSrc": "12900:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12900:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12931:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12931:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12942:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12942:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12927:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12927:3:13"
																				},
																				"nativeSrc": "12927:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12927:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12914:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12914:12:13"
																		},
																		"nativeSrc": "12914:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12914:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12904:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12904:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12993:83:13",
																		"nodeType": "YulBlock",
																		"src": "12993:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12995:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12995:77:13"
																					},
																					"nativeSrc": "12995:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12995:79:13"
																				},
																				"nativeSrc": "12995:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12995:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12965:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12965:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12973:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12973:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12962:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12962:2:13"
																		},
																		"nativeSrc": "12962:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12962:30:13"
																	},
																	"nativeSrc": "12959:117:13",
																	"nodeType": "YulIf",
																	"src": "12959:117:13"
																},
																{
																	"nativeSrc": "13090:72:13",
																	"nodeType": "YulAssignment",
																	"src": "13090:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13134:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13134:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13145:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13145:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13130:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13130:3:13"
																				},
																				"nativeSrc": "13130:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13130:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13154:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13154:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "13100:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "13100:29:13"
																		},
																		"nativeSrc": "13100:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13100:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13090:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13090:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "12236:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12308:9:13",
														"nodeType": "YulTypedName",
														"src": "12308:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12319:7:13",
														"nodeType": "YulTypedName",
														"src": "12319:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12331:6:13",
														"nodeType": "YulTypedName",
														"src": "12331:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12339:6:13",
														"nodeType": "YulTypedName",
														"src": "12339:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12347:6:13",
														"nodeType": "YulTypedName",
														"src": "12347:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12355:6:13",
														"nodeType": "YulTypedName",
														"src": "12355:6:13",
														"type": ""
													}
												],
												"src": "12236:943:13"
											},
											{
												"body": {
													"nativeSrc": "13268:391:13",
													"nodeType": "YulBlock",
													"src": "13268:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13314:83:13",
																"nodeType": "YulBlock",
																"src": "13314:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13316:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "13316:77:13"
																			},
																			"nativeSrc": "13316:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13316:79:13"
																		},
																		"nativeSrc": "13316:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13316:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13289:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13289:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13298:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13298:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13285:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13285:3:13"
																		},
																		"nativeSrc": "13285:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13285:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:13"
																},
																"nativeSrc": "13281:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13281:32:13"
															},
															"nativeSrc": "13278:119:13",
															"nodeType": "YulIf",
															"src": "13278:119:13"
														},
														{
															"nativeSrc": "13407:117:13",
															"nodeType": "YulBlock",
															"src": "13407:117:13",
															"statements": [
																{
																	"nativeSrc": "13422:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13422:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13436:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13436:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13426:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13426:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13451:63:13",
																	"nodeType": "YulAssignment",
																	"src": "13451:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13486:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13486:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13497:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13497:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13482:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13482:3:13"
																				},
																				"nativeSrc": "13482:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13482:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13506:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13506:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13461:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "13461:20:13"
																		},
																		"nativeSrc": "13461:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13461:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13451:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13451:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13534:118:13",
															"nodeType": "YulBlock",
															"src": "13534:118:13",
															"statements": [
																{
																	"nativeSrc": "13549:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13549:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13563:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13563:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13553:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13553:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13579:63:13",
																	"nodeType": "YulAssignment",
																	"src": "13579:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13614:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13614:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13625:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13625:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13610:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13610:3:13"
																				},
																				"nativeSrc": "13610:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13610:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13634:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13634:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13589:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "13589:20:13"
																		},
																		"nativeSrc": "13589:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13589:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13579:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13579:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13185:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13230:9:13",
														"nodeType": "YulTypedName",
														"src": "13230:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13241:7:13",
														"nodeType": "YulTypedName",
														"src": "13241:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13253:6:13",
														"nodeType": "YulTypedName",
														"src": "13253:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13261:6:13",
														"nodeType": "YulTypedName",
														"src": "13261:6:13",
														"type": ""
													}
												],
												"src": "13185:474:13"
											},
											{
												"body": {
													"nativeSrc": "13693:152:13",
													"nodeType": "YulBlock",
													"src": "13693:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13710:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13710:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13713:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13713:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13703:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13703:6:13"
																},
																"nativeSrc": "13703:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13703:88:13"
															},
															"nativeSrc": "13703:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13703:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13807:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13810:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13810:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13800:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:13"
																},
																"nativeSrc": "13800:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13800:15:13"
															},
															"nativeSrc": "13800:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13800:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13831:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13831:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13834:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13824:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13824:6:13"
																},
																"nativeSrc": "13824:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13824:15:13"
															},
															"nativeSrc": "13824:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13824:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13665:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13665:180:13"
											},
											{
												"body": {
													"nativeSrc": "13902:269:13",
													"nodeType": "YulBlock",
													"src": "13902:269:13",
													"statements": [
														{
															"nativeSrc": "13912:22:13",
															"nodeType": "YulAssignment",
															"src": "13912:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13926:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13926:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13932:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13932:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13922:3:13"
																},
																"nativeSrc": "13922:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13922:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13912:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13912:6:13"
																}
															]
														},
														{
															"nativeSrc": "13943:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13943:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13973:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13973:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13979:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13979:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13969:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13969:3:13"
																},
																"nativeSrc": "13969:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13969:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13947:18:13",
																	"nodeType": "YulTypedName",
																	"src": "13947:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14020:51:13",
																"nodeType": "YulBlock",
																"src": "14020:51:13",
																"statements": [
																	{
																		"nativeSrc": "14034:27:13",
																		"nodeType": "YulAssignment",
																		"src": "14034:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14048:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14056:4:13",
																					"nodeType": "YulLiteral",
																					"src": "14056:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14044:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14044:3:13"
																			},
																			"nativeSrc": "14044:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14044:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14034:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14034:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14000:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "14000:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13993:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13993:6:13"
																},
																"nativeSrc": "13993:26:13",
																"nodeType": "YulFunctionCall",
																"src": "13993:26:13"
															},
															"nativeSrc": "13990:81:13",
															"nodeType": "YulIf",
															"src": "13990:81:13"
														},
														{
															"body": {
																"nativeSrc": "14123:42:13",
																"nodeType": "YulBlock",
																"src": "14123:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14137:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14137:16:13"
																			},
																			"nativeSrc": "14137:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14137:18:13"
																		},
																		"nativeSrc": "14137:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14137:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14087:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "14087:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14110:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14110:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14118:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14118:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14107:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14107:2:13"
																		},
																		"nativeSrc": "14107:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14107:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14084:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14084:2:13"
																},
																"nativeSrc": "14084:38:13",
																"nodeType": "YulFunctionCall",
																"src": "14084:38:13"
															},
															"nativeSrc": "14081:84:13",
															"nodeType": "YulIf",
															"src": "14081:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13851:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13886:4:13",
														"nodeType": "YulTypedName",
														"src": "13886:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13895:6:13",
														"nodeType": "YulTypedName",
														"src": "13895:6:13",
														"type": ""
													}
												],
												"src": "13851:320:13"
											},
											{
												"body": {
													"nativeSrc": "14331:288:13",
													"nodeType": "YulBlock",
													"src": "14331:288:13",
													"statements": [
														{
															"nativeSrc": "14341:26:13",
															"nodeType": "YulAssignment",
															"src": "14341:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14353:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14364:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:13"
																},
																"nativeSrc": "14349:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14349:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14341:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14341:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14421:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14421:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14434:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14434:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14445:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14445:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14430:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14430:3:13"
																		},
																		"nativeSrc": "14430:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14430:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14377:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14377:43:13"
																},
																"nativeSrc": "14377:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14377:71:13"
															},
															"nativeSrc": "14377:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14377:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14502:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14502:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14515:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14515:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14526:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14526:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14511:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14511:3:13"
																		},
																		"nativeSrc": "14511:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14511:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14458:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14458:43:13"
																},
																"nativeSrc": "14458:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14458:72:13"
															},
															"nativeSrc": "14458:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14458:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14584:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14584:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14597:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14597:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14608:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14608:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14593:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14593:3:13"
																		},
																		"nativeSrc": "14593:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14593:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14540:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14540:43:13"
																},
																"nativeSrc": "14540:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14540:72:13"
															},
															"nativeSrc": "14540:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14540:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14177:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14287:9:13",
														"nodeType": "YulTypedName",
														"src": "14287:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14299:6:13",
														"nodeType": "YulTypedName",
														"src": "14299:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14307:6:13",
														"nodeType": "YulTypedName",
														"src": "14307:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14315:6:13",
														"nodeType": "YulTypedName",
														"src": "14315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14326:4:13",
														"nodeType": "YulTypedName",
														"src": "14326:4:13",
														"type": ""
													}
												],
												"src": "14177:442:13"
											},
											{
												"body": {
													"nativeSrc": "14731:136:13",
													"nodeType": "YulBlock",
													"src": "14731:136:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14753:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14753:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14761:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14761:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14749:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14749:3:13"
																		},
																		"nativeSrc": "14749:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14749:14:13"
																	},
																	{
																		"hexValue": "4d61737465725472616465436f6e74726163744e46543a206e6f206d61737465",
																		"kind": "string",
																		"nativeSrc": "14765:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14765:34:13",
																		"type": "",
																		"value": "MasterTradeContractNFT: no maste"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14742:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14742:6:13"
																},
																"nativeSrc": "14742:58:13",
																"nodeType": "YulFunctionCall",
																"src": "14742:58:13"
															},
															"nativeSrc": "14742:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "14742:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14821:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14821:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14829:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14829:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14817:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:13"
																		},
																		"nativeSrc": "14817:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14817:15:13"
																	},
																	{
																		"hexValue": "7220747261646520636f6e747261637473206578697374",
																		"kind": "string",
																		"nativeSrc": "14834:25:13",
																		"nodeType": "YulLiteral",
																		"src": "14834:25:13",
																		"type": "",
																		"value": "r trade contracts exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14810:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14810:6:13"
																},
																"nativeSrc": "14810:50:13",
																"nodeType": "YulFunctionCall",
																"src": "14810:50:13"
															},
															"nativeSrc": "14810:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "14810:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886",
												"nativeSrc": "14625:242:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14723:6:13",
														"nodeType": "YulTypedName",
														"src": "14723:6:13",
														"type": ""
													}
												],
												"src": "14625:242:13"
											},
											{
												"body": {
													"nativeSrc": "15019:220:13",
													"nodeType": "YulBlock",
													"src": "15019:220:13",
													"statements": [
														{
															"nativeSrc": "15029:74:13",
															"nodeType": "YulAssignment",
															"src": "15029:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15095:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15095:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15100:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15100:2:13",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15036:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15036:58:13"
																},
																"nativeSrc": "15036:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15036:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15029:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15201:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15201:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886",
																	"nativeSrc": "15112:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15112:88:13"
																},
																"nativeSrc": "15112:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15112:93:13"
															},
															"nativeSrc": "15112:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15112:93:13"
														},
														{
															"nativeSrc": "15214:19:13",
															"nodeType": "YulAssignment",
															"src": "15214:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15225:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15225:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15230:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15230:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15221:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15221:3:13"
																},
																"nativeSrc": "15221:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15221:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15214:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14873:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15007:3:13",
														"nodeType": "YulTypedName",
														"src": "15007:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15015:3:13",
														"nodeType": "YulTypedName",
														"src": "15015:3:13",
														"type": ""
													}
												],
												"src": "14873:366:13"
											},
											{
												"body": {
													"nativeSrc": "15416:248:13",
													"nodeType": "YulBlock",
													"src": "15416:248:13",
													"statements": [
														{
															"nativeSrc": "15426:26:13",
															"nodeType": "YulAssignment",
															"src": "15426:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15438:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15438:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15449:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15449:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15434:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15434:3:13"
																},
																"nativeSrc": "15434:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15434:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15426:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15426:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15473:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15473:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15484:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15484:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15469:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15469:3:13"
																		},
																		"nativeSrc": "15469:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15469:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15492:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15492:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15498:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15498:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15488:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15488:3:13"
																		},
																		"nativeSrc": "15488:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15488:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15462:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15462:6:13"
																},
																"nativeSrc": "15462:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15462:47:13"
															},
															"nativeSrc": "15462:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15462:47:13"
														},
														{
															"nativeSrc": "15518:139:13",
															"nodeType": "YulAssignment",
															"src": "15518:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15652:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15652:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15526:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15526:124:13"
																},
																"nativeSrc": "15526:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15526:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15518:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15518:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15245:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15396:9:13",
														"nodeType": "YulTypedName",
														"src": "15396:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15411:4:13",
														"nodeType": "YulTypedName",
														"src": "15411:4:13",
														"type": ""
													}
												],
												"src": "15245:419:13"
											},
											{
												"body": {
													"nativeSrc": "15698:152:13",
													"nodeType": "YulBlock",
													"src": "15698:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15715:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15715:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15718:77:13",
																		"nodeType": "YulLiteral",
																		"src": "15718:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15708:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15708:6:13"
																},
																"nativeSrc": "15708:88:13",
																"nodeType": "YulFunctionCall",
																"src": "15708:88:13"
															},
															"nativeSrc": "15708:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "15708:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15812:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15812:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15815:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15815:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15805:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15805:6:13"
																},
																"nativeSrc": "15805:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15805:15:13"
															},
															"nativeSrc": "15805:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "15805:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15836:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15836:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15839:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15839:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15829:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15829:6:13"
																},
																"nativeSrc": "15829:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15829:15:13"
															},
															"nativeSrc": "15829:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "15829:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15670:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "15670:180:13"
											},
											{
												"body": {
													"nativeSrc": "15901:149:13",
													"nodeType": "YulBlock",
													"src": "15901:149:13",
													"statements": [
														{
															"nativeSrc": "15911:25:13",
															"nodeType": "YulAssignment",
															"src": "15911:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15934:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15934:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15916:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15916:17:13"
																},
																"nativeSrc": "15916:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15916:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15911:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15911:1:13"
																}
															]
														},
														{
															"nativeSrc": "15945:25:13",
															"nodeType": "YulAssignment",
															"src": "15945:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15968:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15968:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15950:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15950:17:13"
																},
																"nativeSrc": "15950:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15950:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15945:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15945:1:13"
																}
															]
														},
														{
															"nativeSrc": "15979:17:13",
															"nodeType": "YulAssignment",
															"src": "15979:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15991:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15991:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15994:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15994:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15987:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15987:3:13"
																},
																"nativeSrc": "15987:9:13",
																"nodeType": "YulFunctionCall",
																"src": "15987:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15979:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15979:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16021:22:13",
																"nodeType": "YulBlock",
																"src": "16021:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16023:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16023:16:13"
																			},
																			"nativeSrc": "16023:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16023:18:13"
																		},
																		"nativeSrc": "16023:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16023:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16012:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16012:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16018:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16018:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16009:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16009:2:13"
																},
																"nativeSrc": "16009:11:13",
																"nodeType": "YulFunctionCall",
																"src": "16009:11:13"
															},
															"nativeSrc": "16006:37:13",
															"nodeType": "YulIf",
															"src": "16006:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15856:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15887:1:13",
														"nodeType": "YulTypedName",
														"src": "15887:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15890:1:13",
														"nodeType": "YulTypedName",
														"src": "15890:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15896:4:13",
														"nodeType": "YulTypedName",
														"src": "15896:4:13",
														"type": ""
													}
												],
												"src": "15856:194:13"
											},
											{
												"body": {
													"nativeSrc": "16110:87:13",
													"nodeType": "YulBlock",
													"src": "16110:87:13",
													"statements": [
														{
															"nativeSrc": "16120:11:13",
															"nodeType": "YulAssignment",
															"src": "16120:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "16128:3:13",
																"nodeType": "YulIdentifier",
																"src": "16128:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16120:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16120:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16148:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16148:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16151:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16151:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16141:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16141:6:13"
																},
																"nativeSrc": "16141:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16141:14:13"
															},
															"nativeSrc": "16141:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "16141:14:13"
														},
														{
															"nativeSrc": "16164:26:13",
															"nodeType": "YulAssignment",
															"src": "16164:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16182:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16182:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16185:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16185:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16172:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16172:9:13"
																},
																"nativeSrc": "16172:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16172:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16164:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16164:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16056:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16097:3:13",
														"nodeType": "YulTypedName",
														"src": "16097:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16105:4:13",
														"nodeType": "YulTypedName",
														"src": "16105:4:13",
														"type": ""
													}
												],
												"src": "16056:141:13"
											},
											{
												"body": {
													"nativeSrc": "16247:49:13",
													"nodeType": "YulBlock",
													"src": "16247:49:13",
													"statements": [
														{
															"nativeSrc": "16257:33:13",
															"nodeType": "YulAssignment",
															"src": "16257:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16275:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "16275:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16282:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16282:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16271:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16271:3:13"
																		},
																		"nativeSrc": "16271:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16271:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16287:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16287:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16267:3:13"
																},
																"nativeSrc": "16267:23:13",
																"nodeType": "YulFunctionCall",
																"src": "16267:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16257:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16257:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16203:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16230:5:13",
														"nodeType": "YulTypedName",
														"src": "16230:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16240:6:13",
														"nodeType": "YulTypedName",
														"src": "16240:6:13",
														"type": ""
													}
												],
												"src": "16203:93:13"
											},
											{
												"body": {
													"nativeSrc": "16355:54:13",
													"nodeType": "YulBlock",
													"src": "16355:54:13",
													"statements": [
														{
															"nativeSrc": "16365:37:13",
															"nodeType": "YulAssignment",
															"src": "16365:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16390:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16390:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16396:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16396:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16386:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16386:3:13"
																},
																"nativeSrc": "16386:16:13",
																"nodeType": "YulFunctionCall",
																"src": "16386:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16365:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "16365:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16302:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16330:4:13",
														"nodeType": "YulTypedName",
														"src": "16330:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16336:5:13",
														"nodeType": "YulTypedName",
														"src": "16336:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16346:8:13",
														"nodeType": "YulTypedName",
														"src": "16346:8:13",
														"type": ""
													}
												],
												"src": "16302:107:13"
											},
											{
												"body": {
													"nativeSrc": "16491:317:13",
													"nodeType": "YulBlock",
													"src": "16491:317:13",
													"statements": [
														{
															"nativeSrc": "16501:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16501:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16522:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "16522:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16534:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16534:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16518:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16518:3:13"
																},
																"nativeSrc": "16518:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16518:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16505:9:13",
																	"nodeType": "YulTypedName",
																	"src": "16505:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16545:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16545:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16576:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16576:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16587:66:13",
																		"nodeType": "YulLiteral",
																		"src": "16587:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16557:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16557:18:13"
																},
																"nativeSrc": "16557:97:13",
																"nodeType": "YulFunctionCall",
																"src": "16557:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16549:4:13",
																	"nodeType": "YulTypedName",
																	"src": "16549:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16663:51:13",
															"nodeType": "YulAssignment",
															"src": "16663:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16694:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16694:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16705:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "16705:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16675:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16675:18:13"
																},
																"nativeSrc": "16675:39:13",
																"nodeType": "YulFunctionCall",
																"src": "16675:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16663:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "16663:8:13"
																}
															]
														},
														{
															"nativeSrc": "16723:30:13",
															"nodeType": "YulAssignment",
															"src": "16723:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16736:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16736:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16747:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16747:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16743:3:13"
																		},
																		"nativeSrc": "16743:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16743:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16732:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16732:3:13"
																},
																"nativeSrc": "16732:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16732:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16723:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16723:5:13"
																}
															]
														},
														{
															"nativeSrc": "16762:40:13",
															"nodeType": "YulAssignment",
															"src": "16762:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16775:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16775:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16786:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "16786:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16796:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16796:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16782:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16782:3:13"
																		},
																		"nativeSrc": "16782:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16782:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16772:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16772:2:13"
																},
																"nativeSrc": "16772:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16772:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16762:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16762:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16415:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16452:5:13",
														"nodeType": "YulTypedName",
														"src": "16452:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16459:10:13",
														"nodeType": "YulTypedName",
														"src": "16459:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16471:8:13",
														"nodeType": "YulTypedName",
														"src": "16471:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16484:6:13",
														"nodeType": "YulTypedName",
														"src": "16484:6:13",
														"type": ""
													}
												],
												"src": "16415:393:13"
											},
											{
												"body": {
													"nativeSrc": "16846:28:13",
													"nodeType": "YulBlock",
													"src": "16846:28:13",
													"statements": [
														{
															"nativeSrc": "16856:12:13",
															"nodeType": "YulAssignment",
															"src": "16856:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "16863:5:13",
																"nodeType": "YulIdentifier",
																"src": "16863:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16856:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16856:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16814:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16832:5:13",
														"nodeType": "YulTypedName",
														"src": "16832:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16842:3:13",
														"nodeType": "YulTypedName",
														"src": "16842:3:13",
														"type": ""
													}
												],
												"src": "16814:60:13"
											},
											{
												"body": {
													"nativeSrc": "16940:82:13",
													"nodeType": "YulBlock",
													"src": "16940:82:13",
													"statements": [
														{
															"nativeSrc": "16950:66:13",
															"nodeType": "YulAssignment",
															"src": "16950:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17008:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "17008:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16990:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "16990:17:13"
																				},
																				"nativeSrc": "16990:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16990:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16981:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "16981:8:13"
																		},
																		"nativeSrc": "16981:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16981:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16963:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16963:17:13"
																},
																"nativeSrc": "16963:53:13",
																"nodeType": "YulFunctionCall",
																"src": "16963:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16950:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16950:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16880:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16920:5:13",
														"nodeType": "YulTypedName",
														"src": "16920:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16930:9:13",
														"nodeType": "YulTypedName",
														"src": "16930:9:13",
														"type": ""
													}
												],
												"src": "16880:142:13"
											},
											{
												"body": {
													"nativeSrc": "17075:28:13",
													"nodeType": "YulBlock",
													"src": "17075:28:13",
													"statements": [
														{
															"nativeSrc": "17085:12:13",
															"nodeType": "YulAssignment",
															"src": "17085:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "17092:5:13",
																"nodeType": "YulIdentifier",
																"src": "17092:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17085:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17085:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17028:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17061:5:13",
														"nodeType": "YulTypedName",
														"src": "17061:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17071:3:13",
														"nodeType": "YulTypedName",
														"src": "17071:3:13",
														"type": ""
													}
												],
												"src": "17028:75:13"
											},
											{
												"body": {
													"nativeSrc": "17185:193:13",
													"nodeType": "YulBlock",
													"src": "17185:193:13",
													"statements": [
														{
															"nativeSrc": "17195:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17195:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17250:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "17250:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17219:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "17219:30:13"
																},
																"nativeSrc": "17219:39:13",
																"nodeType": "YulFunctionCall",
																"src": "17219:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17199:16:13",
																	"nodeType": "YulTypedName",
																	"src": "17199:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17274:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17274:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17314:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "17314:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17308:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17308:5:13"
																				},
																				"nativeSrc": "17308:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17308:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17321:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17321:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17353:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "17353:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17329:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "17329:23:13"
																				},
																				"nativeSrc": "17329:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17329:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17280:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "17280:27:13"
																		},
																		"nativeSrc": "17280:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17280:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17267:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17267:6:13"
																},
																"nativeSrc": "17267:105:13",
																"nodeType": "YulFunctionCall",
																"src": "17267:105:13"
															},
															"nativeSrc": "17267:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "17267:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17109:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17162:4:13",
														"nodeType": "YulTypedName",
														"src": "17162:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17168:6:13",
														"nodeType": "YulTypedName",
														"src": "17168:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17176:7:13",
														"nodeType": "YulTypedName",
														"src": "17176:7:13",
														"type": ""
													}
												],
												"src": "17109:269:13"
											},
											{
												"body": {
													"nativeSrc": "17433:24:13",
													"nodeType": "YulBlock",
													"src": "17433:24:13",
													"statements": [
														{
															"nativeSrc": "17443:8:13",
															"nodeType": "YulAssignment",
															"src": "17443:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "17450:1:13",
																"nodeType": "YulLiteral",
																"src": "17450:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17443:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17443:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17384:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17429:3:13",
														"nodeType": "YulTypedName",
														"src": "17429:3:13",
														"type": ""
													}
												],
												"src": "17384:73:13"
											},
											{
												"body": {
													"nativeSrc": "17516:136:13",
													"nodeType": "YulBlock",
													"src": "17516:136:13",
													"statements": [
														{
															"nativeSrc": "17526:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17526:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17540:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "17540:30:13"
																},
																"nativeSrc": "17540:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17540:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17530:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17530:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17625:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17625:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17631:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17631:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17639:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17639:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17581:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17581:43:13"
																},
																"nativeSrc": "17581:65:13",
																"nodeType": "YulFunctionCall",
																"src": "17581:65:13"
															},
															"nativeSrc": "17581:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "17581:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17463:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17502:4:13",
														"nodeType": "YulTypedName",
														"src": "17502:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17508:6:13",
														"nodeType": "YulTypedName",
														"src": "17508:6:13",
														"type": ""
													}
												],
												"src": "17463:189:13"
											},
											{
												"body": {
													"nativeSrc": "17708:136:13",
													"nodeType": "YulBlock",
													"src": "17708:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17775:63:13",
																"nodeType": "YulBlock",
																"src": "17775:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17819:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17819:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17826:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17826:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17789:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "17789:29:13"
																			},
																			"nativeSrc": "17789:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17789:39:13"
																		},
																		"nativeSrc": "17789:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17789:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17728:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17728:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17735:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17735:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17725:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17725:2:13"
																},
																"nativeSrc": "17725:14:13",
																"nodeType": "YulFunctionCall",
																"src": "17725:14:13"
															},
															"nativeSrc": "17718:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17740:26:13",
																"nodeType": "YulBlock",
																"src": "17740:26:13",
																"statements": [
																	{
																		"nativeSrc": "17742:22:13",
																		"nodeType": "YulAssignment",
																		"src": "17742:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17755:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17755:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17762:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17762:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17751:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17751:3:13"
																			},
																			"nativeSrc": "17751:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17751:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17742:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17742:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17722:2:13",
																"nodeType": "YulBlock",
																"src": "17722:2:13",
																"statements": []
															},
															"src": "17718:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17658:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17696:5:13",
														"nodeType": "YulTypedName",
														"src": "17696:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17703:3:13",
														"nodeType": "YulTypedName",
														"src": "17703:3:13",
														"type": ""
													}
												],
												"src": "17658:186:13"
											},
											{
												"body": {
													"nativeSrc": "17929:464:13",
													"nodeType": "YulBlock",
													"src": "17929:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17955:431:13",
																"nodeType": "YulBlock",
																"src": "17955:431:13",
																"statements": [
																	{
																		"nativeSrc": "17969:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17969:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18017:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "18017:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17985:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "17985:31:13"
																			},
																			"nativeSrc": "17985:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17985:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17973:8:13",
																				"nodeType": "YulTypedName",
																				"src": "17973:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18036:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18036:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18059:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "18059:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18087:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "18087:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18069:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "18069:17:13"
																					},
																					"nativeSrc": "18069:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "18069:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18055:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18055:3:13"
																			},
																			"nativeSrc": "18055:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18055:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18040:11:13",
																				"nodeType": "YulTypedName",
																				"src": "18040:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18256:27:13",
																			"nodeType": "YulBlock",
																			"src": "18256:27:13",
																			"statements": [
																				{
																					"nativeSrc": "18258:23:13",
																					"nodeType": "YulAssignment",
																					"src": "18258:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18273:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "18273:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18258:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "18258:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18240:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "18240:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18252:2:13",
																					"nodeType": "YulLiteral",
																					"src": "18252:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18237:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18237:2:13"
																			},
																			"nativeSrc": "18237:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18237:18:13"
																		},
																		"nativeSrc": "18234:49:13",
																		"nodeType": "YulIf",
																		"src": "18234:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18325:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "18325:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18342:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "18342:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18370:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "18370:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18352:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "18352:17:13"
																							},
																							"nativeSrc": "18352:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "18352:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18338:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "18338:3:13"
																					},
																					"nativeSrc": "18338:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "18338:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18296:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "18296:28:13"
																			},
																			"nativeSrc": "18296:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18296:80:13"
																		},
																		"nativeSrc": "18296:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18296:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17946:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17946:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17951:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17951:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17943:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17943:2:13"
																},
																"nativeSrc": "17943:11:13",
																"nodeType": "YulFunctionCall",
																"src": "17943:11:13"
															},
															"nativeSrc": "17940:446:13",
															"nodeType": "YulIf",
															"src": "17940:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17850:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17905:5:13",
														"nodeType": "YulTypedName",
														"src": "17905:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17912:3:13",
														"nodeType": "YulTypedName",
														"src": "17912:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17917:10:13",
														"nodeType": "YulTypedName",
														"src": "17917:10:13",
														"type": ""
													}
												],
												"src": "17850:543:13"
											},
											{
												"body": {
													"nativeSrc": "18462:54:13",
													"nodeType": "YulBlock",
													"src": "18462:54:13",
													"statements": [
														{
															"nativeSrc": "18472:37:13",
															"nodeType": "YulAssignment",
															"src": "18472:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18497:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18497:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18503:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18503:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18493:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18493:3:13"
																},
																"nativeSrc": "18493:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18493:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18472:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "18472:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18399:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18437:4:13",
														"nodeType": "YulTypedName",
														"src": "18437:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18443:5:13",
														"nodeType": "YulTypedName",
														"src": "18443:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18453:8:13",
														"nodeType": "YulTypedName",
														"src": "18453:8:13",
														"type": ""
													}
												],
												"src": "18399:117:13"
											},
											{
												"body": {
													"nativeSrc": "18573:118:13",
													"nodeType": "YulBlock",
													"src": "18573:118:13",
													"statements": [
														{
															"nativeSrc": "18583:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18583:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18632:1:13",
																						"nodeType": "YulLiteral",
																						"src": "18632:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18635:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "18635:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18628:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18628:3:13"
																				},
																				"nativeSrc": "18628:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18628:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18647:1:13",
																						"nodeType": "YulLiteral",
																						"src": "18647:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18643:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18643:3:13"
																				},
																				"nativeSrc": "18643:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18643:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18599:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "18599:28:13"
																		},
																		"nativeSrc": "18599:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18599:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18595:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18595:3:13"
																},
																"nativeSrc": "18595:56:13",
																"nodeType": "YulFunctionCall",
																"src": "18595:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18587:4:13",
																	"nodeType": "YulTypedName",
																	"src": "18587:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18660:25:13",
															"nodeType": "YulAssignment",
															"src": "18660:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18674:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18674:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18680:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18680:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18670:3:13"
																},
																"nativeSrc": "18670:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18670:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18660:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18660:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18522:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18550:4:13",
														"nodeType": "YulTypedName",
														"src": "18550:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18556:5:13",
														"nodeType": "YulTypedName",
														"src": "18556:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18566:6:13",
														"nodeType": "YulTypedName",
														"src": "18566:6:13",
														"type": ""
													}
												],
												"src": "18522:169:13"
											},
											{
												"body": {
													"nativeSrc": "18777:214:13",
													"nodeType": "YulBlock",
													"src": "18777:214:13",
													"statements": [
														{
															"nativeSrc": "18910:37:13",
															"nodeType": "YulAssignment",
															"src": "18910:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18937:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18937:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18943:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18943:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18918:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "18918:18:13"
																},
																"nativeSrc": "18918:29:13",
																"nodeType": "YulFunctionCall",
																"src": "18918:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18910:4:13"
																}
															]
														},
														{
															"nativeSrc": "18956:29:13",
															"nodeType": "YulAssignment",
															"src": "18956:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18967:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18967:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18977:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18977:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18980:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18980:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18973:3:13"
																		},
																		"nativeSrc": "18973:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18973:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18964:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18964:2:13"
																},
																"nativeSrc": "18964:21:13",
																"nodeType": "YulFunctionCall",
																"src": "18964:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18956:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18956:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18696:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18758:4:13",
														"nodeType": "YulTypedName",
														"src": "18758:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18764:3:13",
														"nodeType": "YulTypedName",
														"src": "18764:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18772:4:13",
														"nodeType": "YulTypedName",
														"src": "18772:4:13",
														"type": ""
													}
												],
												"src": "18696:295:13"
											},
											{
												"body": {
													"nativeSrc": "19088:1303:13",
													"nodeType": "YulBlock",
													"src": "19088:1303:13",
													"statements": [
														{
															"nativeSrc": "19099:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19099:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19146:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19146:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19113:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "19113:32:13"
																},
																"nativeSrc": "19113:37:13",
																"nodeType": "YulFunctionCall",
																"src": "19113:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19103:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19103:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19235:22:13",
																"nodeType": "YulBlock",
																"src": "19235:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19237:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19237:16:13"
																			},
																			"nativeSrc": "19237:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19237:18:13"
																		},
																		"nativeSrc": "19237:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19237:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19207:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19207:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19215:18:13",
																		"nodeType": "YulLiteral",
																		"src": "19215:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19204:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19204:2:13"
																},
																"nativeSrc": "19204:30:13",
																"nodeType": "YulFunctionCall",
																"src": "19204:30:13"
															},
															"nativeSrc": "19201:56:13",
															"nodeType": "YulIf",
															"src": "19201:56:13"
														},
														{
															"nativeSrc": "19267:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19267:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19313:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19313:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19307:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "19307:5:13"
																		},
																		"nativeSrc": "19307:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19307:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19281:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "19281:25:13"
																},
																"nativeSrc": "19281:38:13",
																"nodeType": "YulFunctionCall",
																"src": "19281:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19271:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19271:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19412:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19412:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19418:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19418:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19426:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19426:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19366:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "19366:45:13"
																},
																"nativeSrc": "19366:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19366:67:13"
															},
															"nativeSrc": "19366:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "19366:67:13"
														},
														{
															"nativeSrc": "19443:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19443:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "19460:1:13",
																"nodeType": "YulLiteral",
																"src": "19460:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19447:9:13",
																	"nodeType": "YulTypedName",
																	"src": "19447:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19471:17:13",
															"nodeType": "YulAssignment",
															"src": "19471:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "19484:4:13",
																"nodeType": "YulLiteral",
																"src": "19484:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19471:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "19471:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19535:611:13",
																		"nodeType": "YulBlock",
																		"src": "19535:611:13",
																		"statements": [
																			{
																				"nativeSrc": "19549:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19549:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19568:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19568:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19580:4:13",
																									"nodeType": "YulLiteral",
																									"src": "19580:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19576:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19576:3:13"
																							},
																							"nativeSrc": "19576:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19576:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19564:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "19564:3:13"
																					},
																					"nativeSrc": "19564:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19564:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19553:7:13",
																						"nodeType": "YulTypedName",
																						"src": "19553:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19600:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19600:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19646:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "19646:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19614:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "19614:31:13"
																					},
																					"nativeSrc": "19614:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19614:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19604:6:13",
																						"nodeType": "YulTypedName",
																						"src": "19604:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19664:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19664:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19673:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19673:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19668:1:13",
																						"nodeType": "YulTypedName",
																						"src": "19668:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19732:163:13",
																					"nodeType": "YulBlock",
																					"src": "19732:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19757:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "19757:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19775:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "19775:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19780:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "19780:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19771:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "19771:3:13"
																												},
																												"nativeSrc": "19771:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "19771:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19765:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "19765:5:13"
																										},
																										"nativeSrc": "19765:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "19765:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19750:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "19750:6:13"
																								},
																								"nativeSrc": "19750:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19750:42:13"
																							},
																							"nativeSrc": "19750:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "19750:42:13"
																						},
																						{
																							"nativeSrc": "19809:24:13",
																							"nodeType": "YulAssignment",
																							"src": "19809:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19823:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "19823:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19831:1:13",
																										"nodeType": "YulLiteral",
																										"src": "19831:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19819:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19819:3:13"
																								},
																								"nativeSrc": "19819:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19819:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19809:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "19809:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19850:31:13",
																							"nodeType": "YulAssignment",
																							"src": "19850:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19867:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "19867:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19878:2:13",
																										"nodeType": "YulLiteral",
																										"src": "19878:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19863:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19863:3:13"
																								},
																								"nativeSrc": "19863:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19863:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19850:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "19850:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19698:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "19698:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19701:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "19701:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19695:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "19695:2:13"
																					},
																					"nativeSrc": "19695:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19695:14:13"
																				},
																				"nativeSrc": "19687:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19710:21:13",
																					"nodeType": "YulBlock",
																					"src": "19710:21:13",
																					"statements": [
																						{
																							"nativeSrc": "19712:17:13",
																							"nodeType": "YulAssignment",
																							"src": "19712:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19721:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "19721:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19724:4:13",
																										"nodeType": "YulLiteral",
																										"src": "19724:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19717:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19717:3:13"
																								},
																								"nativeSrc": "19717:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19717:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19712:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "19712:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19691:3:13",
																					"nodeType": "YulBlock",
																					"src": "19691:3:13",
																					"statements": []
																				},
																				"src": "19687:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "19931:156:13",
																					"nodeType": "YulBlock",
																					"src": "19931:156:13",
																					"statements": [
																						{
																							"nativeSrc": "19949:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19949:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19976:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "19976:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19981:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "19981:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19972:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "19972:3:13"
																										},
																										"nativeSrc": "19972:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "19972:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19966:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "19966:5:13"
																								},
																								"nativeSrc": "19966:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19966:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19953:9:13",
																									"nodeType": "YulTypedName",
																									"src": "19953:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20016:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "20016:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20043:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "20043:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20058:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "20058:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20066:4:13",
																														"nodeType": "YulLiteral",
																														"src": "20066:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20054:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "20054:3:13"
																												},
																												"nativeSrc": "20054:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "20054:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20024:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "20024:18:13"
																										},
																										"nativeSrc": "20024:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "20024:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20009:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "20009:6:13"
																								},
																								"nativeSrc": "20009:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "20009:64:13"
																							},
																							"nativeSrc": "20009:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "20009:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19914:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "19914:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19923:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19923:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19911:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "19911:2:13"
																					},
																					"nativeSrc": "19911:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19911:19:13"
																				},
																				"nativeSrc": "19908:179:13",
																				"nodeType": "YulIf",
																				"src": "19908:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20107:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "20107:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20121:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "20121:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20129:1:13",
																											"nodeType": "YulLiteral",
																											"src": "20129:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20117:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "20117:3:13"
																									},
																									"nativeSrc": "20117:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "20117:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20133:1:13",
																									"nodeType": "YulLiteral",
																									"src": "20133:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20113:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20113:3:13"
																							},
																							"nativeSrc": "20113:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20113:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20100:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20100:6:13"
																					},
																					"nativeSrc": "20100:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20100:36:13"
																				},
																				"nativeSrc": "20100:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "20100:36:13"
																			}
																		]
																	},
																	"nativeSrc": "19528:618:13",
																	"nodeType": "YulCase",
																	"src": "19528:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19533:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19533:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20163:222:13",
																		"nodeType": "YulBlock",
																		"src": "20163:222:13",
																		"statements": [
																			{
																				"nativeSrc": "20177:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20177:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20190:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20190:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20181:5:13",
																						"nodeType": "YulTypedName",
																						"src": "20181:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20214:67:13",
																					"nodeType": "YulBlock",
																					"src": "20214:67:13",
																					"statements": [
																						{
																							"nativeSrc": "20232:35:13",
																							"nodeType": "YulAssignment",
																							"src": "20232:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20251:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "20251:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20256:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "20256:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20247:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "20247:3:13"
																										},
																										"nativeSrc": "20247:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "20247:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20241:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20241:5:13"
																								},
																								"nativeSrc": "20241:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "20241:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20232:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20232:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20207:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "20207:6:13"
																				},
																				"nativeSrc": "20204:77:13",
																				"nodeType": "YulIf",
																				"src": "20204:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20301:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "20301:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20360:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20360:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20367:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "20367:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20307:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "20307:52:13"
																							},
																							"nativeSrc": "20307:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20307:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20294:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20294:6:13"
																					},
																					"nativeSrc": "20294:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20294:81:13"
																				},
																				"nativeSrc": "20294:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "20294:81:13"
																			}
																		]
																	},
																	"nativeSrc": "20155:230:13",
																	"nodeType": "YulCase",
																	"src": "20155:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19508:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19508:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19516:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19516:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19505:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19505:2:13"
																},
																"nativeSrc": "19505:14:13",
																"nodeType": "YulFunctionCall",
																"src": "19505:14:13"
															},
															"nativeSrc": "19498:887:13",
															"nodeType": "YulSwitch",
															"src": "19498:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18996:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19077:4:13",
														"nodeType": "YulTypedName",
														"src": "19077:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19083:3:13",
														"nodeType": "YulTypedName",
														"src": "19083:3:13",
														"type": ""
													}
												],
												"src": "18996:1395:13"
											},
											{
												"body": {
													"nativeSrc": "20440:190:13",
													"nodeType": "YulBlock",
													"src": "20440:190:13",
													"statements": [
														{
															"nativeSrc": "20450:33:13",
															"nodeType": "YulAssignment",
															"src": "20450:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20477:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20477:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20459:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20459:17:13"
																},
																"nativeSrc": "20459:24:13",
																"nodeType": "YulFunctionCall",
																"src": "20459:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20450:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20450:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20573:22:13",
																"nodeType": "YulBlock",
																"src": "20573:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20575:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20575:16:13"
																			},
																			"nativeSrc": "20575:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20575:18:13"
																		},
																		"nativeSrc": "20575:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20575:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20498:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20498:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20505:66:13",
																		"nodeType": "YulLiteral",
																		"src": "20505:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20495:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "20495:2:13"
																},
																"nativeSrc": "20495:77:13",
																"nodeType": "YulFunctionCall",
																"src": "20495:77:13"
															},
															"nativeSrc": "20492:103:13",
															"nodeType": "YulIf",
															"src": "20492:103:13"
														},
														{
															"nativeSrc": "20604:20:13",
															"nodeType": "YulAssignment",
															"src": "20604:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20615:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20615:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20622:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20622:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20611:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20611:3:13"
																},
																"nativeSrc": "20611:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20611:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20604:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20604:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "20397:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20426:5:13",
														"nodeType": "YulTypedName",
														"src": "20426:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20436:3:13",
														"nodeType": "YulTypedName",
														"src": "20436:3:13",
														"type": ""
													}
												],
												"src": "20397:233:13"
											},
											{
												"body": {
													"nativeSrc": "20750:34:13",
													"nodeType": "YulBlock",
													"src": "20750:34:13",
													"statements": [
														{
															"nativeSrc": "20760:18:13",
															"nodeType": "YulAssignment",
															"src": "20760:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "20775:3:13",
																"nodeType": "YulIdentifier",
																"src": "20775:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20760:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "20760:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20636:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20722:3:13",
														"nodeType": "YulTypedName",
														"src": "20722:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20727:6:13",
														"nodeType": "YulTypedName",
														"src": "20727:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20738:11:13",
														"nodeType": "YulTypedName",
														"src": "20738:11:13",
														"type": ""
													}
												],
												"src": "20636:148:13"
											},
											{
												"body": {
													"nativeSrc": "20900:280:13",
													"nodeType": "YulBlock",
													"src": "20900:280:13",
													"statements": [
														{
															"nativeSrc": "20910:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20910:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20957:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20957:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20924:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "20924:32:13"
																},
																"nativeSrc": "20924:39:13",
																"nodeType": "YulFunctionCall",
																"src": "20924:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20914:6:13",
																	"nodeType": "YulTypedName",
																	"src": "20914:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20972:96:13",
															"nodeType": "YulAssignment",
															"src": "20972:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21056:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21056:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21061:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20979:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "20979:76:13"
																},
																"nativeSrc": "20979:89:13",
																"nodeType": "YulFunctionCall",
																"src": "20979:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20972:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21116:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "21116:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21123:4:13",
																				"nodeType": "YulLiteral",
																				"src": "21123:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21112:3:13"
																		},
																		"nativeSrc": "21112:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21112:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21130:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21130:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21135:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21135:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21077:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "21077:34:13"
																},
																"nativeSrc": "21077:65:13",
																"nodeType": "YulFunctionCall",
																"src": "21077:65:13"
															},
															"nativeSrc": "21077:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "21077:65:13"
														},
														{
															"nativeSrc": "21151:23:13",
															"nodeType": "YulAssignment",
															"src": "21151:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21162:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21162:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21167:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21167:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21158:3:13"
																},
																"nativeSrc": "21158:16:13",
																"nodeType": "YulFunctionCall",
																"src": "21158:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21151:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20790:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20881:5:13",
														"nodeType": "YulTypedName",
														"src": "20881:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20888:3:13",
														"nodeType": "YulTypedName",
														"src": "20888:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20896:3:13",
														"nodeType": "YulTypedName",
														"src": "20896:3:13",
														"type": ""
													}
												],
												"src": "20790:390:13"
											},
											{
												"body": {
													"nativeSrc": "21370:251:13",
													"nodeType": "YulBlock",
													"src": "21370:251:13",
													"statements": [
														{
															"nativeSrc": "21381:102:13",
															"nodeType": "YulAssignment",
															"src": "21381:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21470:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21470:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21479:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21479:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21388:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "21388:81:13"
																},
																"nativeSrc": "21388:95:13",
																"nodeType": "YulFunctionCall",
																"src": "21388:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21381:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21381:3:13"
																}
															]
														},
														{
															"nativeSrc": "21493:102:13",
															"nodeType": "YulAssignment",
															"src": "21493:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21582:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21582:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21591:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21591:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21500:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "21500:81:13"
																},
																"nativeSrc": "21500:95:13",
																"nodeType": "YulFunctionCall",
																"src": "21500:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21493:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21493:3:13"
																}
															]
														},
														{
															"nativeSrc": "21605:10:13",
															"nodeType": "YulAssignment",
															"src": "21605:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "21612:3:13",
																"nodeType": "YulIdentifier",
																"src": "21612:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21605:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21605:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21186:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21341:3:13",
														"nodeType": "YulTypedName",
														"src": "21341:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21347:6:13",
														"nodeType": "YulTypedName",
														"src": "21347:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21355:6:13",
														"nodeType": "YulTypedName",
														"src": "21355:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21366:3:13",
														"nodeType": "YulTypedName",
														"src": "21366:3:13",
														"type": ""
													}
												],
												"src": "21186:435:13"
											},
											{
												"body": {
													"nativeSrc": "21733:141:13",
													"nodeType": "YulBlock",
													"src": "21733:141:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21755:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21755:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21763:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21763:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21751:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21751:3:13"
																		},
																		"nativeSrc": "21751:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21751:14:13"
																	},
																	{
																		"hexValue": "4d61737465725472616465436f6e74726163744e46543a206d61737465722074",
																		"kind": "string",
																		"nativeSrc": "21767:34:13",
																		"nodeType": "YulLiteral",
																		"src": "21767:34:13",
																		"type": "",
																		"value": "MasterTradeContractNFT: master t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21744:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21744:6:13"
																},
																"nativeSrc": "21744:58:13",
																"nodeType": "YulFunctionCall",
																"src": "21744:58:13"
															},
															"nativeSrc": "21744:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "21744:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21823:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21823:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21831:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21831:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21819:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21819:3:13"
																		},
																		"nativeSrc": "21819:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21819:15:13"
																	},
																	{
																		"hexValue": "7261646520636f6e747261637420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "21836:30:13",
																		"nodeType": "YulLiteral",
																		"src": "21836:30:13",
																		"type": "",
																		"value": "rade contract does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21812:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21812:6:13"
																},
																"nativeSrc": "21812:55:13",
																"nodeType": "YulFunctionCall",
																"src": "21812:55:13"
															},
															"nativeSrc": "21812:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "21812:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89",
												"nativeSrc": "21627:247:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21725:6:13",
														"nodeType": "YulTypedName",
														"src": "21725:6:13",
														"type": ""
													}
												],
												"src": "21627:247:13"
											},
											{
												"body": {
													"nativeSrc": "22026:220:13",
													"nodeType": "YulBlock",
													"src": "22026:220:13",
													"statements": [
														{
															"nativeSrc": "22036:74:13",
															"nodeType": "YulAssignment",
															"src": "22036:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22102:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22102:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22107:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22107:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22043:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22043:58:13"
																},
																"nativeSrc": "22043:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22043:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22036:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22036:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22208:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22208:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89",
																	"nativeSrc": "22119:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22119:88:13"
																},
																"nativeSrc": "22119:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22119:93:13"
															},
															"nativeSrc": "22119:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22119:93:13"
														},
														{
															"nativeSrc": "22221:19:13",
															"nodeType": "YulAssignment",
															"src": "22221:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22232:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22232:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22237:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22237:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22228:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22228:3:13"
																},
																"nativeSrc": "22228:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22228:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22221:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22221:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21880:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22014:3:13",
														"nodeType": "YulTypedName",
														"src": "22014:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22022:3:13",
														"nodeType": "YulTypedName",
														"src": "22022:3:13",
														"type": ""
													}
												],
												"src": "21880:366:13"
											},
											{
												"body": {
													"nativeSrc": "22423:248:13",
													"nodeType": "YulBlock",
													"src": "22423:248:13",
													"statements": [
														{
															"nativeSrc": "22433:26:13",
															"nodeType": "YulAssignment",
															"src": "22433:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22445:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22445:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22456:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22456:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22441:3:13"
																},
																"nativeSrc": "22441:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22441:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22433:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22433:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22480:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22480:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22491:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22491:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22476:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22476:3:13"
																		},
																		"nativeSrc": "22476:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22476:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22499:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22499:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22505:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22505:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22495:3:13"
																		},
																		"nativeSrc": "22495:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22495:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22469:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22469:6:13"
																},
																"nativeSrc": "22469:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22469:47:13"
															},
															"nativeSrc": "22469:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22469:47:13"
														},
														{
															"nativeSrc": "22525:139:13",
															"nodeType": "YulAssignment",
															"src": "22525:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22659:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22659:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22533:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "22533:124:13"
																},
																"nativeSrc": "22533:131:13",
																"nodeType": "YulFunctionCall",
																"src": "22533:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22525:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22525:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22252:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22403:9:13",
														"nodeType": "YulTypedName",
														"src": "22403:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22418:4:13",
														"nodeType": "YulTypedName",
														"src": "22418:4:13",
														"type": ""
													}
												],
												"src": "22252:419:13"
											},
											{
												"body": {
													"nativeSrc": "22735:40:13",
													"nodeType": "YulBlock",
													"src": "22735:40:13",
													"statements": [
														{
															"nativeSrc": "22746:22:13",
															"nodeType": "YulAssignment",
															"src": "22746:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22762:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "22762:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22756:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "22756:5:13"
																},
																"nativeSrc": "22756:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22756:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22746:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22746:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22677:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22718:5:13",
														"nodeType": "YulTypedName",
														"src": "22718:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22728:6:13",
														"nodeType": "YulTypedName",
														"src": "22728:6:13",
														"type": ""
													}
												],
												"src": "22677:98:13"
											},
											{
												"body": {
													"nativeSrc": "22876:73:13",
													"nodeType": "YulBlock",
													"src": "22876:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22893:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22893:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22898:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22898:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22886:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22886:6:13"
																},
																"nativeSrc": "22886:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22886:19:13"
															},
															"nativeSrc": "22886:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "22886:19:13"
														},
														{
															"nativeSrc": "22914:29:13",
															"nodeType": "YulAssignment",
															"src": "22914:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22933:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22933:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22938:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22938:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22929:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22929:3:13"
																},
																"nativeSrc": "22929:14:13",
																"nodeType": "YulFunctionCall",
																"src": "22929:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22914:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "22914:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22781:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22848:3:13",
														"nodeType": "YulTypedName",
														"src": "22848:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22853:6:13",
														"nodeType": "YulTypedName",
														"src": "22853:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22864:11:13",
														"nodeType": "YulTypedName",
														"src": "22864:11:13",
														"type": ""
													}
												],
												"src": "22781:168:13"
											},
											{
												"body": {
													"nativeSrc": "23045:283:13",
													"nodeType": "YulBlock",
													"src": "23045:283:13",
													"statements": [
														{
															"nativeSrc": "23055:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23055:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23101:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23101:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "23069:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "23069:31:13"
																},
																"nativeSrc": "23069:38:13",
																"nodeType": "YulFunctionCall",
																"src": "23069:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23059:6:13",
																	"nodeType": "YulTypedName",
																	"src": "23059:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23116:77:13",
															"nodeType": "YulAssignment",
															"src": "23116:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23181:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23181:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23186:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23186:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23123:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "23123:57:13"
																},
																"nativeSrc": "23123:70:13",
																"nodeType": "YulFunctionCall",
																"src": "23123:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23116:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23116:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23241:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "23241:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23248:4:13",
																				"nodeType": "YulLiteral",
																				"src": "23248:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23237:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23237:3:13"
																		},
																		"nativeSrc": "23237:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23237:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23255:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23255:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23260:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23260:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23202:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "23202:34:13"
																},
																"nativeSrc": "23202:65:13",
																"nodeType": "YulFunctionCall",
																"src": "23202:65:13"
															},
															"nativeSrc": "23202:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "23202:65:13"
														},
														{
															"nativeSrc": "23276:46:13",
															"nodeType": "YulAssignment",
															"src": "23276:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23287:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23287:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23314:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23314:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "23292:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "23292:21:13"
																		},
																		"nativeSrc": "23292:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23292:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23283:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23283:3:13"
																},
																"nativeSrc": "23283:39:13",
																"nodeType": "YulFunctionCall",
																"src": "23283:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23276:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23276:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22955:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23026:5:13",
														"nodeType": "YulTypedName",
														"src": "23026:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23033:3:13",
														"nodeType": "YulTypedName",
														"src": "23033:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23041:3:13",
														"nodeType": "YulTypedName",
														"src": "23041:3:13",
														"type": ""
													}
												],
												"src": "22955:373:13"
											},
											{
												"body": {
													"nativeSrc": "23534:440:13",
													"nodeType": "YulBlock",
													"src": "23534:440:13",
													"statements": [
														{
															"nativeSrc": "23544:27:13",
															"nodeType": "YulAssignment",
															"src": "23544:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23556:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23556:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23567:3:13",
																		"nodeType": "YulLiteral",
																		"src": "23567:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23552:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23552:3:13"
																},
																"nativeSrc": "23552:19:13",
																"nodeType": "YulFunctionCall",
																"src": "23552:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23544:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23544:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23625:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23625:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23638:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23638:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23649:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23649:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23634:3:13"
																		},
																		"nativeSrc": "23634:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23634:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23581:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23581:43:13"
																},
																"nativeSrc": "23581:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23581:71:13"
															},
															"nativeSrc": "23581:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23581:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23706:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23706:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23719:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23719:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23730:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23730:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23715:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23715:3:13"
																		},
																		"nativeSrc": "23715:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23715:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23662:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23662:43:13"
																},
																"nativeSrc": "23662:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23662:72:13"
															},
															"nativeSrc": "23662:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23662:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23788:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23788:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23801:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23812:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23812:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23797:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23797:3:13"
																		},
																		"nativeSrc": "23797:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23797:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23744:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23744:43:13"
																},
																"nativeSrc": "23744:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23744:72:13"
															},
															"nativeSrc": "23744:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23744:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23837:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23837:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23848:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23848:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23833:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23833:3:13"
																		},
																		"nativeSrc": "23833:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23833:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23857:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23857:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23863:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23863:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23853:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23853:3:13"
																		},
																		"nativeSrc": "23853:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23853:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23826:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23826:6:13"
																},
																"nativeSrc": "23826:48:13",
																"nodeType": "YulFunctionCall",
																"src": "23826:48:13"
															},
															"nativeSrc": "23826:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "23826:48:13"
														},
														{
															"nativeSrc": "23883:84:13",
															"nodeType": "YulAssignment",
															"src": "23883:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23953:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23953:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23962:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23962:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23891:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "23891:61:13"
																},
																"nativeSrc": "23891:76:13",
																"nodeType": "YulFunctionCall",
																"src": "23891:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23883:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23883:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23334:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23482:9:13",
														"nodeType": "YulTypedName",
														"src": "23482:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23494:6:13",
														"nodeType": "YulTypedName",
														"src": "23494:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23502:6:13",
														"nodeType": "YulTypedName",
														"src": "23502:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23510:6:13",
														"nodeType": "YulTypedName",
														"src": "23510:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23518:6:13",
														"nodeType": "YulTypedName",
														"src": "23518:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23529:4:13",
														"nodeType": "YulTypedName",
														"src": "23529:4:13",
														"type": ""
													}
												],
												"src": "23334:640:13"
											},
											{
												"body": {
													"nativeSrc": "24042:79:13",
													"nodeType": "YulBlock",
													"src": "24042:79:13",
													"statements": [
														{
															"nativeSrc": "24052:22:13",
															"nodeType": "YulAssignment",
															"src": "24052:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24067:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24067:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24061:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "24061:5:13"
																},
																"nativeSrc": "24061:13:13",
																"nodeType": "YulFunctionCall",
																"src": "24061:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24052:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "24052:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24109:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "24109:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "24083:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "24083:25:13"
																},
																"nativeSrc": "24083:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24083:32:13"
															},
															"nativeSrc": "24083:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "24083:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23980:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24020:6:13",
														"nodeType": "YulTypedName",
														"src": "24020:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24028:3:13",
														"nodeType": "YulTypedName",
														"src": "24028:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24036:5:13",
														"nodeType": "YulTypedName",
														"src": "24036:5:13",
														"type": ""
													}
												],
												"src": "23980:141:13"
											},
											{
												"body": {
													"nativeSrc": "24203:273:13",
													"nodeType": "YulBlock",
													"src": "24203:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "24249:83:13",
																"nodeType": "YulBlock",
																"src": "24249:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24251:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "24251:77:13"
																			},
																			"nativeSrc": "24251:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24251:79:13"
																		},
																		"nativeSrc": "24251:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24251:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24224:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "24224:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24233:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24233:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24220:3:13"
																		},
																		"nativeSrc": "24220:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24220:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24245:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24216:3:13"
																},
																"nativeSrc": "24216:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24216:32:13"
															},
															"nativeSrc": "24213:119:13",
															"nodeType": "YulIf",
															"src": "24213:119:13"
														},
														{
															"nativeSrc": "24342:127:13",
															"nodeType": "YulBlock",
															"src": "24342:127:13",
															"statements": [
																{
																	"nativeSrc": "24357:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24357:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24371:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24371:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24361:6:13",
																			"nodeType": "YulTypedName",
																			"src": "24361:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24386:73:13",
																	"nodeType": "YulAssignment",
																	"src": "24386:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24431:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "24431:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24442:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "24442:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24427:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "24427:3:13"
																				},
																				"nativeSrc": "24427:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24427:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24451:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "24451:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "24396:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "24396:30:13"
																		},
																		"nativeSrc": "24396:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24396:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24386:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "24386:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "24127:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24173:9:13",
														"nodeType": "YulTypedName",
														"src": "24173:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24184:7:13",
														"nodeType": "YulTypedName",
														"src": "24184:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24196:6:13",
														"nodeType": "YulTypedName",
														"src": "24196:6:13",
														"type": ""
													}
												],
												"src": "24127:349:13"
											},
											{
												"body": {
													"nativeSrc": "24510:152:13",
													"nodeType": "YulBlock",
													"src": "24510:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24527:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24527:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24530:77:13",
																		"nodeType": "YulLiteral",
																		"src": "24530:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24520:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24520:6:13"
																},
																"nativeSrc": "24520:88:13",
																"nodeType": "YulFunctionCall",
																"src": "24520:88:13"
															},
															"nativeSrc": "24520:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "24520:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24624:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24624:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24627:4:13",
																		"nodeType": "YulLiteral",
																		"src": "24627:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24617:6:13"
																},
																"nativeSrc": "24617:15:13",
																"nodeType": "YulFunctionCall",
																"src": "24617:15:13"
															},
															"nativeSrc": "24617:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "24617:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24648:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24648:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24651:4:13",
																		"nodeType": "YulLiteral",
																		"src": "24651:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24641:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24641:6:13"
																},
																"nativeSrc": "24641:15:13",
																"nodeType": "YulFunctionCall",
																"src": "24641:15:13"
															},
															"nativeSrc": "24641:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "24641:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24482:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "24482:180:13"
											},
											{
												"body": {
													"nativeSrc": "24794:206:13",
													"nodeType": "YulBlock",
													"src": "24794:206:13",
													"statements": [
														{
															"nativeSrc": "24804:26:13",
															"nodeType": "YulAssignment",
															"src": "24804:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24816:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24816:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24827:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24827:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24812:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24812:3:13"
																},
																"nativeSrc": "24812:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24812:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24804:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24804:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24884:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24884:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24897:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24897:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24908:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24908:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24893:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24893:3:13"
																		},
																		"nativeSrc": "24893:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24893:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24840:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24840:43:13"
																},
																"nativeSrc": "24840:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24840:71:13"
															},
															"nativeSrc": "24840:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24840:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24965:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24965:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24978:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24978:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24989:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24989:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24974:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24974:3:13"
																		},
																		"nativeSrc": "24974:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24974:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24921:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24921:43:13"
																},
																"nativeSrc": "24921:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24921:72:13"
															},
															"nativeSrc": "24921:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24921:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24668:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24758:9:13",
														"nodeType": "YulTypedName",
														"src": "24758:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24770:6:13",
														"nodeType": "YulTypedName",
														"src": "24770:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24778:6:13",
														"nodeType": "YulTypedName",
														"src": "24778:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24789:4:13",
														"nodeType": "YulTypedName",
														"src": "24789:4:13",
														"type": ""
													}
												],
												"src": "24668:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct MasterTradeContractNFT.MasterTradeContract -> struct MasterTradeContractNFT.MasterTradeContract\n    function abi_encode_t_struct$_MasterTradeContract_$2947_memory_ptr_to_t_struct$_MasterTradeContract_$2947_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // metadataURI\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_MasterTradeContract_$2947_memory_ptr__to_t_struct$_MasterTradeContract_$2947_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_MasterTradeContract_$2947_memory_ptr_to_t_struct$_MasterTradeContract_$2947_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886(memPtr) {\n\n        mstore(add(memPtr, 0), \"MasterTradeContractNFT: no maste\")\n\n        mstore(add(memPtr, 32), \"r trade contracts exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89(memPtr) {\n\n        mstore(add(memPtr, 0), \"MasterTradeContractNFT: master t\")\n\n        mstore(add(memPtr, 32), \"rade contract does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 60)\n        store_literal_in_memory_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610135575f3560e01c80638da5cb5b116100b6578063b3a599ee1161007a578063b3a599ee14610337578063b88d4fde14610355578063c87b56dd14610371578063e985e9c5146103a1578063f2fde38b146103d1578063f993d400146103ed57610135565b80638da5cb5b1461029357806395d89b41146102b15780639742db55146102cf578063a22cb465146102eb578063a65c74941461030757610135565b80632e9b6d62116100fd5780632e9b6d62146101ef57806342842e0e1461020d5780636352211e1461022957806370a0823114610259578063715018a61461028957610135565b806301ffc9a71461013957806306fdde0314610169578063081812fc14610187578063095ea7b3146101b757806323b872dd146101d3575b5f80fd5b610153600480360381019061014e9190611c32565b61041d565b6040516101609190611c77565b60405180910390f35b6101716104fe565b60405161017e9190611d00565b60405180910390f35b6101a1600480360381019061019c9190611d53565b61058d565b6040516101ae9190611dbd565b60405180910390f35b6101d160048036038101906101cc9190611e00565b6105a8565b005b6101ed60048036038101906101e89190611e3e565b6105be565b005b6101f76106bd565b6040516102049190611efd565b60405180910390f35b61022760048036038101906102229190611e3e565b6107c7565b005b610243600480360381019061023e9190611d53565b6107e6565b6040516102509190611dbd565b60405180910390f35b610273600480360381019061026e9190611f1d565b6107f7565b6040516102809190611f57565b60405180910390f35b6102916108ad565b005b61029b6108c0565b6040516102a89190611dbd565b60405180910390f35b6102b96108e8565b6040516102c69190611d00565b60405180910390f35b6102e960048036038101906102e4919061209c565b610978565b005b61030560048036038101906103009190612120565b6109e3565b005b610321600480360381019061031c9190611d53565b6109f9565b60405161032e9190611d00565b60405180910390f35b61033f610a99565b60405161034c9190611f57565b60405180910390f35b61036f600480360381019061036a91906121fc565b610a9f565b005b61038b60048036038101906103869190611d53565b610abc565b6040516103989190611d00565b60405180910390f35b6103bb60048036038101906103b6919061227c565b610b22565b6040516103c89190611c77565b60405180910390f35b6103eb60048036038101906103e69190611f1d565b610bb0565b005b61040760048036038101906104029190611d53565b610c34565b6040516104149190611efd565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104f757506104f682610d69565b5b9050919050565b60605f805461050c906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906122e7565b80156105835780601f1061055a57610100808354040283529160200191610583565b820191905f5260205f20905b81548152906001019060200180831161056657829003601f168201915b5050505050905090565b5f61059782610dd2565b506105a182610e58565b9050919050565b6105ba82826105b5610e91565b610e98565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062e575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106259190611dbd565b60405180910390fd5b5f610641838361063c610e91565b610eaa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106b7578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106ae93929190612317565b60405180910390fd5b50505050565b6106c5611bb9565b5f60085411610709576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610700906123bc565b60405180910390fd5b60075f600160085461071b9190612407565b81526020019081526020015f206040518060200160405290815f82018054610742906122e7565b80601f016020809104026020016040519081016040528092919081815260200182805461076e906122e7565b80156107b95780601f10610790576101008083540402835291602001916107b9565b820191905f5260205f20905b81548152906001019060200180831161079c57829003601f168201915b505050505081525050905090565b6107e183838360405180602001604052805f815250610a9f565b505050565b5f6107f082610dd2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610868575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161085f9190611dbd565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108b56110b5565b6108be5f61113c565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108f7906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610923906122e7565b801561096e5780601f106109455761010080835404028352916020019161096e565b820191905f5260205f20905b81548152906001019060200180831161095157829003601f168201915b5050505050905090565b6109806110b5565b5f600854905061099083826111ff565b60405180602001604052808381525060075f8381526020019081526020015f205f820151815f0190816109c391906125d7565b5090505060085f8154809291906109d9906126a6565b9190505550505050565b6109f56109ee610e91565b83836112f2565b5050565b6007602052805f5260405f205f91509050805f018054610a18906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610a44906122e7565b8015610a8f5780601f10610a6657610100808354040283529160200191610a8f565b820191905f5260205f20905b815481529060010190602001808311610a7257829003601f168201915b5050505050905081565b60085481565b610aaa8484846105be565b610ab68484848461145b565b50505050565b6060610ac782610dd2565b505f610ad161160d565b90505f815111610aef5760405180602001604052805f815250610b1a565b80610af984611623565b604051602001610b0a929190612727565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610bb86110b5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c28575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c1f9190611dbd565b60405180910390fd5b610c318161113c565b50565b610c3c611bb9565b5f610c46836107e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cad906127ba565b60405180910390fd5b60075f8481526020019081526020015f206040518060200160405290815f82018054610ce1906122e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0d906122e7565b8015610d585780601f10610d2f57610100808354040283529160200191610d58565b820191905f5260205f20905b815481529060010190602001808311610d3b57829003601f168201915b505050505081525050915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ddd836116ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e4f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e469190611f57565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ea58383836001611726565b505050565b5f80610eb5846116ed565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ef657610ef58184866118e5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f8157610f355f855f80611726565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461100057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6110bd610e91565b73ffffffffffffffffffffffffffffffffffffffff166110db6108c0565b73ffffffffffffffffffffffffffffffffffffffff161461113a576110fe610e91565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111319190611dbd565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361126f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112669190611dbd565b60405180910390fd5b5f61127b83835f610eaa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112ed575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016112e49190611dbd565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361136257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016113599190611dbd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161144e9190611c77565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611607578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261149e610e91565b8685856040518563ffffffff1660e01b81526004016114c0949392919061282a565b6020604051808303815f875af19250505080156114fb57506040513d601f19601f820116820180604052508101906114f89190612888565b60015b61157c573d805f8114611529576040519150601f19603f3d011682016040523d82523d5f602084013e61152e565b606091505b505f81510361157457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161156b9190611dbd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461160557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115fc9190611dbd565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611631846119a8565b0190505f8167ffffffffffffffff81111561164f5761164e611f78565b5b6040519080825280601f01601f1916602001820160405280156116815781602001600182028036833780820191505090505b5090505f82602001820190505b6001156116e2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816116d7576116d66128b3565b5b0494505f850361168e575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061175e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611890575f61176d84610dd2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117d757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117ea57506117e88184610b22565b155b1561182c57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118239190611dbd565b60405180910390fd5b811561188e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118f0838383611af9565b6119a3575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361196457806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161195b9190611f57565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161199a9291906128e0565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a04577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fa576119f96128b3565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a41576d04ee2d6d415b85acef81000000008381611a3757611a366128b3565b5b0492506020810190505b662386f26fc100008310611a7057662386f26fc100008381611a6657611a656128b3565b5b0492506010810190505b6305f5e1008310611a99576305f5e1008381611a8f57611a8e6128b3565b5b0492506008810190505b6127108310611abe576127108381611ab457611ab36128b3565b5b0492506004810190505b60648310611ae15760648381611ad757611ad66128b3565b5b0492506002810190505b600a8310611af0576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bb057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b715750611b708484610b22565b5b80611baf57508273ffffffffffffffffffffffffffffffffffffffff16611b9783610e58565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6040518060200160405280606081525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c1181611bdd565b8114611c1b575f80fd5b50565b5f81359050611c2c81611c08565b92915050565b5f60208284031215611c4757611c46611bd5565b5b5f611c5484828501611c1e565b91505092915050565b5f8115159050919050565b611c7181611c5d565b82525050565b5f602082019050611c8a5f830184611c68565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611cd282611c90565b611cdc8185611c9a565b9350611cec818560208601611caa565b611cf581611cb8565b840191505092915050565b5f6020820190508181035f830152611d188184611cc8565b905092915050565b5f819050919050565b611d3281611d20565b8114611d3c575f80fd5b50565b5f81359050611d4d81611d29565b92915050565b5f60208284031215611d6857611d67611bd5565b5b5f611d7584828501611d3f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611da782611d7e565b9050919050565b611db781611d9d565b82525050565b5f602082019050611dd05f830184611dae565b92915050565b611ddf81611d9d565b8114611de9575f80fd5b50565b5f81359050611dfa81611dd6565b92915050565b5f8060408385031215611e1657611e15611bd5565b5b5f611e2385828601611dec565b9250506020611e3485828601611d3f565b9150509250929050565b5f805f60608486031215611e5557611e54611bd5565b5b5f611e6286828701611dec565b9350506020611e7386828701611dec565b9250506040611e8486828701611d3f565b9150509250925092565b5f82825260208201905092915050565b5f611ea882611c90565b611eb28185611e8e565b9350611ec2818560208601611caa565b611ecb81611cb8565b840191505092915050565b5f602083015f8301518482035f860152611ef08282611e9e565b9150508091505092915050565b5f6020820190508181035f830152611f158184611ed6565b905092915050565b5f60208284031215611f3257611f31611bd5565b5b5f611f3f84828501611dec565b91505092915050565b611f5181611d20565b82525050565b5f602082019050611f6a5f830184611f48565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fae82611cb8565b810181811067ffffffffffffffff82111715611fcd57611fcc611f78565b5b80604052505050565b5f611fdf611bcc565b9050611feb8282611fa5565b919050565b5f67ffffffffffffffff82111561200a57612009611f78565b5b61201382611cb8565b9050602081019050919050565b828183375f83830152505050565b5f61204061203b84611ff0565b611fd6565b90508281526020810184848401111561205c5761205b611f74565b5b612067848285612020565b509392505050565b5f82601f83011261208357612082611f70565b5b813561209384826020860161202e565b91505092915050565b5f80604083850312156120b2576120b1611bd5565b5b5f6120bf85828601611dec565b925050602083013567ffffffffffffffff8111156120e0576120df611bd9565b5b6120ec8582860161206f565b9150509250929050565b6120ff81611c5d565b8114612109575f80fd5b50565b5f8135905061211a816120f6565b92915050565b5f806040838503121561213657612135611bd5565b5b5f61214385828601611dec565b92505060206121548582860161210c565b9150509250929050565b5f67ffffffffffffffff82111561217857612177611f78565b5b61218182611cb8565b9050602081019050919050565b5f6121a061219b8461215e565b611fd6565b9050828152602081018484840111156121bc576121bb611f74565b5b6121c7848285612020565b509392505050565b5f82601f8301126121e3576121e2611f70565b5b81356121f384826020860161218e565b91505092915050565b5f805f806080858703121561221457612213611bd5565b5b5f61222187828801611dec565b945050602061223287828801611dec565b935050604061224387828801611d3f565b925050606085013567ffffffffffffffff81111561226457612263611bd9565b5b612270878288016121cf565b91505092959194509250565b5f806040838503121561229257612291611bd5565b5b5f61229f85828601611dec565b92505060206122b085828601611dec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122fe57607f821691505b602082108103612311576123106122ba565b5b50919050565b5f60608201905061232a5f830186611dae565b6123376020830185611f48565b6123446040830184611dae565b949350505050565b7f4d61737465725472616465436f6e74726163744e46543a206e6f206d617374655f8201527f7220747261646520636f6e747261637473206578697374000000000000000000602082015250565b5f6123a6603783611c9a565b91506123b18261234c565b604082019050919050565b5f6020820190508181035f8301526123d38161239a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61241182611d20565b915061241c83611d20565b9250828203905081811115612434576124336123da565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261245b565b6124a0868361245b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124db6124d66124d184611d20565b6124b8565b611d20565b9050919050565b5f819050919050565b6124f4836124c1565b612508612500826124e2565b848454612467565b825550505050565b5f90565b61251c612510565b6125278184846124eb565b505050565b5b8181101561254a5761253f5f82612514565b60018101905061252d565b5050565b601f82111561258f576125608161243a565b6125698461244c565b81016020851015612578578190505b61258c6125848561244c565b83018261252c565b50505b505050565b5f82821c905092915050565b5f6125af5f1984600802612594565b1980831691505092915050565b5f6125c783836125a0565b9150826002028217905092915050565b6125e082611c90565b67ffffffffffffffff8111156125f9576125f8611f78565b5b61260382546122e7565b61260e82828561254e565b5f60209050601f83116001811461263f575f841561262d578287015190505b61263785826125bc565b86555061269e565b601f19841661264d8661243a565b5f5b828110156126745784890151825560018201915060208501945060208101905061264f565b86831015612691578489015161268d601f8916826125a0565b8355505b6001600288020188555050505b505050505050565b5f6126b082611d20565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126e2576126e16123da565b5b600182019050919050565b5f81905092915050565b5f61270182611c90565b61270b81856126ed565b935061271b818560208601611caa565b80840191505092915050565b5f61273282856126f7565b915061273e82846126f7565b91508190509392505050565b7f4d61737465725472616465436f6e74726163744e46543a206d617374657220745f8201527f7261646520636f6e747261637420646f6573206e6f7420657869737400000000602082015250565b5f6127a4603c83611c9a565b91506127af8261274a565b604082019050919050565b5f6020820190508181035f8301526127d181612798565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6127fc826127d8565b61280681856127e2565b9350612816818560208601611caa565b61281f81611cb8565b840191505092915050565b5f60808201905061283d5f830187611dae565b61284a6020830186611dae565b6128576040830185611f48565b818103606083015261286981846127f2565b905095945050505050565b5f8151905061288281611c08565b92915050565b5f6020828403121561289d5761289c611bd5565b5b5f6128aa84828501612874565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506128f35f830185611dae565b6129006020830184611f48565b939250505056fea26469706673582212209f9e183a21487a92203b1ccf2615c5183cb5cc928c4a915c206b8d83a8aa614c64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB3A599EE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB3A599EE EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xF993D400 EQ PUSH2 0x3ED JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x9742DB55 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA65C7494 EQ PUSH2 0x307 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x2E9B6D62 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2E9B6D62 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x8AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0xBB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4F7 JUMPI POP PUSH2 0x4F6 DUP3 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x50C SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x538 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x583 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x566 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x597 DUP3 PUSH2 0xDD2 JUMP JUMPDEST POP PUSH2 0x5A1 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BA DUP3 DUP3 PUSH2 0x5B5 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x641 DUP4 DUP4 PUSH2 0x63C PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B7 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x1BB9 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x790 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP3 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x868 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x8BE PUSH0 PUSH2 0x113C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x923 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x96E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x945 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x96E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x951 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x980 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x990 DUP4 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x25D7 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D9 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0x9EE PUSH2 0xE91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xA18 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA44 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xAB6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x145B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC7 DUP3 PUSH2 0xDD2 JUMP JUMPDEST POP PUSH0 PUSH2 0xAD1 PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB1A JUMP JUMPDEST DUP1 PUSH2 0xAF9 DUP5 PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0A SWAP3 SWAP2 SWAP1 PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB8 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0x113C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x1BB9 JUMP JUMPDEST PUSH0 PUSH2 0xC46 DUP4 PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xCE1 SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0D SWAP1 PUSH2 0x22E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDD DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1726 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEB5 DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF6 JUMPI PUSH2 0xEF5 DUP2 DUP5 DUP7 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF81 JUMPI PUSH2 0xF35 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1000 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10BD PUSH2 0xE91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10DB PUSH2 0x8C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113A JUMPI PUSH2 0x10FE PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x127B DUP4 DUP4 PUSH0 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x144E SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1607 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x149E PUSH2 0xE91 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14FB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x157C JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1574 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1605 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1631 DUP5 PUSH2 0x19A8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1681 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x16E2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x16D7 JUMPI PUSH2 0x16D6 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x168E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x175E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1890 JUMPI PUSH0 PUSH2 0x176D DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17D7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17EA JUMPI POP PUSH2 0x17E8 DUP2 DUP5 PUSH2 0xB22 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x182C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x188E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18F0 DUP4 DUP4 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x19A3 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1964 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195B SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP3 SWAP2 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A04 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A41 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A70 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A99 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A8F JUMPI PUSH2 0x1A8E PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1ABE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AE1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AD7 JUMPI PUSH2 0x1AD6 PUSH2 0x28B3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AF0 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BB0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B71 JUMPI POP PUSH2 0x1B70 DUP5 DUP5 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BAF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B97 DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C11 DUP2 PUSH2 0x1BDD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2C DUP2 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C47 JUMPI PUSH2 0x1C46 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C54 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C71 DUP2 PUSH2 0x1C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8A PUSH0 DUP4 ADD DUP5 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD2 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1CDC DUP2 DUP6 PUSH2 0x1C9A JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1CF5 DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D18 DUP2 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D32 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D4D DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D75 DUP5 DUP3 DUP6 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA7 DUP3 PUSH2 0x1D7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB7 DUP2 PUSH2 0x1D9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDF DUP2 PUSH2 0x1D9D JUMP JUMPDEST DUP2 EQ PUSH2 0x1DE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DFA DUP2 PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E23 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E34 DUP6 DUP3 DUP7 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E62 DUP7 DUP3 DUP8 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E73 DUP7 DUP3 DUP8 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E84 DUP7 DUP3 DUP8 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA8 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1EB2 DUP2 DUP6 PUSH2 0x1E8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1EC2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1ECB DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F15 DUP2 DUP5 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3F DUP5 DUP3 DUP6 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F51 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FAE DUP3 PUSH2 0x1CB8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDF PUSH2 0x1BCC JUMP JUMPDEST SWAP1 POP PUSH2 0x1FEB DUP3 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2013 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH2 0x203B DUP5 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x205C JUMPI PUSH2 0x205B PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x2067 DUP5 DUP3 DUP6 PUSH2 0x2020 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2093 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x202E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BF DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x20EC DUP6 DUP3 DUP7 ADD PUSH2 0x206F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20FF DUP2 PUSH2 0x1C5D JUMP JUMPDEST DUP2 EQ PUSH2 0x2109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211A DUP2 PUSH2 0x20F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2143 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2154 DUP6 DUP3 DUP7 ADD PUSH2 0x210C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2181 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21A0 PUSH2 0x219B DUP5 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21BC JUMPI PUSH2 0x21BB PUSH2 0x1F74 JUMP JUMPDEST JUMPDEST PUSH2 0x21C7 DUP5 DUP3 DUP6 PUSH2 0x2020 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x218E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2221 DUP8 DUP3 DUP9 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2232 DUP8 DUP3 DUP9 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2243 DUP8 DUP3 DUP9 ADD PUSH2 0x1D3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH2 0x2263 PUSH2 0x1BD9 JUMP JUMPDEST JUMPDEST PUSH2 0x2270 DUP8 DUP3 DUP9 ADD PUSH2 0x21CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229F DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x22BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x232A PUSH0 DUP4 ADD DUP7 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2337 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2344 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D61737465725472616465436F6E74726163744E46543A206E6F206D61737465 PUSH0 DUP3 ADD MSTORE PUSH32 0x7220747261646520636F6E747261637473206578697374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A6 PUSH1 0x37 DUP4 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP PUSH2 0x23B1 DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2411 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x241C DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x23DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2496 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x245B JUMP JUMPDEST PUSH2 0x24A0 DUP7 DUP4 PUSH2 0x245B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DB PUSH2 0x24D6 PUSH2 0x24D1 DUP5 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F4 DUP4 PUSH2 0x24C1 JUMP JUMPDEST PUSH2 0x2508 PUSH2 0x2500 DUP3 PUSH2 0x24E2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2467 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x251C PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2527 DUP2 DUP5 DUP5 PUSH2 0x24EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x254A JUMPI PUSH2 0x253F PUSH0 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x252D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x258F JUMPI PUSH2 0x2560 DUP2 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x2569 DUP5 PUSH2 0x244C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2578 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x258C PUSH2 0x2584 DUP6 PUSH2 0x244C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x252C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25AF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2594 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C7 DUP4 DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25E0 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x1F78 JUMP JUMPDEST JUMPDEST PUSH2 0x2603 DUP3 SLOAD PUSH2 0x22E7 JUMP JUMPDEST PUSH2 0x260E DUP3 DUP3 DUP6 PUSH2 0x254E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x263F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x262D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2637 DUP6 DUP3 PUSH2 0x25BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x269E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x264D DUP7 PUSH2 0x243A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2674 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x264F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2691 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x268D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25A0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B0 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26E2 JUMPI PUSH2 0x26E1 PUSH2 0x23DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2701 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x270B DUP2 DUP6 PUSH2 0x26ED JUMP JUMPDEST SWAP4 POP PUSH2 0x271B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2732 DUP3 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x273E DUP3 DUP5 PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D61737465725472616465436F6E74726163744E46543A206D61737465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261646520636F6E747261637420646F6573206E6F7420657869737400000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A4 PUSH1 0x3C DUP4 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 POP PUSH2 0x27AF DUP3 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27D1 DUP2 PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27FC DUP3 PUSH2 0x27D8 JUMP JUMPDEST PUSH2 0x2806 DUP2 DUP6 PUSH2 0x27E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2816 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x281F DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x283D PUSH0 DUP4 ADD DUP8 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x284A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2857 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F48 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2869 DUP2 DUP5 PUSH2 0x27F2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2882 DUP2 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x289D JUMPI PUSH2 0x289C PUSH2 0x1BD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28AA DUP5 DUP3 DUP6 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28F3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x2900 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SWAP15 XOR GASPRICE 0x21 BASEFEE PUSH27 0x92203B1CCF2615C5183CB5CC928C4A915C206B8D83A8AA614C6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "170:1318:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1208:278:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:330:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;295:67:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:208:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;858:344:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300:2;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1208:278:12:-;1276:26;;:::i;:::-;1350:1;1322:25;;:29;1314:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1428:20;:51;1477:1;1449:25;;:29;;;;:::i;:::-;1428:51;;;;;;;;;;;1421:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:278;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;522:330:12:-;1531:13:0;:11;:13::i;:::-;621:29:12::1;653:25;;621:57;;688:32;694:2;698:21;688:5;:32::i;:::-;776;;;;;;;;796:11;776:32;;::::0;730:20:::1;:43;751:21;730:43;;;;;;;;;;;:78;;;;;;;;;;;;;:::i;:::-;;;;;818:25;;:27;;;;;;;;;:::i;:::-;;;;;;611:241;522:330:::0;;:::o;3718:144:2:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;295:67:12:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;368:40::-;;;;:::o;4985:208:2:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;858:344:12:-;949:26;;:::i;:::-;987:13;1003:30;1011:21;1003:7;:30::i;:::-;987:46;;1068:1;1051:19;;:5;:19;;;1043:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1152:20;:43;1173:21;1152:43;;;;;;;;;;;1145:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:344;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9955:327:2:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:7:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:2:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:10:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:2:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:159::-;5482:11;5516:6;5511:3;5504:19;5556:4;5551:3;5547:14;5532:29;;5408:159;;;;:::o;5573:357::-;5651:3;5679:39;5712:5;5679:39;:::i;:::-;5734:61;5788:6;5783:3;5734:61;:::i;:::-;5727:68;;5804:65;5862:6;5857:3;5850:4;5843:5;5839:16;5804:65;:::i;:::-;5894:29;5916:6;5894:29;:::i;:::-;5889:3;5885:39;5878:46;;5655:275;5573:357;;;;:::o;6046:463::-;6189:3;6225:4;6220:3;6216:14;6319:4;6312:5;6308:16;6302:23;6372:3;6366:4;6362:14;6355:4;6350:3;6346:14;6339:38;6398:73;6466:4;6452:12;6398:73;:::i;:::-;6390:81;;6240:242;6499:4;6492:11;;6194:315;6046:463;;;;:::o;6515:421::-;6682:4;6720:2;6709:9;6705:18;6697:26;;6769:9;6763:4;6759:20;6755:1;6744:9;6740:17;6733:47;6797:132;6924:4;6915:6;6797:132;:::i;:::-;6789:140;;6515:421;;;;:::o;6942:329::-;7001:6;7050:2;7038:9;7029:7;7025:23;7021:32;7018:119;;;7056:79;;:::i;:::-;7018:119;7176:1;7201:53;7246:7;7237:6;7226:9;7222:22;7201:53;:::i;:::-;7191:63;;7147:117;6942:329;;;;:::o;7277:118::-;7364:24;7382:5;7364:24;:::i;:::-;7359:3;7352:37;7277:118;;:::o;7401:222::-;7494:4;7532:2;7521:9;7517:18;7509:26;;7545:71;7613:1;7602:9;7598:17;7589:6;7545:71;:::i;:::-;7401:222;;;;:::o;7629:117::-;7738:1;7735;7728:12;7752:117;7861:1;7858;7851:12;7875:180;7923:77;7920:1;7913:88;8020:4;8017:1;8010:15;8044:4;8041:1;8034:15;8061:281;8144:27;8166:4;8144:27;:::i;:::-;8136:6;8132:40;8274:6;8262:10;8259:22;8238:18;8226:10;8223:34;8220:62;8217:88;;;8285:18;;:::i;:::-;8217:88;8325:10;8321:2;8314:22;8104:238;8061:281;;:::o;8348:129::-;8382:6;8409:20;;:::i;:::-;8399:30;;8438:33;8466:4;8458:6;8438:33;:::i;:::-;8348:129;;;:::o;8483:308::-;8545:4;8635:18;8627:6;8624:30;8621:56;;;8657:18;;:::i;:::-;8621:56;8695:29;8717:6;8695:29;:::i;:::-;8687:37;;8779:4;8773;8769:15;8761:23;;8483:308;;;:::o;8797:148::-;8895:6;8890:3;8885;8872:30;8936:1;8927:6;8922:3;8918:16;8911:27;8797:148;;;:::o;8951:425::-;9029:5;9054:66;9070:49;9112:6;9070:49;:::i;:::-;9054:66;:::i;:::-;9045:75;;9143:6;9136:5;9129:21;9181:4;9174:5;9170:16;9219:3;9210:6;9205:3;9201:16;9198:25;9195:112;;;9226:79;;:::i;:::-;9195:112;9316:54;9363:6;9358:3;9353;9316:54;:::i;:::-;9035:341;8951:425;;;;;:::o;9396:340::-;9452:5;9501:3;9494:4;9486:6;9482:17;9478:27;9468:122;;9509:79;;:::i;:::-;9468:122;9626:6;9613:20;9651:79;9726:3;9718:6;9711:4;9703:6;9699:17;9651:79;:::i;:::-;9642:88;;9458:278;9396:340;;;;:::o;9742:654::-;9820:6;9828;9877:2;9865:9;9856:7;9852:23;9848:32;9845:119;;;9883:79;;:::i;:::-;9845:119;10003:1;10028:53;10073:7;10064:6;10053:9;10049:22;10028:53;:::i;:::-;10018:63;;9974:117;10158:2;10147:9;10143:18;10130:32;10189:18;10181:6;10178:30;10175:117;;;10211:79;;:::i;:::-;10175:117;10316:63;10371:7;10362:6;10351:9;10347:22;10316:63;:::i;:::-;10306:73;;10101:288;9742:654;;;;;:::o;10402:116::-;10472:21;10487:5;10472:21;:::i;:::-;10465:5;10462:32;10452:60;;10508:1;10505;10498:12;10452:60;10402:116;:::o;10524:133::-;10567:5;10605:6;10592:20;10583:29;;10621:30;10645:5;10621:30;:::i;:::-;10524:133;;;;:::o;10663:468::-;10728:6;10736;10785:2;10773:9;10764:7;10760:23;10756:32;10753:119;;;10791:79;;:::i;:::-;10753:119;10911:1;10936:53;10981:7;10972:6;10961:9;10957:22;10936:53;:::i;:::-;10926:63;;10882:117;11038:2;11064:50;11106:7;11097:6;11086:9;11082:22;11064:50;:::i;:::-;11054:60;;11009:115;10663:468;;;;;:::o;11137:307::-;11198:4;11288:18;11280:6;11277:30;11274:56;;;11310:18;;:::i;:::-;11274:56;11348:29;11370:6;11348:29;:::i;:::-;11340:37;;11432:4;11426;11422:15;11414:23;;11137:307;;;:::o;11450:423::-;11527:5;11552:65;11568:48;11609:6;11568:48;:::i;:::-;11552:65;:::i;:::-;11543:74;;11640:6;11633:5;11626:21;11678:4;11671:5;11667:16;11716:3;11707:6;11702:3;11698:16;11695:25;11692:112;;;11723:79;;:::i;:::-;11692:112;11813:54;11860:6;11855:3;11850;11813:54;:::i;:::-;11533:340;11450:423;;;;;:::o;11892:338::-;11947:5;11996:3;11989:4;11981:6;11977:17;11973:27;11963:122;;12004:79;;:::i;:::-;11963:122;12121:6;12108:20;12146:78;12220:3;12212:6;12205:4;12197:6;12193:17;12146:78;:::i;:::-;12137:87;;11953:277;11892:338;;;;:::o;12236:943::-;12331:6;12339;12347;12355;12404:3;12392:9;12383:7;12379:23;12375:33;12372:120;;;12411:79;;:::i;:::-;12372:120;12531:1;12556:53;12601:7;12592:6;12581:9;12577:22;12556:53;:::i;:::-;12546:63;;12502:117;12658:2;12684:53;12729:7;12720:6;12709:9;12705:22;12684:53;:::i;:::-;12674:63;;12629:118;12786:2;12812:53;12857:7;12848:6;12837:9;12833:22;12812:53;:::i;:::-;12802:63;;12757:118;12942:2;12931:9;12927:18;12914:32;12973:18;12965:6;12962:30;12959:117;;;12995:79;;:::i;:::-;12959:117;13100:62;13154:7;13145:6;13134:9;13130:22;13100:62;:::i;:::-;13090:72;;12885:287;12236:943;;;;;;;:::o;13185:474::-;13253:6;13261;13310:2;13298:9;13289:7;13285:23;13281:32;13278:119;;;13316:79;;:::i;:::-;13278:119;13436:1;13461:53;13506:7;13497:6;13486:9;13482:22;13461:53;:::i;:::-;13451:63;;13407:117;13563:2;13589:53;13634:7;13625:6;13614:9;13610:22;13589:53;:::i;:::-;13579:63;;13534:118;13185:474;;;;;:::o;13665:180::-;13713:77;13710:1;13703:88;13810:4;13807:1;13800:15;13834:4;13831:1;13824:15;13851:320;13895:6;13932:1;13926:4;13922:12;13912:22;;13979:1;13973:4;13969:12;14000:18;13990:81;;14056:4;14048:6;14044:17;14034:27;;13990:81;14118:2;14110:6;14107:14;14087:18;14084:38;14081:84;;14137:18;;:::i;:::-;14081:84;13902:269;13851:320;;;:::o;14177:442::-;14326:4;14364:2;14353:9;14349:18;14341:26;;14377:71;14445:1;14434:9;14430:17;14421:6;14377:71;:::i;:::-;14458:72;14526:2;14515:9;14511:18;14502:6;14458:72;:::i;:::-;14540;14608:2;14597:9;14593:18;14584:6;14540:72;:::i;:::-;14177:442;;;;;;:::o;14625:242::-;14765:34;14761:1;14753:6;14749:14;14742:58;14834:25;14829:2;14821:6;14817:15;14810:50;14625:242;:::o;14873:366::-;15015:3;15036:67;15100:2;15095:3;15036:67;:::i;:::-;15029:74;;15112:93;15201:3;15112:93;:::i;:::-;15230:2;15225:3;15221:12;15214:19;;14873:366;;;:::o;15245:419::-;15411:4;15449:2;15438:9;15434:18;15426:26;;15498:9;15492:4;15488:20;15484:1;15473:9;15469:17;15462:47;15526:131;15652:4;15526:131;:::i;:::-;15518:139;;15245:419;;;:::o;15670:180::-;15718:77;15715:1;15708:88;15815:4;15812:1;15805:15;15839:4;15836:1;15829:15;15856:194;15896:4;15916:20;15934:1;15916:20;:::i;:::-;15911:25;;15950:20;15968:1;15950:20;:::i;:::-;15945:25;;15994:1;15991;15987:9;15979:17;;16018:1;16012:4;16009:11;16006:37;;;16023:18;;:::i;:::-;16006:37;15856:194;;;;:::o;16056:141::-;16105:4;16128:3;16120:11;;16151:3;16148:1;16141:14;16185:4;16182:1;16172:18;16164:26;;16056:141;;;:::o;16203:93::-;16240:6;16287:2;16282;16275:5;16271:14;16267:23;16257:33;;16203:93;;;:::o;16302:107::-;16346:8;16396:5;16390:4;16386:16;16365:37;;16302:107;;;;:::o;16415:393::-;16484:6;16534:1;16522:10;16518:18;16557:97;16587:66;16576:9;16557:97;:::i;:::-;16675:39;16705:8;16694:9;16675:39;:::i;:::-;16663:51;;16747:4;16743:9;16736:5;16732:21;16723:30;;16796:4;16786:8;16782:19;16775:5;16772:30;16762:40;;16491:317;;16415:393;;;;;:::o;16814:60::-;16842:3;16863:5;16856:12;;16814:60;;;:::o;16880:142::-;16930:9;16963:53;16981:34;16990:24;17008:5;16990:24;:::i;:::-;16981:34;:::i;:::-;16963:53;:::i;:::-;16950:66;;16880:142;;;:::o;17028:75::-;17071:3;17092:5;17085:12;;17028:75;;;:::o;17109:269::-;17219:39;17250:7;17219:39;:::i;:::-;17280:91;17329:41;17353:16;17329:41;:::i;:::-;17321:6;17314:4;17308:11;17280:91;:::i;:::-;17274:4;17267:105;17185:193;17109:269;;;:::o;17384:73::-;17429:3;17384:73;:::o;17463:189::-;17540:32;;:::i;:::-;17581:65;17639:6;17631;17625:4;17581:65;:::i;:::-;17516:136;17463:189;;:::o;17658:186::-;17718:120;17735:3;17728:5;17725:14;17718:120;;;17789:39;17826:1;17819:5;17789:39;:::i;:::-;17762:1;17755:5;17751:13;17742:22;;17718:120;;;17658:186;;:::o;17850:543::-;17951:2;17946:3;17943:11;17940:446;;;17985:38;18017:5;17985:38;:::i;:::-;18069:29;18087:10;18069:29;:::i;:::-;18059:8;18055:44;18252:2;18240:10;18237:18;18234:49;;;18273:8;18258:23;;18234:49;18296:80;18352:22;18370:3;18352:22;:::i;:::-;18342:8;18338:37;18325:11;18296:80;:::i;:::-;17955:431;;17940:446;17850:543;;;:::o;18399:117::-;18453:8;18503:5;18497:4;18493:16;18472:37;;18399:117;;;;:::o;18522:169::-;18566:6;18599:51;18647:1;18643:6;18635:5;18632:1;18628:13;18599:51;:::i;:::-;18595:56;18680:4;18674;18670:15;18660:25;;18573:118;18522:169;;;;:::o;18696:295::-;18772:4;18918:29;18943:3;18937:4;18918:29;:::i;:::-;18910:37;;18980:3;18977:1;18973:11;18967:4;18964:21;18956:29;;18696:295;;;;:::o;18996:1395::-;19113:37;19146:3;19113:37;:::i;:::-;19215:18;19207:6;19204:30;19201:56;;;19237:18;;:::i;:::-;19201:56;19281:38;19313:4;19307:11;19281:38;:::i;:::-;19366:67;19426:6;19418;19412:4;19366:67;:::i;:::-;19460:1;19484:4;19471:17;;19516:2;19508:6;19505:14;19533:1;19528:618;;;;20190:1;20207:6;20204:77;;;20256:9;20251:3;20247:19;20241:26;20232:35;;20204:77;20307:67;20367:6;20360:5;20307:67;:::i;:::-;20301:4;20294:81;20163:222;19498:887;;19528:618;19580:4;19576:9;19568:6;19564:22;19614:37;19646:4;19614:37;:::i;:::-;19673:1;19687:208;19701:7;19698:1;19695:14;19687:208;;;19780:9;19775:3;19771:19;19765:26;19757:6;19750:42;19831:1;19823:6;19819:14;19809:24;;19878:2;19867:9;19863:18;19850:31;;19724:4;19721:1;19717:12;19712:17;;19687:208;;;19923:6;19914:7;19911:19;19908:179;;;19981:9;19976:3;19972:19;19966:26;20024:48;20066:4;20058:6;20054:17;20043:9;20024:48;:::i;:::-;20016:6;20009:64;19931:156;19908:179;20133:1;20129;20121:6;20117:14;20113:22;20107:4;20100:36;19535:611;;;19498:887;;19088:1303;;;18996:1395;;:::o;20397:233::-;20436:3;20459:24;20477:5;20459:24;:::i;:::-;20450:33;;20505:66;20498:5;20495:77;20492:103;;20575:18;;:::i;:::-;20492:103;20622:1;20615:5;20611:13;20604:20;;20397:233;;;:::o;20636:148::-;20738:11;20775:3;20760:18;;20636:148;;;;:::o;20790:390::-;20896:3;20924:39;20957:5;20924:39;:::i;:::-;20979:89;21061:6;21056:3;20979:89;:::i;:::-;20972:96;;21077:65;21135:6;21130:3;21123:4;21116:5;21112:16;21077:65;:::i;:::-;21167:6;21162:3;21158:16;21151:23;;20900:280;20790:390;;;;:::o;21186:435::-;21366:3;21388:95;21479:3;21470:6;21388:95;:::i;:::-;21381:102;;21500:95;21591:3;21582:6;21500:95;:::i;:::-;21493:102;;21612:3;21605:10;;21186:435;;;;;:::o;21627:247::-;21767:34;21763:1;21755:6;21751:14;21744:58;21836:30;21831:2;21823:6;21819:15;21812:55;21627:247;:::o;21880:366::-;22022:3;22043:67;22107:2;22102:3;22043:67;:::i;:::-;22036:74;;22119:93;22208:3;22119:93;:::i;:::-;22237:2;22232:3;22228:12;22221:19;;21880:366;;;:::o;22252:419::-;22418:4;22456:2;22445:9;22441:18;22433:26;;22505:9;22499:4;22495:20;22491:1;22480:9;22476:17;22469:47;22533:131;22659:4;22533:131;:::i;:::-;22525:139;;22252:419;;;:::o;22677:98::-;22728:6;22762:5;22756:12;22746:22;;22677:98;;;:::o;22781:168::-;22864:11;22898:6;22893:3;22886:19;22938:4;22933:3;22929:14;22914:29;;22781:168;;;;:::o;22955:373::-;23041:3;23069:38;23101:5;23069:38;:::i;:::-;23123:70;23186:6;23181:3;23123:70;:::i;:::-;23116:77;;23202:65;23260:6;23255:3;23248:4;23241:5;23237:16;23202:65;:::i;:::-;23292:29;23314:6;23292:29;:::i;:::-;23287:3;23283:39;23276:46;;23045:283;22955:373;;;;:::o;23334:640::-;23529:4;23567:3;23556:9;23552:19;23544:27;;23581:71;23649:1;23638:9;23634:17;23625:6;23581:71;:::i;:::-;23662:72;23730:2;23719:9;23715:18;23706:6;23662:72;:::i;:::-;23744;23812:2;23801:9;23797:18;23788:6;23744:72;:::i;:::-;23863:9;23857:4;23853:20;23848:2;23837:9;23833:18;23826:48;23891:76;23962:4;23953:6;23891:76;:::i;:::-;23883:84;;23334:640;;;;;;;:::o;23980:141::-;24036:5;24067:6;24061:13;24052:22;;24083:32;24109:5;24083:32;:::i;:::-;23980:141;;;;:::o;24127:349::-;24196:6;24245:2;24233:9;24224:7;24220:23;24216:32;24213:119;;;24251:79;;:::i;:::-;24213:119;24371:1;24396:63;24451:7;24442:6;24431:9;24427:22;24396:63;:::i;:::-;24386:73;;24342:127;24127:349;;;;:::o;24482:180::-;24530:77;24527:1;24520:88;24627:4;24624:1;24617:15;24651:4;24648:1;24641:15;24668:332;24789:4;24827:2;24816:9;24812:18;24804:26;;24840:71;24908:1;24897:9;24893:17;24884:6;24840:71;:::i;:::-;24921:72;24989:2;24978:9;24974:18;24965:6;24921:72;:::i;:::-;24668:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2111400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getLatestMasterTradeContractDetails()": "infinite",
								"getMasterTradeContractDetails(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"masterTradeContracts(uint256)": "infinite",
								"mintMasterTradeContract(address,string)": "infinite",
								"name()": "infinite",
								"nextMasterTradeContractId()": "2447",
								"owner()": "2538",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 415,
									"end": 516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 415,
									"end": 516,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 415,
									"end": 516,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "4D61737465725472616465436F6E74726163744E465400000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "4D54434E46540000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 415,
									"end": 516,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1488,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f9e183a21487a92203b1ccf2615c5183cb5cc928c4a915c206b8d83a8aa614c64736f6c63430008190033",
									".code": [
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "B3A599EE"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "B3A599EE"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "F993D400"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "9742DB55"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "A65C7494"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "2E9B6D62"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "2E9B6D62"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1488,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1208,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1208,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 522,
											"end": 852,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 522,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 522,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 368,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 368,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 858,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 858,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 858,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1276,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1276,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1302,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1276,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1347,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1322,
											"end": 1347,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1351,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1314,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1314,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1449,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1479,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1421,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1421,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1208,
											"end": 1486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 852,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 522,
											"end": 852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 653,
											"end": 678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 621,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 621,
											"end": 678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 688,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 694,
											"end": 696,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 698,
											"end": 719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 688,
											"end": 693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 688,
											"end": 720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 688,
											"end": 720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 688,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 796,
											"end": 807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 776,
											"end": 808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 773,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 730,
											"end": 808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 818,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 818,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 818,
											"end": 845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 818,
											"end": 845,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 611,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 522,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 295,
											"end": 362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 295,
											"end": 362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 368,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 949,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 949,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 949,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 975,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 949,
											"end": 975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1011,
											"end": 1032,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1003,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1033,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1003,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1033,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1043,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1043,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1195,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1145,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1145,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "143"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5523,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5560,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5712,
											"end": 5717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5679,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5718,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5679,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5783,
											"end": 5786,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5734,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5795,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5734,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5795,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 5862,
											"end": 5868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5857,
											"end": 5860,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5848,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5804,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5869,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 5804,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 5894,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5923,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5894,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 5924,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6189,
											"end": 6192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6317,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6325,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6372,
											"end": 6375,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6376,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 6359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6360,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6398,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6471,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 6398,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6194,
											"end": 6509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6722,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6709,
											"end": 6718,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6769,
											"end": 6778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6779,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6753,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6797,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6929,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 6797,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7029,
											"end": 7036,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7025,
											"end": 7048,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7021,
											"end": 7053,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7137,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 7018,
											"end": 7137,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7056,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7056,
											"end": 7135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7135,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7056,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7137,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 7018,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 7246,
											"end": 7253,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7243,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7201,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 7201,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7201,
											"end": 7254,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 7201,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7147,
											"end": 7264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 7271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7395,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7277,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7382,
											"end": 7387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 7364,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7359,
											"end": 7362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7494,
											"end": 7498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7517,
											"end": 7535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7535,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7613,
											"end": 7614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7598,
											"end": 7615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7589,
											"end": 7595,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7545,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7616,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7545,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7629,
											"end": 7746,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7629,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7738,
											"end": 7739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7728,
											"end": 7740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7752,
											"end": 7869,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 7752,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7861,
											"end": 7862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7875,
											"end": 8055,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 7875,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 8000,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7920,
											"end": 7921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 8001,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8020,
											"end": 8024,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8010,
											"end": 8025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8048,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8049,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8061,
											"end": 8342,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8061,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8144,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 8166,
											"end": 8170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8144,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8144,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8144,
											"end": 8171,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 8144,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8132,
											"end": 8172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8272,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8259,
											"end": 8281,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8226,
											"end": 8236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8257,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8282,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8217,
											"end": 8305,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 8285,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8305,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8217,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8325,
											"end": 8335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8321,
											"end": 8323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8061,
											"end": 8342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8061,
											"end": 8342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8061,
											"end": 8342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8477,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8348,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8409,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 8409,
											"end": 8429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8409,
											"end": 8429,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8409,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8466,
											"end": 8470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8438,
											"end": 8471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8471,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8438,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8791,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8483,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8627,
											"end": 8633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8654,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8621,
											"end": 8677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8621,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 8621,
											"end": 8677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 8657,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8621,
											"end": 8677,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 8621,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8695,
											"end": 8724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8724,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 8783,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8945,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 8797,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8890,
											"end": 8893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8872,
											"end": 8902,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8936,
											"end": 8937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 8925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8911,
											"end": 8938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9029,
											"end": 9034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9070,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9070,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 9070,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9070,
											"end": 9119,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 9070,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 9054,
											"end": 9120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9120,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9054,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9045,
											"end": 9120,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9045,
											"end": 9120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9143,
											"end": 9149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9136,
											"end": 9141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9129,
											"end": 9150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9181,
											"end": 9185,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9222,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9205,
											"end": 9208,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9223,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9195,
											"end": 9307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 9226,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 9226,
											"end": 9305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9305,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 9226,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9307,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9195,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9358,
											"end": 9361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9356,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 9316,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9370,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 9316,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9501,
											"end": 9504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9498,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9482,
											"end": 9499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9478,
											"end": 9505,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9468,
											"end": 9590,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 9509,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9590,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9468,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9626,
											"end": 9632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9613,
											"end": 9633,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 9726,
											"end": 9729,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9715,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9699,
											"end": 9716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 9651,
											"end": 9730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9642,
											"end": 9730,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9642,
											"end": 9730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9826,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9828,
											"end": 9834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9879,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9865,
											"end": 9874,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9856,
											"end": 9863,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9852,
											"end": 9875,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 9880,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9964,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9845,
											"end": 9964,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9883,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 9883,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9962,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9883,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9964,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9845,
											"end": 9964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 10073,
											"end": 10080,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10062,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10028,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 10028,
											"end": 10081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10028,
											"end": 10081,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 10028,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9974,
											"end": 10091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10160,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10178,
											"end": 10208,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 10175,
											"end": 10292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10211,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10292,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 10175,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 10371,
											"end": 10378,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10362,
											"end": 10368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10351,
											"end": 10360,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10347,
											"end": 10369,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 10316,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10379,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 10316,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10379,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10101,
											"end": 10389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 10396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10402,
											"end": 10518,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 10402,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10487,
											"end": 10492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 10472,
											"end": 10493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10462,
											"end": 10494,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10452,
											"end": 10512,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10498,
											"end": 10510,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10512,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10452,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10402,
											"end": 10518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10402,
											"end": 10518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 10621,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10787,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10773,
											"end": 10782,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10771,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10783,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10756,
											"end": 10788,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10753,
											"end": 10872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10791,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10791,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 10791,
											"end": 10870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10791,
											"end": 10870,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10791,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10872,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10753,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10936,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 10981,
											"end": 10988,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10972,
											"end": 10978,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10961,
											"end": 10970,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10936,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 10936,
											"end": 10989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10936,
											"end": 10989,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 10936,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10926,
											"end": 10989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10926,
											"end": 10989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11038,
											"end": 11040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11064,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 11106,
											"end": 11113,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11097,
											"end": 11103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11086,
											"end": 11095,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11064,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 11064,
											"end": 11114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11064,
											"end": 11114,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 11064,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11054,
											"end": 11114,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11054,
											"end": 11114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11009,
											"end": 11124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10663,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11444,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 11137,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11198,
											"end": 11202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11306,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11277,
											"end": 11307,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11274,
											"end": 11330,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11274,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 11274,
											"end": 11330,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 11310,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11274,
											"end": 11330,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 11274,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11348,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 11370,
											"end": 11376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11348,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11348,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11348,
											"end": 11377,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 11348,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11432,
											"end": 11436,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11426,
											"end": 11430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11422,
											"end": 11437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11527,
											"end": 11532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11568,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11568,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 11568,
											"end": 11616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11568,
											"end": 11616,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11568,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 11552,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11543,
											"end": 11617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11543,
											"end": 11617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11640,
											"end": 11646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11678,
											"end": 11682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11671,
											"end": 11676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 11683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11716,
											"end": 11719,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11702,
											"end": 11705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11692,
											"end": 11804,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11723,
											"end": 11802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11723,
											"end": 11802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 11723,
											"end": 11802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11723,
											"end": 11802,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11723,
											"end": 11802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11804,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11692,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11813,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11855,
											"end": 11858,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11813,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 11813,
											"end": 11867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11813,
											"end": 11867,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11813,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11947,
											"end": 11952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11996,
											"end": 11999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11989,
											"end": 11993,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11977,
											"end": 11994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12000,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11963,
											"end": 12085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 12004,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 12004,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12083,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 12004,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 12085,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11963,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12128,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12203,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12193,
											"end": 12210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 12146,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12224,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 12146,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 12230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12331,
											"end": 12337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12347,
											"end": 12353,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12355,
											"end": 12361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12404,
											"end": 12407,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12392,
											"end": 12401,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12383,
											"end": 12390,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12402,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12375,
											"end": 12408,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12372,
											"end": 12492,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12372,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12372,
											"end": 12492,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12411,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12411,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 12411,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12411,
											"end": 12490,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12411,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12372,
											"end": 12492,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12372,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12601,
											"end": 12608,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12592,
											"end": 12598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12590,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12577,
											"end": 12599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12556,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 12556,
											"end": 12609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12556,
											"end": 12609,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12556,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12546,
											"end": 12609,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12546,
											"end": 12609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12502,
											"end": 12619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12684,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 12729,
											"end": 12736,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12709,
											"end": 12718,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12705,
											"end": 12727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12684,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 12684,
											"end": 12737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12684,
											"end": 12737,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 12684,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12737,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12786,
											"end": 12788,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12857,
											"end": 12864,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 12855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12812,
											"end": 12865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12757,
											"end": 12875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12942,
											"end": 12944,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12931,
											"end": 12940,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12945,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12914,
											"end": 12946,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12965,
											"end": 12971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12962,
											"end": 12992,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12959,
											"end": 13076,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12959,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 12959,
											"end": 13076,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 12995,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 12995,
											"end": 13074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13074,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 12995,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12959,
											"end": 13076,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 12959,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13145,
											"end": 13151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13130,
											"end": 13152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 13100,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13162,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13100,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13162,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12885,
											"end": 13172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 13179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13267,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13310,
											"end": 13312,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13298,
											"end": 13307,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13289,
											"end": 13296,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13285,
											"end": 13308,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13281,
											"end": 13313,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13397,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 13278,
											"end": 13397,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13316,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13316,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 13316,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13316,
											"end": 13395,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13316,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13397,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 13278,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13436,
											"end": 13437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13461,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 13506,
											"end": 13513,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13497,
											"end": 13503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13495,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13461,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13514,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 13461,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13451,
											"end": 13514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13451,
											"end": 13514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13407,
											"end": 13524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 13634,
											"end": 13641,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13625,
											"end": 13631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13614,
											"end": 13623,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13589,
											"end": 13642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13589,
											"end": 13642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13589,
											"end": 13642,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 13589,
											"end": 13642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13579,
											"end": 13642,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13579,
											"end": 13642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13534,
											"end": 13652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13665,
											"end": 13845,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 13665,
											"end": 13845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13713,
											"end": 13790,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13710,
											"end": 13711,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13791,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 13814,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13807,
											"end": 13808,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13800,
											"end": 13815,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 13838,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13839,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 14171,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 13851,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13895,
											"end": 13901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13933,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13926,
											"end": 13930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 13934,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13912,
											"end": 13934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13912,
											"end": 13934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13979,
											"end": 13980,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13973,
											"end": 13977,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13969,
											"end": 13981,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13990,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 13990,
											"end": 14071,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14060,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14061,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14034,
											"end": 14061,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14034,
											"end": 14061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13990,
											"end": 14071,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 13990,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14110,
											"end": 14116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14107,
											"end": 14121,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14122,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14081,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 14081,
											"end": 14165,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 14137,
											"end": 14155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14081,
											"end": 14165,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 14081,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13902,
											"end": 14171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 14171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 14171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 14171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 14171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14326,
											"end": 14330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14353,
											"end": 14362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14349,
											"end": 14367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14377,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14443,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14430,
											"end": 14447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14421,
											"end": 14427,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14377,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 14377,
											"end": 14448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14377,
											"end": 14448,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 14377,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 14526,
											"end": 14528,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14515,
											"end": 14524,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14502,
											"end": 14508,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 14458,
											"end": 14530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14530,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 14458,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14540,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 14608,
											"end": 14610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14597,
											"end": 14606,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14584,
											"end": 14590,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14540,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 14540,
											"end": 14612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14540,
											"end": 14612,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 14540,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 14867,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 14625,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14765,
											"end": 14799,
											"name": "PUSH",
											"source": 13,
											"value": "4D61737465725472616465436F6E74726163744E46543A206E6F206D61737465"
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14753,
											"end": 14759,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14749,
											"end": 14763,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14859,
											"name": "PUSH",
											"source": 13,
											"value": "7220747261646520636F6E747261637473206578697374000000000000000000"
										},
										{
											"begin": 14829,
											"end": 14831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14821,
											"end": 14827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14817,
											"end": 14832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14810,
											"end": 14860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 14867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 14867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 15100,
											"end": 15102,
											"name": "PUSH",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 15095,
											"end": 15098,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 15036,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15029,
											"end": 15103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15029,
											"end": 15103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 15201,
											"end": 15204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 15112,
											"end": 15205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15230,
											"end": 15232,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15221,
											"end": 15233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 15239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15451,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15438,
											"end": 15447,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 15452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15452,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15498,
											"end": 15507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15492,
											"end": 15496,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15488,
											"end": 15508,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15484,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15473,
											"end": 15482,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15469,
											"end": 15486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15462,
											"end": 15509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 15652,
											"end": 15656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 15526,
											"end": 15657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15657,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15245,
											"end": 15664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15670,
											"end": 15850,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 15670,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15795,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15715,
											"end": 15716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15708,
											"end": 15796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15815,
											"end": 15819,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 15812,
											"end": 15813,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15805,
											"end": 15820,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15839,
											"end": 15843,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15836,
											"end": 15837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15844,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 15934,
											"end": 15935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 15916,
											"end": 15936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15936,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 15916,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15911,
											"end": 15936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15911,
											"end": 15936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 15968,
											"end": 15969,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 15950,
											"end": 15970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15994,
											"end": 15995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15991,
											"end": 15992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15987,
											"end": 15996,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 15996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 15996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16018,
											"end": 16019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16009,
											"end": 16020,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16043,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 16006,
											"end": 16043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 16023,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 16023,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16041,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 16023,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16043,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 16006,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 16050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16056,
											"end": 16197,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 16056,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16105,
											"end": 16109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16128,
											"end": 16131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16151,
											"end": 16154,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16141,
											"end": 16155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16185,
											"end": 16189,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16182,
											"end": 16183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16172,
											"end": 16190,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16164,
											"end": 16190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16164,
											"end": 16190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16056,
											"end": 16197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16056,
											"end": 16197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16056,
											"end": 16197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16056,
											"end": 16197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16296,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 16203,
											"end": 16296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16287,
											"end": 16289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16282,
											"end": 16284,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16275,
											"end": 16280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16271,
											"end": 16285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16290,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16296,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16296,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16346,
											"end": 16354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16396,
											"end": 16401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16386,
											"end": 16402,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16365,
											"end": 16402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16365,
											"end": 16402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16302,
											"end": 16409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16484,
											"end": 16490,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16534,
											"end": 16535,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 16522,
											"end": 16532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16518,
											"end": 16536,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16557,
											"end": 16654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 16587,
											"end": 16653,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16576,
											"end": 16585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16557,
											"end": 16654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16557,
											"end": 16654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16557,
											"end": 16654,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 16557,
											"end": 16654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 16705,
											"end": 16713,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16703,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16675,
											"end": 16714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16714,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 16675,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16663,
											"end": 16714,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16663,
											"end": 16714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16747,
											"end": 16751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16743,
											"end": 16752,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16736,
											"end": 16741,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16732,
											"end": 16753,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16723,
											"end": 16753,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16723,
											"end": 16753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16796,
											"end": 16800,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16786,
											"end": 16794,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16782,
											"end": 16801,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16775,
											"end": 16780,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16772,
											"end": 16802,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16802,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16814,
											"end": 16874,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 16814,
											"end": 16874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16842,
											"end": 16845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16863,
											"end": 16868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16814,
											"end": 16874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16814,
											"end": 16874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16814,
											"end": 16874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16814,
											"end": 16874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 17022,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 16880,
											"end": 17022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 16939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 17016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 16981,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 16990,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 17008,
											"end": 17013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16990,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 16990,
											"end": 17014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16990,
											"end": 17014,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 16990,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16981,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 16981,
											"end": 17015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16981,
											"end": 17015,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 16981,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16963,
											"end": 17016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 16963,
											"end": 17016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16963,
											"end": 17016,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 16963,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16950,
											"end": 17016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16950,
											"end": 17016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 17022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 17022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 17022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 17022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17103,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 17028,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17071,
											"end": 17074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17092,
											"end": 17097,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17028,
											"end": 17103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17378,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 17109,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17219,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 17250,
											"end": 17257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17219,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 17219,
											"end": 17258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17219,
											"end": 17258,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 17219,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17280,
											"end": 17371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 17329,
											"end": 17370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 17353,
											"end": 17369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17329,
											"end": 17370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 17329,
											"end": 17370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17329,
											"end": 17370,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 17329,
											"end": 17370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17321,
											"end": 17327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17314,
											"end": 17318,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17308,
											"end": 17319,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17280,
											"end": 17371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 17280,
											"end": 17371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17280,
											"end": 17371,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 17280,
											"end": 17371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17274,
											"end": 17278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17372,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17185,
											"end": 17378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17457,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 17384,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17429,
											"end": 17432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17384,
											"end": 17457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17463,
											"end": 17652,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 17463,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17540,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 17540,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 17540,
											"end": 17572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17540,
											"end": 17572,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 17540,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17581,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 17639,
											"end": 17645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17625,
											"end": 17629,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17581,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 17581,
											"end": 17646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17581,
											"end": 17646,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 17581,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17516,
											"end": 17652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17463,
											"end": 17652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17463,
											"end": 17652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17463,
											"end": 17652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17658,
											"end": 17844,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 17658,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17735,
											"end": 17738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17725,
											"end": 17739,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 17826,
											"end": 17827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 17789,
											"end": 17828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17828,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 17789,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17762,
											"end": 17763,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17755,
											"end": 17760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17751,
											"end": 17764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17742,
											"end": 17764,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17742,
											"end": 17764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 17718,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17658,
											"end": 17844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17658,
											"end": 17844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17658,
											"end": 17844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 18393,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 17850,
											"end": 18393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 17953,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17946,
											"end": 17949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17943,
											"end": 17954,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 18386,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 18386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 17940,
											"end": 18386,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17985,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 18017,
											"end": 18022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17985,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 17985,
											"end": 18023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17985,
											"end": 18023,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 17985,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18069,
											"end": 18098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 18087,
											"end": 18097,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18069,
											"end": 18098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 18069,
											"end": 18098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18069,
											"end": 18098,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 18069,
											"end": 18098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18055,
											"end": 18099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18252,
											"end": 18254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18240,
											"end": 18250,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18237,
											"end": 18255,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18283,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 18234,
											"end": 18283,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18283,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 18234,
											"end": 18283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18296,
											"end": 18376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 18352,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 18370,
											"end": 18373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18352,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 18352,
											"end": 18374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18352,
											"end": 18374,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 18352,
											"end": 18374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18342,
											"end": 18350,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18338,
											"end": 18375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18325,
											"end": 18336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18296,
											"end": 18376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 18296,
											"end": 18376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18296,
											"end": 18376,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 18296,
											"end": 18376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17955,
											"end": 18386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17955,
											"end": 18386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 18386,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 17940,
											"end": 18386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 18393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 18393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 18393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 18393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18453,
											"end": 18461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18503,
											"end": 18508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18497,
											"end": 18501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18493,
											"end": 18509,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 18472,
											"end": 18509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18472,
											"end": 18509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18566,
											"end": 18572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18599,
											"end": 18650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 18647,
											"end": 18648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18643,
											"end": 18649,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 18640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18632,
											"end": 18633,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 18628,
											"end": 18641,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18599,
											"end": 18650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 18599,
											"end": 18650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18599,
											"end": 18650,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 18599,
											"end": 18650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18595,
											"end": 18651,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 18680,
											"end": 18684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18674,
											"end": 18678,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18670,
											"end": 18685,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18660,
											"end": 18685,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18660,
											"end": 18685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18573,
											"end": 18691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18918,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 18943,
											"end": 18946,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18937,
											"end": 18941,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18918,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 18918,
											"end": 18947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18918,
											"end": 18947,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 18918,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18910,
											"end": 18947,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18910,
											"end": 18947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18980,
											"end": 18983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18977,
											"end": 18978,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18973,
											"end": 18984,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18967,
											"end": 18971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18964,
											"end": 18985,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 18956,
											"end": 18985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18956,
											"end": 18985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18696,
											"end": 18991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 20391,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 18996,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19113,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 19146,
											"end": 19149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19113,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 19113,
											"end": 19150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19113,
											"end": 19150,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 19113,
											"end": 19150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19215,
											"end": 19233,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19207,
											"end": 19213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19204,
											"end": 19234,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19201,
											"end": 19257,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19201,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 19201,
											"end": 19257,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19237,
											"end": 19255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 19237,
											"end": 19255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 19237,
											"end": 19255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19237,
											"end": 19255,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 19237,
											"end": 19255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19201,
											"end": 19257,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 19201,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 19313,
											"end": 19317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19318,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 19281,
											"end": 19319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19319,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 19281,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19366,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 19426,
											"end": 19432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19418,
											"end": 19424,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19412,
											"end": 19416,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19366,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 19366,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19366,
											"end": 19433,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 19366,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19460,
											"end": 19461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19484,
											"end": 19488,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19471,
											"end": 19488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19471,
											"end": 19488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19516,
											"end": 19518,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19508,
											"end": 19514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19505,
											"end": 19519,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19533,
											"end": 19534,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20190,
											"end": 20191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20207,
											"end": 20213,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20281,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 20204,
											"end": 20281,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20251,
											"end": 20254,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 20247,
											"end": 20266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20241,
											"end": 20267,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20281,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 20204,
											"end": 20281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 20367,
											"end": 20373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 20307,
											"end": 20374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20307,
											"end": 20374,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 20307,
											"end": 20374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20301,
											"end": 20305,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20294,
											"end": 20375,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 19498,
											"end": 20385,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 19528,
											"end": 20146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19584,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19576,
											"end": 19585,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 19568,
											"end": 19574,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19564,
											"end": 19586,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19614,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 19646,
											"end": 19650,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19614,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 19614,
											"end": 19651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19614,
											"end": 19651,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 19614,
											"end": 19651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19674,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19701,
											"end": 19708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19698,
											"end": 19699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19695,
											"end": 19709,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19780,
											"end": 19789,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19775,
											"end": 19778,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19771,
											"end": 19790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19791,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19757,
											"end": 19763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19750,
											"end": 19792,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19831,
											"end": 19832,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19823,
											"end": 19829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19819,
											"end": 19833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19809,
											"end": 19833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19809,
											"end": 19833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19878,
											"end": 19880,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19867,
											"end": 19876,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19863,
											"end": 19881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19850,
											"end": 19881,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19850,
											"end": 19881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19724,
											"end": 19728,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19721,
											"end": 19722,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19717,
											"end": 19729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19712,
											"end": 19729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19712,
											"end": 19729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 19687,
											"end": 19895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19923,
											"end": 19929,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19914,
											"end": 19921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19911,
											"end": 19930,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 20087,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19908,
											"end": 20087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19981,
											"end": 19990,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19976,
											"end": 19979,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19972,
											"end": 19991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19966,
											"end": 19992,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 20066,
											"end": 20070,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 20058,
											"end": 20064,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20071,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20043,
											"end": 20052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 20024,
											"end": 20072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20072,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 20024,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20016,
											"end": 20022,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20009,
											"end": 20073,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19931,
											"end": 20087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 20087,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19908,
											"end": 20087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20133,
											"end": 20134,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20129,
											"end": 20130,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 20121,
											"end": 20127,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20117,
											"end": 20131,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 20113,
											"end": 20135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20107,
											"end": 20111,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20100,
											"end": 20136,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19535,
											"end": 20146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19535,
											"end": 20146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19535,
											"end": 20146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 20385,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 19498,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 20385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19088,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19088,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19088,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 20391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20630,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 20397,
											"end": 20630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20436,
											"end": 20439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20459,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 20477,
											"end": 20482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20459,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 20459,
											"end": 20483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20459,
											"end": 20483,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 20459,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20450,
											"end": 20483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20450,
											"end": 20483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20505,
											"end": 20571,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20498,
											"end": 20503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20495,
											"end": 20572,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20492,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 20492,
											"end": 20595,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20575,
											"end": 20593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 20575,
											"end": 20593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 20575,
											"end": 20593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20575,
											"end": 20593,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 20575,
											"end": 20593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20492,
											"end": 20595,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 20492,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20622,
											"end": 20623,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20615,
											"end": 20620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20611,
											"end": 20624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20604,
											"end": 20624,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20604,
											"end": 20624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20630,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20738,
											"end": 20749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20775,
											"end": 20778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20760,
											"end": 20778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20760,
											"end": 20778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20636,
											"end": 20784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20896,
											"end": 20899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20924,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 20957,
											"end": 20962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20924,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 20924,
											"end": 20963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20924,
											"end": 20963,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 20924,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20979,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 21061,
											"end": 21067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21056,
											"end": 21059,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20979,
											"end": 21068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 20979,
											"end": 21068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20979,
											"end": 21068,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 20979,
											"end": 21068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20972,
											"end": 21068,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20972,
											"end": 21068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 21135,
											"end": 21141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21130,
											"end": 21133,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21116,
											"end": 21121,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21112,
											"end": 21128,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 21077,
											"end": 21142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21142,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 21077,
											"end": 21142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21167,
											"end": 21173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21162,
											"end": 21165,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21158,
											"end": 21174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21151,
											"end": 21174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21151,
											"end": 21174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20900,
											"end": 21180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 21180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21366,
											"end": 21369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21388,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 21479,
											"end": 21482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21476,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 21388,
											"end": 21483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21483,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 21388,
											"end": 21483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21381,
											"end": 21483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21381,
											"end": 21483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21500,
											"end": 21595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 21591,
											"end": 21594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21582,
											"end": 21588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21500,
											"end": 21595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 21500,
											"end": 21595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21500,
											"end": 21595,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 21500,
											"end": 21595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21612,
											"end": 21615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21186,
											"end": 21621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21627,
											"end": 21874,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 21627,
											"end": 21874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21767,
											"end": 21801,
											"name": "PUSH",
											"source": 13,
											"value": "4D61737465725472616465436F6E74726163744E46543A206D61737465722074"
										},
										{
											"begin": 21763,
											"end": 21764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21755,
											"end": 21761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21751,
											"end": 21765,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21802,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21836,
											"end": 21866,
											"name": "PUSH",
											"source": 13,
											"value": "7261646520636F6E747261637420646F6573206E6F7420657869737400000000"
										},
										{
											"begin": 21831,
											"end": 21833,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21823,
											"end": 21829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21819,
											"end": 21834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21812,
											"end": 21867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21627,
											"end": 21874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21627,
											"end": 21874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21880,
											"end": 22246,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 21880,
											"end": 22246,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22022,
											"end": 22025,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22043,
											"end": 22110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 22107,
											"end": 22109,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 22102,
											"end": 22105,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22043,
											"end": 22110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 22043,
											"end": 22110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22043,
											"end": 22110,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 22043,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22119,
											"end": 22212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 22208,
											"end": 22211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22119,
											"end": 22212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 22119,
											"end": 22212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22119,
											"end": 22212,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 22119,
											"end": 22212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22237,
											"end": 22239,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22232,
											"end": 22235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22228,
											"end": 22240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22221,
											"end": 22240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22221,
											"end": 22240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21880,
											"end": 22246,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21880,
											"end": 22246,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21880,
											"end": 22246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21880,
											"end": 22246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22252,
											"end": 22671,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 22252,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22418,
											"end": 22422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22456,
											"end": 22458,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22445,
											"end": 22454,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22441,
											"end": 22459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22433,
											"end": 22459,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22433,
											"end": 22459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22505,
											"end": 22514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22499,
											"end": 22503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22495,
											"end": 22515,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22491,
											"end": 22492,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22480,
											"end": 22489,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22476,
											"end": 22493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22469,
											"end": 22516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22533,
											"end": 22664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 22659,
											"end": 22663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22533,
											"end": 22664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 22533,
											"end": 22664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22533,
											"end": 22664,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 22533,
											"end": 22664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22525,
											"end": 22664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22525,
											"end": 22664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22252,
											"end": 22671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22252,
											"end": 22671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22252,
											"end": 22671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22252,
											"end": 22671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22677,
											"end": 22775,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 22677,
											"end": 22775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22728,
											"end": 22734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22762,
											"end": 22767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22756,
											"end": 22768,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 22746,
											"end": 22768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22746,
											"end": 22768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22677,
											"end": 22775,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22677,
											"end": 22775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22677,
											"end": 22775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22677,
											"end": 22775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22864,
											"end": 22875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22904,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22893,
											"end": 22896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22886,
											"end": 22905,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22938,
											"end": 22942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22933,
											"end": 22936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22929,
											"end": 22943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22914,
											"end": 22943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22914,
											"end": 22943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23041,
											"end": 23044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23069,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 23101,
											"end": 23106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23069,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 23069,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23069,
											"end": 23107,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 23069,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 23186,
											"end": 23192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23181,
											"end": 23184,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 23123,
											"end": 23193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23193,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 23123,
											"end": 23193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23116,
											"end": 23193,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23116,
											"end": 23193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23202,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 23260,
											"end": 23266,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23255,
											"end": 23258,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23248,
											"end": 23252,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23241,
											"end": 23246,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23237,
											"end": 23253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23202,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 23202,
											"end": 23267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23202,
											"end": 23267,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 23202,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23292,
											"end": 23321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 23314,
											"end": 23320,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23292,
											"end": 23321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 23292,
											"end": 23321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23292,
											"end": 23321,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 23292,
											"end": 23321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23287,
											"end": 23290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23283,
											"end": 23322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23276,
											"end": 23322,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23276,
											"end": 23322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23045,
											"end": 23328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 23328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23529,
											"end": 23533,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23567,
											"end": 23570,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 23556,
											"end": 23565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23552,
											"end": 23571,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23544,
											"end": 23571,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23544,
											"end": 23571,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23581,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 23649,
											"end": 23650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23638,
											"end": 23647,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23634,
											"end": 23651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23625,
											"end": 23631,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 23581,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 23581,
											"end": 23652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23581,
											"end": 23652,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 23581,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23662,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 23730,
											"end": 23732,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23719,
											"end": 23728,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23715,
											"end": 23733,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23706,
											"end": 23712,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23662,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 23662,
											"end": 23734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23662,
											"end": 23734,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 23662,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23744,
											"end": 23816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 23812,
											"end": 23814,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23801,
											"end": 23810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23797,
											"end": 23815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23788,
											"end": 23794,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23744,
											"end": 23816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 23744,
											"end": 23816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23744,
											"end": 23816,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 23744,
											"end": 23816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23863,
											"end": 23872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23857,
											"end": 23861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23853,
											"end": 23873,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23848,
											"end": 23850,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23837,
											"end": 23846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23833,
											"end": 23851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 23874,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23891,
											"end": 23967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 23962,
											"end": 23966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 23959,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23891,
											"end": 23967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 23891,
											"end": 23967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23891,
											"end": 23967,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 23891,
											"end": 23967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23883,
											"end": 23967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23883,
											"end": 23967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24036,
											"end": 24041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24067,
											"end": 24073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24061,
											"end": 24074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 24052,
											"end": 24074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24052,
											"end": 24074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 24109,
											"end": 24114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 24083,
											"end": 24115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24115,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 24083,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23980,
											"end": 24121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24196,
											"end": 24202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24245,
											"end": 24247,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24233,
											"end": 24242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24224,
											"end": 24231,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24220,
											"end": 24243,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24216,
											"end": 24248,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 24213,
											"end": 24332,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24213,
											"end": 24332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 24213,
											"end": 24332,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 24251,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 24251,
											"end": 24330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24330,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 24251,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24213,
											"end": 24332,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 24213,
											"end": 24332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24371,
											"end": 24372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24396,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 24451,
											"end": 24458,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24442,
											"end": 24448,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24431,
											"end": 24440,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24427,
											"end": 24449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 24396,
											"end": 24459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24459,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 24396,
											"end": 24459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24386,
											"end": 24459,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24386,
											"end": 24459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24342,
											"end": 24469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24127,
											"end": 24476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24482,
											"end": 24662,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 24482,
											"end": 24662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24530,
											"end": 24607,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24527,
											"end": 24528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24520,
											"end": 24608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24627,
											"end": 24631,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 24624,
											"end": 24625,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 24617,
											"end": 24632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24651,
											"end": 24655,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 24648,
											"end": 24649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24641,
											"end": 24656,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24789,
											"end": 24793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24827,
											"end": 24829,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24816,
											"end": 24825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24812,
											"end": 24830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24804,
											"end": 24830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24804,
											"end": 24830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24840,
											"end": 24911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 24908,
											"end": 24909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24897,
											"end": 24906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24893,
											"end": 24910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24884,
											"end": 24890,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24840,
											"end": 24911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 24840,
											"end": 24911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24840,
											"end": 24911,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 24840,
											"end": 24911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24921,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 24989,
											"end": 24991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24978,
											"end": 24987,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24974,
											"end": 24992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24965,
											"end": 24971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24921,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 24921,
											"end": 24993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24921,
											"end": 24993,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 24921,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24668,
											"end": 25000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MasterTradeConsentContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getLatestMasterTradeContractDetails()": "2e9b6d62",
							"getMasterTradeContractDetails(uint256)": "f993d400",
							"isApprovedForAll(address,address)": "e985e9c5",
							"masterTradeContracts(uint256)": "a65c7494",
							"mintMasterTradeContract(address,string)": "9742db55",
							"name()": "06fdde03",
							"nextMasterTradeContractId()": "b3a599ee",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestMasterTradeContractDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct MasterTradeContractNFT.MasterTradeContract\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"masterTradeContractId\",\"type\":\"uint256\"}],\"name\":\"getMasterTradeContractDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct MasterTradeContractNFT.MasterTradeContract\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"masterTradeContracts\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"mintMasterTradeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMasterTradeContractId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MasterTradeConsentContract.sol\":\"MasterTradeContractNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MasterTradeConsentContract.sol\":{\"keccak256\":\"0xa42ac27a1c6b7e856923f8de24e5349a078cd36cd96bd927975aab43bd5b6b45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255942eb83892730abf5efe3b5fde57b41b72ea9e10c2e942ded984521d99cea\",\"dweb:/ipfs/QmfTkV52onPTkvifchZ3UKxnFQm22femCj6KWyiu23Rjp7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2952,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "masterTradeContracts",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MasterTradeContract)2947_storage)"
							},
							{
								"astId": 2954,
								"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
								"label": "nextMasterTradeContractId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(MasterTradeContract)2947_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract)",
								"numberOfBytes": "32",
								"value": "t_struct(MasterTradeContract)2947_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MasterTradeContract)2947_storage": {
								"encoding": "inplace",
								"label": "struct MasterTradeContractNFT.MasterTradeContract",
								"members": [
									{
										"astId": 2946,
										"contract": "contracts/MasterTradeConsentContract.sol:MasterTradeContractNFT",
										"label": "metadataURI",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1487,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1486
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1741
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1487,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1742,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1741,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1766,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1764,
										1776
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1765,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1777,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1554,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1778,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1777
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1777
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1456,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1456,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1456,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1486,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1486,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1486,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2831
						],
						"SignedMath": [
							2936
						],
						"Strings": [
							1741
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2832,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2831,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2937,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2936,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1496,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1494,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1499,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1497,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1506,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1515
														],
														"declarations": [
															{
																"constant": false,
																"id": 1515,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1518,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1516,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2831,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1524
														],
														"declarations": [
															{
																"constant": false,
																"id": 1524,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1523,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1531
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1515,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1533,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1548,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1535,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1496,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1509,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1538,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1542,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1547,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1546,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1549,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1550,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1513,
														"id": 1551,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1741,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1572,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2936_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2935,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1562,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1578,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1741,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1598,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1592,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1590,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2831,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1588,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1600,
																	1683,
																	1703
																],
																"referencedDeclaration": 1683,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1597,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1741,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"id": 1612,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1603,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1614,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1619,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1633,
														"indexExpression": {
															"hexValue": "31",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1665,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1651,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1653,
																	"indexExpression": {
																		"id": 1652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1654,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"initializationExpression": {
													"assignments": [
														1638
													],
													"declarations": [
														{
															"constant": false,
															"id": 1638,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1666,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1637,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1640,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1648,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1671,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1672,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1670,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1674,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1677,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1681,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1741,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1691,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1600,
															1683,
															1703
														],
														"referencedDeclaration": 1683,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1701,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1741,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1713,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1727,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1706,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1724,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1733,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1731,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1730,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1738,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1741,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1742,
							"src": "251:2847:7",
							"usedErrors": [
								1506
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1765
						],
						"IERC165": [
							1777
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1766,
							"sourceUnit": 1778,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1747,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "687:7:8"
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1765,
							"linearizedBaseContracts": [
								1765,
								1777
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1776
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1757,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1777",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1762,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1765,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1766,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1777,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2831
						]
					},
					"id": 2832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1780,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2831,
							"linearizedBaseContracts": [
								2831
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1783,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1788,
									"members": [
										{
											"id": 1784,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1785,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1786,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1787,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1818,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1801
														],
														"declarations": [
															{
																"constant": false,
																"id": 1801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1818,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1799,
															"id": 1812,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1799,
														"id": 1817,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2831,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1846,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1839,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1838,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1831,
														"id": 1845,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2831,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1888,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1866,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1869
														],
														"declarations": [
															{
																"constant": false,
																"id": 1869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1888,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1883,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1882,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1859,
														"id": 1887,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2831,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1908,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1915,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2831,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2831,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1957,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1962,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2831,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1975,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 1980,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2831,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1993,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1999,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2003,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2831,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2018,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2019,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2014,
															"id": 2021,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2024,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2028,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2037,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2831,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2163,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2052
														],
														"declarations": [
															{
																"constant": false,
																"id": 2052,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2054,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2058
														],
														"declarations": [
															{
																"constant": false,
																"id": 2058,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2057,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2060,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2068,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2064,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2052,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2065,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2050,
																	"id": 2067,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2076,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2073,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2075,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2081,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2086,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2092,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2094,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2099
														],
														"declarations": [
															{
																"constant": false,
																"id": 2099,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2101,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2157,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2160,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2161,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2050,
														"id": 2162,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2831,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2181
												],
												"declarations": [
													{
														"constant": false,
														"id": 2181,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2207,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"arguments": [
														{
															"id": 2183,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2184,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2185,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2165,
															2208
														],
														"referencedDeclaration": 2165,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2189,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2188,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2192,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2193,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2194,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2191,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2199,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2205,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2181,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2206,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2173,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2831,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2215,
															"id": 2220,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2224,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2319,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2226,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2487,
																			2522
																		],
																		"referencedDeclaration": 2487,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2318,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2235,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2236,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2240,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2246,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2247,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2248,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2257,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2258,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2259,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2270,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2277,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2278,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2279,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2280,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2281,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2290,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2291,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2292,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2301,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2302,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2303,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2312,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2314,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2311,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2215,
														"id": 2317,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2831,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2336,
														"initialValue": {
															"arguments": [
																{
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2333,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2320,
																	2355
																],
																"referencedDeclaration": 2320,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2339,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2326,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2338,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2341,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2342,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2330,
														"id": 2352,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2324,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2831,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"hexValue": "30",
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2483,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2412,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2426,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2425,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2440,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2442,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2455,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2457,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2471,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2470,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2481,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2484,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2485,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2831,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2520,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2499
														],
														"declarations": [
															{
																"constant": false,
																"id": 2499,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2520,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2503,
														"initialValue": {
															"arguments": [
																{
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2500,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2487,
																	2522
																],
																"referencedDeclaration": 2487,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2504,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2506,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2505,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2509,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2499,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2511,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2497,
														"id": 2519,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2491,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2831,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2650,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2533,
												"initialValue": {
													"hexValue": "30",
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2647,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2568,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2600,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2618,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2617,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2616,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2646,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2645,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2648,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2531,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2649,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2831,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2684,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2684,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2667,
														"initialValue": {
															"arguments": [
																{
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2664,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2651,
																	2686
																],
																"referencedDeclaration": 2651,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2668,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2670,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2669,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2673,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2663,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2675,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2654,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2661,
														"id": 2683,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2655,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2831,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2772,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"hexValue": "30",
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2769,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2770,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2695,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2771,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2831,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2809,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2785
														],
														"declarations": [
															{
																"constant": false,
																"id": 2785,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2809,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2784,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2789,
														"initialValue": {
															"arguments": [
																{
																	"id": 2787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2776,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2786,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2773,
																	2811
																],
																"referencedDeclaration": 2773,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2792,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2779,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2791,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2797,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2795,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2785,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2796,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2798,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2800,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2783,
														"id": 2808,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2777,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2831,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2822,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2828,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2831,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2832,
							"src": "203:14914:10",
							"usedErrors": [
								1783
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2936
						]
					},
					"id": 2937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2834,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2936,
							"linearizedBaseContracts": [
								2936
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2844,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2845,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2848,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2847,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2850,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2836,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2841,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2936,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2862,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2868,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2854,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2936,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2880,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2882,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2883,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2886,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2887,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2900,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2898,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2896,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2905,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2906,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2908,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2910,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2912,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2936,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2933,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2924,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2928,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2927,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2917,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2921,
														"id": 2932,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2936,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2937,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			},
			"contracts/MasterTradeConsentContract.sol": {
				"ast": {
					"absolutePath": "contracts/MasterTradeConsentContract.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"MasterTradeContractNFT": [
							3047
						],
						"Ownable": [
							147
						],
						"Strings": [
							1741
						]
					},
					"id": 3048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3048,
							"sourceUnit": 1294,
							"src": "58:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3048,
							"sourceUnit": 148,
							"src": "116:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2941,
										"name": "ERC721",
										"nameLocations": [
											"205:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "205:6:12"
									},
									"id": 2942,
									"nodeType": "InheritanceSpecifier",
									"src": "205:6:12"
								},
								{
									"baseName": {
										"id": 2943,
										"name": "Ownable",
										"nameLocations": [
											"213:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "213:7:12"
									},
									"id": 2944,
									"nodeType": "InheritanceSpecifier",
									"src": "213:7:12"
								}
							],
							"canonicalName": "MasterTradeContractNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3047,
							"linearizedBaseContracts": [
								3047,
								147,
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "MasterTradeContractNFT",
							"nameLocation": "179:22:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MasterTradeContractNFT.MasterTradeContract",
									"id": 2947,
									"members": [
										{
											"constant": false,
											"id": 2946,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "271:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2947,
											"src": "264:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2945,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "264:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MasterTradeContract",
									"nameLocation": "234:19:12",
									"nodeType": "StructDefinition",
									"scope": 3047,
									"src": "227:62:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a65c7494",
									"id": 2952,
									"mutability": "mutable",
									"name": "masterTradeContracts",
									"nameLocation": "342:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 3047,
									"src": "295:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MasterTradeContract_$2947_storage_$",
										"typeString": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract)"
									},
									"typeName": {
										"id": 2951,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2948,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "303:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "295:39:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MasterTradeContract_$2947_storage_$",
											"typeString": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2949,
												"name": "MasterTradeContract",
												"nameLocations": [
													"314:19:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2947,
												"src": "314:19:12"
											},
											"referencedDeclaration": 2947,
											"src": "314:19:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage_ptr",
												"typeString": "struct MasterTradeContractNFT.MasterTradeContract"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3a599ee",
									"id": 2954,
									"mutability": "mutable",
									"name": "nextMasterTradeContractId",
									"nameLocation": "383:25:12",
									"nodeType": "VariableDeclaration",
									"scope": 3047,
									"src": "368:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "514:2:12",
										"statements": []
									},
									"id": 2967,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2959,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2956,
													"src": "457:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2960,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2958,
												"name": "Ownable",
												"nameLocations": [
													"449:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "449:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "449:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "4d61737465725472616465436f6e74726163744e4654",
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "478:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ea809f61d445457d376946bca2cf22e359bf46419ed247d95eae2e603f0adc65",
														"typeString": "literal_string \"MasterTradeContractNFT\""
													},
													"value": "MasterTradeContractNFT"
												},
												{
													"hexValue": "4d54434e4654",
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "504:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_67d362aa0ec0db962bf8eca8f471417bdc24615553e17d06f51ef2c9f778738c",
														"typeString": "literal_string \"MTCNFT\""
													},
													"value": "MTCNFT"
												}
											],
											"id": 2964,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2961,
												"name": "ERC721",
												"nameLocations": [
													"471:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "471:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "471:42:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "435:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "427:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:22:12"
									},
									"returnParameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:12"
									},
									"scope": 3047,
									"src": "415:101:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "611:241:12",
										"statements": [
											{
												"assignments": [
													2977
												],
												"declarations": [
													{
														"constant": false,
														"id": 2977,
														"mutability": "mutable",
														"name": "masterTradeContractId",
														"nameLocation": "629:21:12",
														"nodeType": "VariableDeclaration",
														"scope": 2996,
														"src": "621:29:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "621:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2979,
												"initialValue": {
													"id": 2978,
													"name": "nextMasterTradeContractId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2954,
													"src": "653:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "621:57:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2981,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "694:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2982,
															"name": "masterTradeContractId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "698:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2980,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "688:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2984,
												"nodeType": "ExpressionStatement",
												"src": "688:32:12"
											},
											{
												"expression": {
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2985,
															"name": "masterTradeContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "730:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MasterTradeContract_$2947_storage_$",
																"typeString": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract storage ref)"
															}
														},
														"id": 2987,
														"indexExpression": {
															"id": 2986,
															"name": "masterTradeContractId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "751:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "730:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage",
															"typeString": "struct MasterTradeContractNFT.MasterTradeContract storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2989,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2971,
																"src": "796:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 2988,
															"name": "MasterTradeContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2947,
															"src": "776:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MasterTradeContract_$2947_storage_ptr_$",
																"typeString": "type(struct MasterTradeContractNFT.MasterTradeContract storage pointer)"
															}
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "776:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MasterTradeContract_$2947_memory_ptr",
															"typeString": "struct MasterTradeContractNFT.MasterTradeContract memory"
														}
													},
													"src": "730:78:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage",
														"typeString": "struct MasterTradeContractNFT.MasterTradeContract storage ref"
													}
												},
												"id": 2992,
												"nodeType": "ExpressionStatement",
												"src": "730:78:12"
											},
											{
												"expression": {
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "818:27:12",
													"subExpression": {
														"id": 2993,
														"name": "nextMasterTradeContractId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "818:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "818:27:12"
											}
										]
									},
									"functionSelector": "9742db55",
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2974,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2973,
												"name": "onlyOwner",
												"nameLocations": [
													"601:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "601:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "601:9:12"
										}
									],
									"name": "mintMasterTradeContract",
									"nameLocation": "531:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "563:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "555:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "581:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "567:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2970,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "567:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:39:12"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:12"
									},
									"scope": 3047,
									"src": "522:330:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3025,
										"nodeType": "Block",
										"src": "977:225:12",
										"statements": [
											{
												"assignments": [
													3006
												],
												"declarations": [
													{
														"constant": false,
														"id": 3006,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "995:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3025,
														"src": "987:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3005,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "987:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3010,
												"initialValue": {
													"arguments": [
														{
															"id": 3008,
															"name": "masterTradeContractId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "1011:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3007,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "1003:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "987:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3012,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3006,
																"src": "1051:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1068:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1060:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3013,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1060:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1060:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1051:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61737465725472616465436f6e74726163744e46543a206d617374657220747261646520636f6e747261637420646f6573206e6f74206578697374",
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1072:62:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89",
																"typeString": "literal_string \"MasterTradeContractNFT: master trade contract does not exist\""
															},
															"value": "MasterTradeContractNFT: master trade contract does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79fe7b9ee89917165234e1bd5d30791bc65bbc5b29ff4b13e285328c41d19e89",
																"typeString": "literal_string \"MasterTradeContractNFT: master trade contract does not exist\""
															}
														],
														"id": 3011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1043:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:92:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3020,
												"nodeType": "ExpressionStatement",
												"src": "1043:92:12"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3021,
														"name": "masterTradeContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "1152:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MasterTradeContract_$2947_storage_$",
															"typeString": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract storage ref)"
														}
													},
													"id": 3023,
													"indexExpression": {
														"id": 3022,
														"name": "masterTradeContractId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "1173:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1152:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage",
														"typeString": "struct MasterTradeContractNFT.MasterTradeContract storage ref"
													}
												},
												"functionReturnParameters": 3004,
												"id": 3024,
												"nodeType": "Return",
												"src": "1145:50:12"
											}
										]
									},
									"functionSelector": "f993d400",
									"id": 3026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMasterTradeContractDetails",
									"nameLocation": "867:29:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "masterTradeContractId",
												"nameLocation": "905:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "897:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:31:12"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "949:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MasterTradeContract_$2947_memory_ptr",
													"typeString": "struct MasterTradeContractNFT.MasterTradeContract"
												},
												"typeName": {
													"id": 3002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3001,
														"name": "MasterTradeContract",
														"nameLocations": [
															"949:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2947,
														"src": "949:19:12"
													},
													"referencedDeclaration": 2947,
													"src": "949:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage_ptr",
														"typeString": "struct MasterTradeContractNFT.MasterTradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:28:12"
									},
									"scope": 3047,
									"src": "858:344:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "1304:182:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3033,
																"name": "nextMasterTradeContractId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2954,
																"src": "1322:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1350:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1322:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61737465725472616465436f6e74726163744e46543a206e6f206d617374657220747261646520636f6e747261637473206578697374",
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1353:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886",
																"typeString": "literal_string \"MasterTradeContractNFT: no master trade contracts exist\""
															},
															"value": "MasterTradeContractNFT: no master trade contracts exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c101162e2f97413855fdef83509db5c318e2d3ff8d31c7fc26d5eac8b45d886",
																"typeString": "literal_string \"MasterTradeContractNFT: no master trade contracts exist\""
															}
														],
														"id": 3032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1314:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:97:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3038,
												"nodeType": "ExpressionStatement",
												"src": "1314:97:12"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3039,
														"name": "masterTradeContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "1428:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MasterTradeContract_$2947_storage_$",
															"typeString": "mapping(uint256 => struct MasterTradeContractNFT.MasterTradeContract storage ref)"
														}
													},
													"id": 3043,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3040,
															"name": "nextMasterTradeContractId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2954,
															"src": "1449:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1477:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1449:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1428:51:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage",
														"typeString": "struct MasterTradeContractNFT.MasterTradeContract storage ref"
													}
												},
												"functionReturnParameters": 3031,
												"id": 3044,
												"nodeType": "Return",
												"src": "1421:58:12"
											}
										]
									},
									"functionSelector": "2e9b6d62",
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestMasterTradeContractDetails",
									"nameLocation": "1217:35:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:2:12"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "1276:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MasterTradeContract_$2947_memory_ptr",
													"typeString": "struct MasterTradeContractNFT.MasterTradeContract"
												},
												"typeName": {
													"id": 3029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3028,
														"name": "MasterTradeContract",
														"nameLocations": [
															"1276:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2947,
														"src": "1276:19:12"
													},
													"referencedDeclaration": 2947,
													"src": "1276:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MasterTradeContract_$2947_storage_ptr",
														"typeString": "struct MasterTradeContractNFT.MasterTradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:28:12"
									},
									"scope": 3047,
									"src": "1208:278:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3048,
							"src": "170:1318:12",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327
							]
						}
					],
					"src": "33:1456:12"
				},
				"id": 12
			}
		}
	}
}